# 1 "/home/josh/laser_satellite_receiver/c_project/test.c"
# 1 "/home/josh/laser_satellite_receiver/c_project//"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "/home/josh/laser_satellite_receiver/c_project/test.c"
# 1 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 1
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdint.h" 1 3 4
# 9 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdint.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 26 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 461 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 452 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 453 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 454 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 462 "/usr/include/features.h" 2 3 4
# 485 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 486 "/usr/include/features.h" 2 3 4
# 34 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 2 3 4
# 27 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4



# 31 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;






typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;



typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 142 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/time64.h" 1 3 4
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 28 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wchar.h" 1 3 4
# 29 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 30 "/usr/include/stdint.h" 2 3 4




# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 35 "/usr/include/stdint.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3 4
typedef __uint8_t uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
# 38 "/usr/include/stdint.h" 2 3 4





typedef __int_least8_t int_least8_t;
typedef __int_least16_t int_least16_t;
typedef __int_least32_t int_least32_t;
typedef __int_least64_t int_least64_t;


typedef __uint_least8_t uint_least8_t;
typedef __uint_least16_t uint_least16_t;
typedef __uint_least32_t uint_least32_t;
typedef __uint_least64_t uint_least64_t;





typedef signed char int_fast8_t;

typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
# 71 "/usr/include/stdint.h" 3 4
typedef unsigned char uint_fast8_t;

typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
# 87 "/usr/include/stdint.h" 3 4
typedef long int intptr_t;


typedef unsigned long int uintptr_t;
# 101 "/usr/include/stdint.h" 3 4
typedef __intmax_t intmax_t;
typedef __uintmax_t uintmax_t;
# 10 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdint.h" 2 3 4
# 2 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 2
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdbool.h" 1 3 4
# 3 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 2
# 1 "/usr/local/include/liquid/liquid.h" 1 3
# 33 "/usr/local/include/liquid/liquid.h" 3
# 1 "/usr/include/inttypes.h" 1 3 4
# 34 "/usr/include/inttypes.h" 3 4
typedef int __gwchar_t;
# 266 "/usr/include/inttypes.h" 3 4





typedef struct
  {
    long int quot;
    long int rem;
  } imaxdiv_t;
# 290 "/usr/include/inttypes.h" 3 4
extern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern intmax_t strtoimax (const char *__restrict __nptr,
      char **__restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t strtoumax (const char *__restrict __nptr,
       char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern intmax_t wcstoimax (const __gwchar_t *__restrict __nptr,
      __gwchar_t **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t wcstoumax (const __gwchar_t *__restrict __nptr,
       __gwchar_t ** __restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));
# 432 "/usr/include/inttypes.h" 3 4

# 34 "/usr/local/include/liquid/liquid.h" 2 3
# 58 "/usr/local/include/liquid/liquid.h" 3
extern const char liquid_version[];
const char * liquid_libversion(void);
int liquid_libversion_number(void);
# 72 "/usr/local/include/liquid/liquid.h" 3
typedef enum {

    LIQUID_OK=0,


    LIQUID_EINT,



    LIQUID_EIOBJ,





    LIQUID_EICONFIG,




    LIQUID_EIVAL,




    LIQUID_EIRANGE,



    LIQUID_EIMODE,


    LIQUID_EUMODE,




    LIQUID_ENOINIT,



    LIQUID_EIMEM,






    LIQUID_EIO,

} liquid_error_code;


extern const char * liquid_error_str[12];
const char * liquid_error_info(liquid_error_code _code);
# 139 "/usr/local/include/liquid/liquid.h" 3
# 1 "/usr/include/complex.h" 1 3 4
# 26 "/usr/include/complex.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/complex.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 1 3 4
# 30 "/usr/include/complex.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 1 3 4
# 120 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 2 3 4
# 121 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 2 3 4
# 33 "/usr/include/complex.h" 2 3 4


# 106 "/usr/include/complex.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 1 3 4
# 55 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3 4
extern double _Complex cacos (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __cacos (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern double _Complex casin (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __casin (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern double _Complex catan (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __catan (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern double _Complex ccos (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __ccos (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern double _Complex csin (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __csin (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern double _Complex ctan (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __ctan (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern double _Complex cacosh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __cacosh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern double _Complex casinh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __casinh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern double _Complex catanh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __catanh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern double _Complex ccosh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __ccosh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern double _Complex csinh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __csinh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern double _Complex ctanh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __ctanh (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern double _Complex cexp (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __cexp (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern double _Complex clog (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __clog (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));
# 103 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3 4
extern double _Complex cpow (double _Complex __x, double _Complex __y) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __cpow (double _Complex __x, double _Complex __y) __attribute__ ((__nothrow__ , __leaf__));


extern double _Complex csqrt (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __csqrt (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern double cabs (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double __cabs (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern double carg (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double __carg (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern double _Complex conj (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __conj (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern double _Complex cproj (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double _Complex __cproj (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern double cimag (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double __cimag (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern double creal (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern double __creal (double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));
# 107 "/usr/include/complex.h" 2 3 4






# 1 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 1 3 4
# 55 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3 4
extern float _Complex cacosf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __cacosf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern float _Complex casinf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __casinf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern float _Complex catanf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __catanf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern float _Complex ccosf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __ccosf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern float _Complex csinf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __csinf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern float _Complex ctanf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __ctanf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern float _Complex cacoshf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __cacoshf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern float _Complex casinhf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __casinhf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern float _Complex catanhf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __catanhf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern float _Complex ccoshf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __ccoshf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern float _Complex csinhf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __csinhf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern float _Complex ctanhf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __ctanhf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern float _Complex cexpf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __cexpf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern float _Complex clogf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __clogf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));
# 103 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3 4
extern float _Complex cpowf (float _Complex __x, float _Complex __y) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __cpowf (float _Complex __x, float _Complex __y) __attribute__ ((__nothrow__ , __leaf__));


extern float _Complex csqrtf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __csqrtf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern float cabsf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float __cabsf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern float cargf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float __cargf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern float _Complex conjf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __conjf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern float _Complex cprojf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float _Complex __cprojf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern float cimagf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float __cimagf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern float crealf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern float __crealf (float _Complex __z) __attribute__ ((__nothrow__ , __leaf__));
# 114 "/usr/include/complex.h" 2 3 4
# 129 "/usr/include/complex.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 1 3 4
# 55 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3 4
extern long double _Complex cacosl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __cacosl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern long double _Complex casinl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __casinl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern long double _Complex catanl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __catanl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern long double _Complex ccosl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __ccosl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern long double _Complex csinl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __csinl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern long double _Complex ctanl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __ctanl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern long double _Complex cacoshl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __cacoshl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern long double _Complex casinhl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __casinhl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern long double _Complex catanhl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __catanhl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern long double _Complex ccoshl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __ccoshl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern long double _Complex csinhl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __csinhl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));

extern long double _Complex ctanhl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __ctanhl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern long double _Complex cexpl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __cexpl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern long double _Complex clogl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __clogl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));
# 103 "/usr/include/x86_64-linux-gnu/bits/cmathcalls.h" 3 4
extern long double _Complex cpowl (long double _Complex __x, long double _Complex __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __cpowl (long double _Complex __x, long double _Complex __y) __attribute__ ((__nothrow__ , __leaf__));


extern long double _Complex csqrtl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __csqrtl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern long double cabsl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double __cabsl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern long double cargl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double __cargl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern long double _Complex conjl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __conjl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern long double _Complex cprojl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double _Complex __cprojl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));





extern long double cimagl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double __cimagl (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));


extern long double creall (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double __creall (long double _Complex __z) __attribute__ ((__nothrow__ , __leaf__));
# 130 "/usr/include/complex.h" 2 3 4
# 222 "/usr/include/complex.h" 3 4

# 140 "/usr/local/include/liquid/liquid.h" 2 3
# 148 "/usr/local/include/liquid/liquid.h" 3
typedef float _Complex liquid_float_complex;
typedef double _Complex liquid_double_complex;






typedef enum {
    LIQUID_AGC_SQUELCH_UNKNOWN=0,
    LIQUID_AGC_SQUELCH_ENABLED,
    LIQUID_AGC_SQUELCH_RISE,
    LIQUID_AGC_SQUELCH_SIGNALHI,
    LIQUID_AGC_SQUELCH_FALL,
    LIQUID_AGC_SQUELCH_SIGNALLO,
    LIQUID_AGC_SQUELCH_TIMEOUT,
    LIQUID_AGC_SQUELCH_DISABLED,
} agc_squelch_mode;
# 325 "/usr/local/include/liquid/liquid.h" 3
typedef struct agc_crcf_s * agc_crcf; agc_crcf agc_crcf_create(void); int agc_crcf_destroy(agc_crcf _q); int agc_crcf_print(agc_crcf _q); int agc_crcf_reset(agc_crcf _q); int agc_crcf_execute(agc_crcf _q, liquid_float_complex _x, liquid_float_complex * _y); int agc_crcf_execute_block(agc_crcf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); int agc_crcf_lock(agc_crcf _q); int agc_crcf_unlock(agc_crcf _q); int agc_crcf_is_locked(agc_crcf _q); int agc_crcf_set_bandwidth(agc_crcf _q, float _bt); float agc_crcf_get_bandwidth(agc_crcf _q); float agc_crcf_get_signal_level(agc_crcf _q); int agc_crcf_set_signal_level(agc_crcf _q, float _x2); float agc_crcf_get_rssi(agc_crcf _q); int agc_crcf_set_rssi(agc_crcf _q, float _rssi); float agc_crcf_get_gain(agc_crcf _q); int agc_crcf_set_gain(agc_crcf _q, float _gain); float agc_crcf_get_scale(agc_crcf _q); int agc_crcf_set_scale(agc_crcf _q, float _scale); int agc_crcf_init(agc_crcf _q, liquid_float_complex * _x, unsigned int _n); int agc_crcf_squelch_enable(agc_crcf _q); int agc_crcf_squelch_disable(agc_crcf _q); int agc_crcf_squelch_is_enabled(agc_crcf _q); int agc_crcf_squelch_set_threshold(agc_crcf _q, float _thresh); float agc_crcf_squelch_get_threshold(agc_crcf _q); int agc_crcf_squelch_set_timeout(agc_crcf _q, unsigned int _timeout); unsigned int agc_crcf_squelch_get_timeout(agc_crcf _q); int agc_crcf_squelch_get_status(agc_crcf _q);
typedef struct agc_rrrf_s * agc_rrrf; agc_rrrf agc_rrrf_create(void); int agc_rrrf_destroy(agc_rrrf _q); int agc_rrrf_print(agc_rrrf _q); int agc_rrrf_reset(agc_rrrf _q); int agc_rrrf_execute(agc_rrrf _q, float _x, float * _y); int agc_rrrf_execute_block(agc_rrrf _q, float * _x, unsigned int _n, float * _y); int agc_rrrf_lock(agc_rrrf _q); int agc_rrrf_unlock(agc_rrrf _q); int agc_rrrf_is_locked(agc_rrrf _q); int agc_rrrf_set_bandwidth(agc_rrrf _q, float _bt); float agc_rrrf_get_bandwidth(agc_rrrf _q); float agc_rrrf_get_signal_level(agc_rrrf _q); int agc_rrrf_set_signal_level(agc_rrrf _q, float _x2); float agc_rrrf_get_rssi(agc_rrrf _q); int agc_rrrf_set_rssi(agc_rrrf _q, float _rssi); float agc_rrrf_get_gain(agc_rrrf _q); int agc_rrrf_set_gain(agc_rrrf _q, float _gain); float agc_rrrf_get_scale(agc_rrrf _q); int agc_rrrf_set_scale(agc_rrrf _q, float _scale); int agc_rrrf_init(agc_rrrf _q, float * _x, unsigned int _n); int agc_rrrf_squelch_enable(agc_rrrf _q); int agc_rrrf_squelch_disable(agc_rrrf _q); int agc_rrrf_squelch_is_enabled(agc_rrrf _q); int agc_rrrf_squelch_set_threshold(agc_rrrf _q, float _thresh); float agc_rrrf_squelch_get_threshold(agc_rrrf _q); int agc_rrrf_squelch_set_timeout(agc_rrrf _q, unsigned int _timeout); unsigned int agc_rrrf_squelch_get_timeout(agc_rrrf _q); int agc_rrrf_squelch_get_status(agc_rrrf _q);
# 335 "/usr/local/include/liquid/liquid.h" 3
typedef struct cvsd_s * cvsd;






cvsd cvsd_create(unsigned int _num_bits,
                 float _zeta,
                 float _alpha);


int cvsd_destroy(cvsd _q);


int cvsd_print(cvsd _q);


unsigned char cvsd_encode(cvsd _q, float _audio_sample);
float cvsd_decode(cvsd _q, unsigned char _bit);


int cvsd_encode8(cvsd _q, float * _audio, unsigned char * _data);
int cvsd_decode8(cvsd _q, unsigned char _data, float * _audio);
# 460 "/usr/local/include/liquid/liquid.h" 3
typedef struct cbufferf_s * cbufferf; cbufferf cbufferf_create(unsigned int _max_size); cbufferf cbufferf_create_max(unsigned int _max_size, unsigned int _max_read); int cbufferf_destroy(cbufferf _q); int cbufferf_print(cbufferf _q); int cbufferf_debug_print(cbufferf _q); int cbufferf_reset(cbufferf _q); unsigned int cbufferf_size(cbufferf _q); unsigned int cbufferf_max_size(cbufferf _q); unsigned int cbufferf_max_read(cbufferf _q); unsigned int cbufferf_space_available(cbufferf _q); int cbufferf_is_empty(cbufferf _q); int cbufferf_is_full(cbufferf _q); int cbufferf_push(cbufferf _q, float _v); int cbufferf_write(cbufferf _q, float * _v, unsigned int _n); int cbufferf_pop(cbufferf _q, float * _v); int cbufferf_read(cbufferf _q, unsigned int _num_requested, float ** _v, unsigned int * _num_read); int cbufferf_release(cbufferf _q, unsigned int _n);
typedef struct cbuffercf_s * cbuffercf; cbuffercf cbuffercf_create(unsigned int _max_size); cbuffercf cbuffercf_create_max(unsigned int _max_size, unsigned int _max_read); int cbuffercf_destroy(cbuffercf _q); int cbuffercf_print(cbuffercf _q); int cbuffercf_debug_print(cbuffercf _q); int cbuffercf_reset(cbuffercf _q); unsigned int cbuffercf_size(cbuffercf _q); unsigned int cbuffercf_max_size(cbuffercf _q); unsigned int cbuffercf_max_read(cbuffercf _q); unsigned int cbuffercf_space_available(cbuffercf _q); int cbuffercf_is_empty(cbuffercf _q); int cbuffercf_is_full(cbuffercf _q); int cbuffercf_push(cbuffercf _q, liquid_float_complex _v); int cbuffercf_write(cbuffercf _q, liquid_float_complex * _v, unsigned int _n); int cbuffercf_pop(cbuffercf _q, liquid_float_complex * _v); int cbuffercf_read(cbuffercf _q, unsigned int _num_requested, liquid_float_complex ** _v, unsigned int * _num_read); int cbuffercf_release(cbuffercf _q, unsigned int _n);
# 548 "/usr/local/include/liquid/liquid.h" 3
typedef struct windowf_s * windowf; windowf windowf_create(unsigned int _n); windowf windowf_recreate(windowf _q, unsigned int _n); int windowf_destroy(windowf _q); int windowf_print(windowf _q); int windowf_debug_print(windowf _q); int windowf_reset(windowf _q); int windowf_read(windowf _q, float ** _v); int windowf_index(windowf _q, unsigned int _i, float * _v); int windowf_push(windowf _q, float _v); int windowf_write(windowf _q, float * _v, unsigned int _n);
typedef struct windowcf_s * windowcf; windowcf windowcf_create(unsigned int _n); windowcf windowcf_recreate(windowcf _q, unsigned int _n); int windowcf_destroy(windowcf _q); int windowcf_print(windowcf _q); int windowcf_debug_print(windowcf _q); int windowcf_reset(windowcf _q); int windowcf_read(windowcf _q, liquid_float_complex ** _v); int windowcf_index(windowcf _q, unsigned int _i, liquid_float_complex * _v); int windowcf_push(windowcf _q, liquid_float_complex _v); int windowcf_write(windowcf _q, liquid_float_complex * _v, unsigned int _n);
# 602 "/usr/local/include/liquid/liquid.h" 3
typedef struct wdelayf_s * wdelayf; wdelayf wdelayf_create(unsigned int _delay); wdelayf wdelayf_recreate(wdelayf _q, unsigned int _delay); int wdelayf_destroy(wdelayf _q); int wdelayf_print(wdelayf _q); int wdelayf_reset(wdelayf _q); int wdelayf_read(wdelayf _q, float * _v); int wdelayf_push(wdelayf _q, float _v);
typedef struct wdelaycf_s * wdelaycf; wdelaycf wdelaycf_create(unsigned int _delay); wdelaycf wdelaycf_recreate(wdelaycf _q, unsigned int _delay); int wdelaycf_destroy(wdelaycf _q); int wdelaycf_print(wdelaycf _q); int wdelaycf_reset(wdelaycf _q); int wdelaycf_read(wdelaycf _q, liquid_float_complex * _v); int wdelaycf_push(wdelaycf _q, liquid_float_complex _v);
# 683 "/usr/local/include/liquid/liquid.h" 3
typedef struct channel_cccf_s * channel_cccf; channel_cccf channel_cccf_create(void); int channel_cccf_destroy(channel_cccf _q); int channel_cccf_print(channel_cccf _q); int channel_cccf_add_awgn(channel_cccf _q, float _N0dB, float _SNRdB); int channel_cccf_add_carrier_offset(channel_cccf _q, float _frequency, float _phase); int channel_cccf_add_multipath(channel_cccf _q, liquid_float_complex * _h, unsigned int _h_len); int channel_cccf_add_shadowing(channel_cccf _q, float _sigma, float _fd); int channel_cccf_execute(channel_cccf _q, liquid_float_complex _x, liquid_float_complex * _y); int channel_cccf_execute_block(channel_cccf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);
# 747 "/usr/local/include/liquid/liquid.h" 3
typedef struct tvmpch_cccf_s * tvmpch_cccf; tvmpch_cccf tvmpch_cccf_create(unsigned int _n, float _std, float _tau); int tvmpch_cccf_destroy(tvmpch_cccf _q); int tvmpch_cccf_reset(tvmpch_cccf _q); int tvmpch_cccf_print(tvmpch_cccf _q); int tvmpch_cccf_push(tvmpch_cccf _q, liquid_float_complex _x); int tvmpch_cccf_execute(tvmpch_cccf _q, liquid_float_complex * _y); int tvmpch_cccf_execute_block(tvmpch_cccf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);
# 845 "/usr/local/include/liquid/liquid.h" 3
typedef struct dotprod_rrrf_s * dotprod_rrrf; int dotprod_rrrf_run( float * _v, float * _x, unsigned int _n, float * _y); int dotprod_rrrf_run4(float * _v, float * _x, unsigned int _n, float * _y); dotprod_rrrf dotprod_rrrf_create(float * _v, unsigned int _n); dotprod_rrrf dotprod_rrrf_create_rev(float * _v, unsigned int _n); dotprod_rrrf dotprod_rrrf_recreate(dotprod_rrrf _q, float * _v, unsigned int _n); dotprod_rrrf dotprod_rrrf_recreate_rev(dotprod_rrrf _q, float * _v, unsigned int _n); int dotprod_rrrf_destroy(dotprod_rrrf _q); int dotprod_rrrf_print(dotprod_rrrf _q); int dotprod_rrrf_execute(dotprod_rrrf _q, float * _x, float * _y);




typedef struct dotprod_cccf_s * dotprod_cccf; int dotprod_cccf_run( liquid_float_complex * _v, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); int dotprod_cccf_run4(liquid_float_complex * _v, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); dotprod_cccf dotprod_cccf_create(liquid_float_complex * _v, unsigned int _n); dotprod_cccf dotprod_cccf_create_rev(liquid_float_complex * _v, unsigned int _n); dotprod_cccf dotprod_cccf_recreate(dotprod_cccf _q, liquid_float_complex * _v, unsigned int _n); dotprod_cccf dotprod_cccf_recreate_rev(dotprod_cccf _q, liquid_float_complex * _v, unsigned int _n); int dotprod_cccf_destroy(dotprod_cccf _q); int dotprod_cccf_print(dotprod_cccf _q); int dotprod_cccf_execute(dotprod_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y);




typedef struct dotprod_crcf_s * dotprod_crcf; int dotprod_crcf_run( float * _v, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); int dotprod_crcf_run4(float * _v, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); dotprod_crcf dotprod_crcf_create(float * _v, unsigned int _n); dotprod_crcf dotprod_crcf_create_rev(float * _v, unsigned int _n); dotprod_crcf dotprod_crcf_recreate(dotprod_crcf _q, float * _v, unsigned int _n); dotprod_crcf dotprod_crcf_recreate_rev(dotprod_crcf _q, float * _v, unsigned int _n); int dotprod_crcf_destroy(dotprod_crcf _q); int dotprod_crcf_print(dotprod_crcf _q); int dotprod_crcf_execute(dotprod_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y);
# 864 "/usr/local/include/liquid/liquid.h" 3
float liquid_sumsqf(float * _v,
                    unsigned int _n);

float liquid_sumsqcf(liquid_float_complex * _v,
                     unsigned int _n);
# 1016 "/usr/local/include/liquid/liquid.h" 3
typedef struct eqlms_rrrf_s * eqlms_rrrf; eqlms_rrrf eqlms_rrrf_create(float * _h, unsigned int _n); eqlms_rrrf eqlms_rrrf_create_rnyquist(int _type, unsigned int _k, unsigned int _m, float _beta, float _dt); eqlms_rrrf eqlms_rrrf_create_lowpass(unsigned int _n, float _fc); int eqlms_rrrf_destroy(eqlms_rrrf _q); int eqlms_rrrf_reset(eqlms_rrrf _q); int eqlms_rrrf_print(eqlms_rrrf _q); float eqlms_rrrf_get_bw(eqlms_rrrf _q); int eqlms_rrrf_set_bw(eqlms_rrrf _q, float _lambda); unsigned int eqlms_rrrf_get_length(eqlms_rrrf _q); const float * eqlms_rrrf_get_coefficients(eqlms_rrrf _q); int eqlms_rrrf_copy_coefficients(eqlms_rrrf _q, float * _w); int eqlms_rrrf_push(eqlms_rrrf _q, float _x); int eqlms_rrrf_push_block(eqlms_rrrf _q, float * _x, unsigned int _n); int eqlms_rrrf_execute(eqlms_rrrf _q, float * _y); int eqlms_rrrf_decim_execute(eqlms_rrrf _q, float * _x, float * _y, unsigned int _k); int eqlms_rrrf_execute_block(eqlms_rrrf _q, unsigned int _k, float * _x, unsigned int _n, float * _y); int eqlms_rrrf_step(eqlms_rrrf _q, float _d, float _d_hat); int eqlms_rrrf_step_blind(eqlms_rrrf _q, float _d_hat); int eqlms_rrrf_train(eqlms_rrrf _q, float * _w, float * _x, float * _d, unsigned int _n);
typedef struct eqlms_cccf_s * eqlms_cccf; eqlms_cccf eqlms_cccf_create(liquid_float_complex * _h, unsigned int _n); eqlms_cccf eqlms_cccf_create_rnyquist(int _type, unsigned int _k, unsigned int _m, float _beta, float _dt); eqlms_cccf eqlms_cccf_create_lowpass(unsigned int _n, float _fc); int eqlms_cccf_destroy(eqlms_cccf _q); int eqlms_cccf_reset(eqlms_cccf _q); int eqlms_cccf_print(eqlms_cccf _q); float eqlms_cccf_get_bw(eqlms_cccf _q); int eqlms_cccf_set_bw(eqlms_cccf _q, float _lambda); unsigned int eqlms_cccf_get_length(eqlms_cccf _q); const liquid_float_complex * eqlms_cccf_get_coefficients(eqlms_cccf _q); int eqlms_cccf_copy_coefficients(eqlms_cccf _q, liquid_float_complex * _w); int eqlms_cccf_push(eqlms_cccf _q, liquid_float_complex _x); int eqlms_cccf_push_block(eqlms_cccf _q, liquid_float_complex * _x, unsigned int _n); int eqlms_cccf_execute(eqlms_cccf _q, liquid_float_complex * _y); int eqlms_cccf_decim_execute(eqlms_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y, unsigned int _k); int eqlms_cccf_execute_block(eqlms_cccf _q, unsigned int _k, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); int eqlms_cccf_step(eqlms_cccf _q, liquid_float_complex _d, liquid_float_complex _d_hat); int eqlms_cccf_step_blind(eqlms_cccf _q, liquid_float_complex _d_hat); int eqlms_cccf_train(eqlms_cccf _q, liquid_float_complex * _w, liquid_float_complex * _x, liquid_float_complex * _d, unsigned int _n);
# 1098 "/usr/local/include/liquid/liquid.h" 3
typedef struct eqrls_rrrf_s * eqrls_rrrf; eqrls_rrrf eqrls_rrrf_create(float * _h, unsigned int _n); eqrls_rrrf eqrls_rrrf_recreate(eqrls_rrrf _q, float * _h, unsigned int _n); int eqrls_rrrf_destroy(eqrls_rrrf _q); int eqrls_rrrf_reset(eqrls_rrrf _q); int eqrls_rrrf_print(eqrls_rrrf _q); float eqrls_rrrf_get_bw(eqrls_rrrf _q); int eqrls_rrrf_set_bw(eqrls_rrrf _q, float _mu); int eqrls_rrrf_push(eqrls_rrrf _q, float _x); int eqrls_rrrf_execute(eqrls_rrrf _q, float * _y); int eqrls_rrrf_step(eqrls_rrrf _q, float _d, float _d_hat); int eqrls_rrrf_get_weights(eqrls_rrrf _q, float * _w); int eqrls_rrrf_train(eqrls_rrrf _q, float * _w, float * _x, float * _d, unsigned int _n);
typedef struct eqrls_cccf_s * eqrls_cccf; eqrls_cccf eqrls_cccf_create(liquid_float_complex * _h, unsigned int _n); eqrls_cccf eqrls_cccf_recreate(eqrls_cccf _q, liquid_float_complex * _h, unsigned int _n); int eqrls_cccf_destroy(eqrls_cccf _q); int eqrls_cccf_reset(eqrls_cccf _q); int eqrls_cccf_print(eqrls_cccf _q); float eqrls_cccf_get_bw(eqrls_cccf _q); int eqrls_cccf_set_bw(eqrls_cccf _q, float _mu); int eqrls_cccf_push(eqrls_cccf _q, liquid_float_complex _x); int eqrls_cccf_execute(eqrls_cccf _q, liquid_float_complex * _y); int eqrls_cccf_step(eqrls_cccf _q, liquid_float_complex _d, liquid_float_complex _d_hat); int eqrls_cccf_get_weights(eqrls_cccf _q, liquid_float_complex * _w); int eqrls_cccf_train(eqrls_cccf _q, liquid_float_complex * _w, liquid_float_complex * _x, liquid_float_complex * _d, unsigned int _n);
# 1115 "/usr/local/include/liquid/liquid.h" 3
typedef enum {
    LIQUID_CRC_UNKNOWN=0,
    LIQUID_CRC_NONE,
    LIQUID_CRC_CHECKSUM,
    LIQUID_CRC_8,
    LIQUID_CRC_16,
    LIQUID_CRC_24,
    LIQUID_CRC_32
} crc_scheme;


extern const char * crc_scheme_str[7][2];


void liquid_print_crc_schemes();


crc_scheme liquid_getopt_str2crc(const char * _str);


unsigned int crc_get_length(crc_scheme _scheme);





unsigned int crc_generate_key(crc_scheme _scheme,
                              unsigned char * _msg,
                              unsigned int _n);





int crc_append_key(crc_scheme _scheme,
                   unsigned char * _msg,
                   unsigned int _n);






int crc_validate_message(crc_scheme _scheme,
                         unsigned char * _msg,
                         unsigned int _n,
                         unsigned int _key);





int crc_check_key(crc_scheme _scheme,
                  unsigned char * _msg,
                  unsigned int _n);


unsigned int crc_sizeof_key(crc_scheme _scheme);




typedef enum {
    LIQUID_FEC_UNKNOWN=0,
    LIQUID_FEC_NONE,
    LIQUID_FEC_REP3,
    LIQUID_FEC_REP5,
    LIQUID_FEC_HAMMING74,
    LIQUID_FEC_HAMMING84,
    LIQUID_FEC_HAMMING128,

    LIQUID_FEC_GOLAY2412,
    LIQUID_FEC_SECDED2216,
    LIQUID_FEC_SECDED3932,
    LIQUID_FEC_SECDED7264,


    LIQUID_FEC_CONV_V27,
    LIQUID_FEC_CONV_V29,
    LIQUID_FEC_CONV_V39,
    LIQUID_FEC_CONV_V615,


    LIQUID_FEC_CONV_V27P23,
    LIQUID_FEC_CONV_V27P34,
    LIQUID_FEC_CONV_V27P45,
    LIQUID_FEC_CONV_V27P56,
    LIQUID_FEC_CONV_V27P67,
    LIQUID_FEC_CONV_V27P78,

    LIQUID_FEC_CONV_V29P23,
    LIQUID_FEC_CONV_V29P34,
    LIQUID_FEC_CONV_V29P45,
    LIQUID_FEC_CONV_V29P56,
    LIQUID_FEC_CONV_V29P67,
    LIQUID_FEC_CONV_V29P78,


    LIQUID_FEC_RS_M8
} fec_scheme;


extern const char * fec_scheme_str[28][2];


void liquid_print_fec_schemes();


fec_scheme liquid_getopt_str2fec(const char * _str);


typedef struct fec_s * fec;





unsigned int fec_get_enc_msg_length(fec_scheme _scheme,
                                    unsigned int _msg_len);



float fec_get_rate(fec_scheme _scheme);




fec fec_create(fec_scheme _scheme,
               void *_opts);





fec fec_recreate(fec _q,
                 fec_scheme _scheme,
                 void *_opts);


int fec_destroy(fec _q);


int fec_print(fec _q);






int fec_encode(fec _q,
               unsigned int _dec_msg_len,
               unsigned char * _msg_dec,
               unsigned char * _msg_enc);






int fec_decode(fec _q,
               unsigned int _dec_msg_len,
               unsigned char * _msg_enc,
               unsigned char * _msg_dec);






int fec_decode_soft(fec _q,
                    unsigned int _dec_msg_len,
                    unsigned char * _msg_enc,
                    unsigned char * _msg_dec);
# 1299 "/usr/local/include/liquid/liquid.h" 3
unsigned int packetizer_compute_enc_msg_len(unsigned int _n,
                                            int _crc,
                                            int _fec0,
                                            int _fec1);







unsigned int packetizer_compute_dec_msg_len(unsigned int _k,
                                            int _crc,
                                            int _fec0,
                                            int _fec1);

typedef struct packetizer_s * packetizer;







packetizer packetizer_create(unsigned int _dec_msg_len,
                             int _crc,
                             int _fec0,
                             int _fec1);
# 1335 "/usr/local/include/liquid/liquid.h" 3
packetizer packetizer_recreate(packetizer _p,
                               unsigned int _dec_msg_len,
                               int _crc,
                               int _fec0,
                               int _fec1);


void packetizer_destroy(packetizer _p);


void packetizer_print(packetizer _p);


unsigned int packetizer_get_dec_msg_len(packetizer _p);
unsigned int packetizer_get_enc_msg_len(packetizer _p);
crc_scheme packetizer_get_crc (packetizer _p);
fec_scheme packetizer_get_fec0 (packetizer _p);
fec_scheme packetizer_get_fec1 (packetizer _p);







void packetizer_encode(packetizer _p,
                       const unsigned char * _msg,
                       unsigned char * _pkt);







int packetizer_decode(packetizer _p,
                       const unsigned char * _pkt,
                       unsigned char * _msg);







int packetizer_decode_soft(packetizer _p,
                           const unsigned char * _pkt,
                           unsigned char * _msg);





typedef struct interleaver_s * interleaver;



interleaver interleaver_create(unsigned int _n);


void interleaver_destroy(interleaver _q);


void interleaver_print(interleaver _q);




void interleaver_set_depth(interleaver _q,
                           unsigned int _depth);





void interleaver_encode(interleaver _q,
                        unsigned char * _msg_dec,
                        unsigned char * _msg_enc);





void interleaver_encode_soft(interleaver _q,
                             unsigned char * _msg_dec,
                             unsigned char * _msg_enc);





void interleaver_decode(interleaver _q,
                        unsigned char * _msg_enc,
                        unsigned char * _msg_dec);





void interleaver_decode_soft(interleaver _q,
                             unsigned char * _msg_enc,
                             unsigned char * _msg_dec);
# 1445 "/usr/local/include/liquid/liquid.h" 3
typedef enum {
    LIQUID_FFT_UNKNOWN = 0,


    LIQUID_FFT_FORWARD = +1,
    LIQUID_FFT_BACKWARD = -1,


    LIQUID_FFT_REDFT00 = 10,
    LIQUID_FFT_REDFT10 = 11,
    LIQUID_FFT_REDFT01 = 12,
    LIQUID_FFT_REDFT11 = 13,


    LIQUID_FFT_RODFT00 = 20,
    LIQUID_FFT_RODFT10 = 21,
    LIQUID_FFT_RODFT01 = 22,
    LIQUID_FFT_RODFT11 = 23,


    LIQUID_FFT_MDCT = 30,
    LIQUID_FFT_IMDCT = 31,
} liquid_fft_type;
# 1546 "/usr/local/include/liquid/liquid.h" 3
typedef struct fftplan_s * fftplan; fftplan fft_create_plan(unsigned int _n, liquid_float_complex * _x, liquid_float_complex * _y, int _dir, int _flags); fftplan fft_create_plan_r2r_1d(unsigned int _n, float * _x, float * _y, int _type, int _flags); int fft_destroy_plan(fftplan _p); int fft_print_plan(fftplan _p); int fft_execute(fftplan _p); int fft_run(unsigned int _n, liquid_float_complex * _x, liquid_float_complex * _y, int _dir, int _flags); int fft_r2r_1d_run(unsigned int _n, float * _x, float * _y, int _type, int _flags); int fft_shift(liquid_float_complex * _x, unsigned int _n);
# 1713 "/usr/local/include/liquid/liquid.h" 3
typedef struct spgramcf_s * spgramcf; spgramcf spgramcf_create(unsigned int _nfft, int _wtype, unsigned int _window_len, unsigned int _delay); spgramcf spgramcf_create_default(unsigned int _nfft); int spgramcf_destroy(spgramcf _q); int spgramcf_clear(spgramcf _q); int spgramcf_reset(spgramcf _q); int spgramcf_print(spgramcf _q); int spgramcf_set_alpha(spgramcf _q, float _alpha); float spgramcf_get_alpha(spgramcf _q); int spgramcf_set_freq(spgramcf _q, float _freq); int spgramcf_set_rate(spgramcf _q, float _rate); unsigned int spgramcf_get_nfft(spgramcf _q); unsigned int spgramcf_get_window_len(spgramcf _q); unsigned int spgramcf_get_delay(spgramcf _q); int spgramcf_get_wtype(spgramcf _q); unsigned long long int spgramcf_get_num_samples(spgramcf _q); unsigned long long int spgramcf_get_num_samples_total(spgramcf _q); unsigned long long int spgramcf_get_num_transforms(spgramcf _q); unsigned long long int spgramcf_get_num_transforms_total(spgramcf _q); int spgramcf_push(spgramcf _q, liquid_float_complex _x); int spgramcf_write(spgramcf _q, liquid_float_complex * _x, unsigned int _n); int spgramcf_get_psd_mag(spgramcf _q, float * _X); int spgramcf_get_psd(spgramcf _q, float * _X); int spgramcf_export_gnuplot(spgramcf _q, const char * _filename); int spgramcf_estimate_psd(unsigned int _nfft, liquid_float_complex * _x, unsigned int _n, float * _psd);




typedef struct spgramf_s * spgramf; spgramf spgramf_create(unsigned int _nfft, int _wtype, unsigned int _window_len, unsigned int _delay); spgramf spgramf_create_default(unsigned int _nfft); int spgramf_destroy(spgramf _q); int spgramf_clear(spgramf _q); int spgramf_reset(spgramf _q); int spgramf_print(spgramf _q); int spgramf_set_alpha(spgramf _q, float _alpha); float spgramf_get_alpha(spgramf _q); int spgramf_set_freq(spgramf _q, float _freq); int spgramf_set_rate(spgramf _q, float _rate); unsigned int spgramf_get_nfft(spgramf _q); unsigned int spgramf_get_window_len(spgramf _q); unsigned int spgramf_get_delay(spgramf _q); int spgramf_get_wtype(spgramf _q); unsigned long long int spgramf_get_num_samples(spgramf _q); unsigned long long int spgramf_get_num_samples_total(spgramf _q); unsigned long long int spgramf_get_num_transforms(spgramf _q); unsigned long long int spgramf_get_num_transforms_total(spgramf _q); int spgramf_push(spgramf _q, float _x); int spgramf_write(spgramf _q, float * _x, unsigned int _n); int spgramf_get_psd_mag(spgramf _q, float * _X); int spgramf_get_psd(spgramf _q, float * _X); int spgramf_export_gnuplot(spgramf _q, const char * _filename); int spgramf_estimate_psd(unsigned int _nfft, float * _x, unsigned int _n, float * _psd);
# 1799 "/usr/local/include/liquid/liquid.h" 3
typedef struct asgramcf_s * asgramcf; asgramcf asgramcf_create(unsigned int _nfft); int asgramcf_destroy(asgramcf _q); int asgramcf_reset(asgramcf _q); int asgramcf_set_scale(asgramcf _q, float _ref, float _div); int asgramcf_set_display(asgramcf _q, const char * _ascii); int asgramcf_push(asgramcf _q, liquid_float_complex _x); int asgramcf_write(asgramcf _q, liquid_float_complex * _x, unsigned int _n); int asgramcf_execute(asgramcf _q, char * _ascii, float * _peakval, float * _peakfreq); int asgramcf_print(asgramcf _q);




typedef struct asgramf_s * asgramf; asgramf asgramf_create(unsigned int _nfft); int asgramf_destroy(asgramf _q); int asgramf_reset(asgramf _q); int asgramf_set_scale(asgramf _q, float _ref, float _div); int asgramf_set_display(asgramf _q, const char * _ascii); int asgramf_push(asgramf _q, float _x); int asgramf_write(asgramf _q, float * _x, unsigned int _n); int asgramf_execute(asgramf _q, char * _ascii, float * _peakval, float * _peakfreq); int asgramf_print(asgramf _q);
# 1931 "/usr/local/include/liquid/liquid.h" 3
typedef struct spwaterfallcf_s * spwaterfallcf; spwaterfallcf spwaterfallcf_create(unsigned int _nfft, int _wtype, unsigned int _window_len, unsigned int _delay, unsigned int _time); spwaterfallcf spwaterfallcf_create_default(unsigned int _nfft, unsigned int _time); int spwaterfallcf_destroy(spwaterfallcf _q); int spwaterfallcf_clear(spwaterfallcf _q); int spwaterfallcf_reset(spwaterfallcf _q); int spwaterfallcf_print(spwaterfallcf _q); uint64_t spwaterfallcf_get_num_samples_total(spwaterfallcf _q); unsigned int spwaterfallcf_get_num_freq(spwaterfallcf _q); unsigned int spwaterfallcf_get_num_time(spwaterfallcf _q); unsigned int spwaterfallcf_get_window_len(spwaterfallcf _q); unsigned int spwaterfallcf_get_delay(spwaterfallcf _q); int spwaterfallcf_get_wtype(spwaterfallcf _q); const float * spwaterfallcf_get_psd(spwaterfallcf _q); int spwaterfallcf_set_freq(spwaterfallcf _q, float _freq); int spwaterfallcf_set_rate(spwaterfallcf _q, float _rate); int spwaterfallcf_set_dims(spwaterfallcf _q, unsigned int _width, unsigned int _height); int spwaterfallcf_set_commands(spwaterfallcf _q, const char * _commands); int spwaterfallcf_push(spwaterfallcf _q, liquid_float_complex _x); int spwaterfallcf_write(spwaterfallcf _q, liquid_float_complex * _x, unsigned int _n); int spwaterfallcf_export(spwaterfallcf _q, const char * _base);




typedef struct spwaterfallf_s * spwaterfallf; spwaterfallf spwaterfallf_create(unsigned int _nfft, int _wtype, unsigned int _window_len, unsigned int _delay, unsigned int _time); spwaterfallf spwaterfallf_create_default(unsigned int _nfft, unsigned int _time); int spwaterfallf_destroy(spwaterfallf _q); int spwaterfallf_clear(spwaterfallf _q); int spwaterfallf_reset(spwaterfallf _q); int spwaterfallf_print(spwaterfallf _q); uint64_t spwaterfallf_get_num_samples_total(spwaterfallf _q); unsigned int spwaterfallf_get_num_freq(spwaterfallf _q); unsigned int spwaterfallf_get_num_time(spwaterfallf _q); unsigned int spwaterfallf_get_window_len(spwaterfallf _q); unsigned int spwaterfallf_get_delay(spwaterfallf _q); int spwaterfallf_get_wtype(spwaterfallf _q); const float * spwaterfallf_get_psd(spwaterfallf _q); int spwaterfallf_set_freq(spwaterfallf _q, float _freq); int spwaterfallf_set_rate(spwaterfallf _q, float _rate); int spwaterfallf_set_dims(spwaterfallf _q, unsigned int _width, unsigned int _height); int spwaterfallf_set_commands(spwaterfallf _q, const char * _commands); int spwaterfallf_push(spwaterfallf _q, float _x); int spwaterfallf_write(spwaterfallf _q, float * _x, unsigned int _n); int spwaterfallf_export(spwaterfallf _q, const char * _base);
# 1952 "/usr/local/include/liquid/liquid.h" 3
typedef enum {
    LIQUID_FIRFILT_UNKNOWN=0,


    LIQUID_FIRFILT_KAISER,
    LIQUID_FIRFILT_PM,
    LIQUID_FIRFILT_RCOS,
    LIQUID_FIRFILT_FEXP,
    LIQUID_FIRFILT_FSECH,
    LIQUID_FIRFILT_FARCSECH,


    LIQUID_FIRFILT_ARKAISER,
    LIQUID_FIRFILT_RKAISER,
    LIQUID_FIRFILT_RRC,
    LIQUID_FIRFILT_hM3,
    LIQUID_FIRFILT_GMSKTX,
    LIQUID_FIRFILT_GMSKRX,
    LIQUID_FIRFILT_RFEXP,
    LIQUID_FIRFILT_RFSECH,
    LIQUID_FIRFILT_RFARCSECH,
} liquid_firfilt_type;
# 1982 "/usr/local/include/liquid/liquid.h" 3
void liquid_firdes_prototype(liquid_firfilt_type _type,
                             unsigned int _k,
                             unsigned int _m,
                             float _beta,
                             float _dt,
                             float * _h);


extern const char * liquid_firfilt_type_str[(16)][2];


int liquid_getopt_str2firfilt(const char * _str);




unsigned int estimate_req_filter_len(float _df,
                                     float _As);




float estimate_req_filter_As(float _df,
                             unsigned int _N);




float estimate_req_filter_df(float _As,
                             unsigned int _N);





float kaiser_beta_As(float _As);





typedef enum {
    LIQUID_FIRDESPM_BANDPASS=0,
    LIQUID_FIRDESPM_DIFFERENTIATOR,
    LIQUID_FIRDESPM_HILBERT
} liquid_firdespm_btype;


typedef enum {
    LIQUID_FIRDESPM_FLATWEIGHT=0,
    LIQUID_FIRDESPM_EXPWEIGHT,
    LIQUID_FIRDESPM_LINWEIGHT,
} liquid_firdespm_wtype;
# 2045 "/usr/local/include/liquid/liquid.h" 3
int firdespm_run(unsigned int _h_len,
                 unsigned int _num_bands,
                 float * _bands,
                 float * _des,
                 float * _weights,
                 liquid_firdespm_wtype * _wtype,
                 liquid_firdespm_btype _btype,
                 float * _h);







int firdespm_lowpass(unsigned int _n,
                      float _fc,
                      float _As,
                      float _mu,
                      float * _h);






typedef int (*firdespm_callback)(double _frequency,
                                 void * _userdata,
                                 double * _desired,
                                 double * _weight);


typedef struct firdespm_s * firdespm;
# 2087 "/usr/local/include/liquid/liquid.h" 3
firdespm firdespm_create(unsigned int _h_len,
                         unsigned int _num_bands,
                         float * _bands,
                         float * _des,
                         float * _weights,
                         liquid_firdespm_wtype * _wtype,
                         liquid_firdespm_btype _btype);
# 2102 "/usr/local/include/liquid/liquid.h" 3
firdespm firdespm_create_callback(unsigned int _h_len,
                                  unsigned int _num_bands,
                                  float * _bands,
                                  liquid_firdespm_btype _btype,
                                  firdespm_callback _callback,
                                  void * _userdata);


int firdespm_destroy(firdespm _q);


int firdespm_print(firdespm _q);


int firdespm_execute(firdespm _q, float * _h);
# 2125 "/usr/local/include/liquid/liquid.h" 3
void liquid_firdes_kaiser(unsigned int _n,
                          float _fc,
                          float _As,
                          float _mu,
                          float *_h);






void liquid_firdes_notch(unsigned int _m,
                         float _f0,
                         float _As,
                         float * _h);







void liquid_firdes_doppler(unsigned int _n,
                           float _fd,
                           float _K,
                           float _theta,
                           float * _h);
# 2160 "/usr/local/include/liquid/liquid.h" 3
void liquid_firdes_rcos(unsigned int _k,
                        unsigned int _m,
                        float _beta,
                        float _dt,
                        float * _h);


void liquid_firdes_rrcos(unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);


void liquid_firdes_rkaiser(unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);


void liquid_firdes_arkaiser(unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);


void liquid_firdes_hM3(unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);


void liquid_firdes_gmsktx(unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);
void liquid_firdes_gmskrx(unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);


void liquid_firdes_fexp( unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);
void liquid_firdes_rfexp(unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);


void liquid_firdes_fsech( unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);
void liquid_firdes_rfsech(unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);


void liquid_firdes_farcsech( unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);
void liquid_firdes_rfarcsech(unsigned int _k, unsigned int _m, float _beta, float _dt, float * _h);





float fir_group_delay(float * _h,
                      unsigned int _n,
                      float _fc);







float iir_group_delay(float * _b,
                      unsigned int _nb,
                      float * _a,
                      unsigned int _na,
                      float _fc);
# 2222 "/usr/local/include/liquid/liquid.h" 3
float liquid_filter_autocorr(float * _h,
                             unsigned int _h_len,
                             int _lag);
# 2235 "/usr/local/include/liquid/liquid.h" 3
float liquid_filter_crosscorr(float * _h,
                              unsigned int _h_len,
                              float * _g,
                              unsigned int _g_len,
                              int _lag);
# 2251 "/usr/local/include/liquid/liquid.h" 3
void liquid_filter_isi(float * _h,
                       unsigned int _k,
                       unsigned int _m,
                       float * _rms,
                       float * _max);







float liquid_filter_energy(float * _h,
                           unsigned int _h_len,
                           float _fc,
                           unsigned int _nfft);







typedef enum {
    LIQUID_IIRDES_BUTTER=0,
    LIQUID_IIRDES_CHEBY1,
    LIQUID_IIRDES_CHEBY2,
    LIQUID_IIRDES_ELLIP,
    LIQUID_IIRDES_BESSEL
} liquid_iirdes_filtertype;


typedef enum {
    LIQUID_IIRDES_LOWPASS=0,
    LIQUID_IIRDES_HIGHPASS,
    LIQUID_IIRDES_BANDPASS,
    LIQUID_IIRDES_BANDSTOP
} liquid_iirdes_bandtype;


typedef enum {
    LIQUID_IIRDES_SOS=0,
    LIQUID_IIRDES_TF
} liquid_iirdes_format;
# 2307 "/usr/local/include/liquid/liquid.h" 3
void liquid_iirdes(liquid_iirdes_filtertype _ftype,
                   liquid_iirdes_bandtype _btype,
                   liquid_iirdes_format _format,
                   unsigned int _n,
                   float _fc,
                   float _f0,
                   float _Ap,
                   float _As,
                   float * _B,
                   float * _A);


void butter_azpkf(unsigned int _n,
                  liquid_float_complex * _za,
                  liquid_float_complex * _pa,
                  liquid_float_complex * _ka);
void cheby1_azpkf(unsigned int _n,
                  float _ep,
                  liquid_float_complex * _z,
                  liquid_float_complex * _p,
                  liquid_float_complex * _k);
void cheby2_azpkf(unsigned int _n,
                  float _es,
                  liquid_float_complex * _z,
                  liquid_float_complex * _p,
                  liquid_float_complex * _k);
void ellip_azpkf(unsigned int _n,
                 float _ep,
                 float _es,
                 liquid_float_complex * _z,
                 liquid_float_complex * _p,
                 liquid_float_complex * _k);
void bessel_azpkf(unsigned int _n,
                  liquid_float_complex * _z,
                  liquid_float_complex * _p,
                  liquid_float_complex * _k);


float iirdes_freqprewarp(liquid_iirdes_bandtype _btype,
                         float _fc,
                         float _f0);
# 2358 "/usr/local/include/liquid/liquid.h" 3
void bilinear_zpkf(liquid_float_complex * _za,
                   unsigned int _nza,
                   liquid_float_complex * _pa,
                   unsigned int _npa,
                   liquid_float_complex _ka,
                   float _m,
                   liquid_float_complex * _zd,
                   liquid_float_complex * _pd,
                   liquid_float_complex * _kd);







void iirdes_dzpk_lp2hp(liquid_float_complex * _zd,
                       liquid_float_complex * _pd,
                       unsigned int _n,
                       liquid_float_complex * _zdt,
                       liquid_float_complex * _pdt);
# 2387 "/usr/local/include/liquid/liquid.h" 3
void iirdes_dzpk_lp2bp(liquid_float_complex * _zd,
                       liquid_float_complex * _pd,
                       unsigned int _n,
                       float _f0,
                       liquid_float_complex * _zdt,
                       liquid_float_complex * _pdt);
# 2401 "/usr/local/include/liquid/liquid.h" 3
void iirdes_dzpk2tff(liquid_float_complex * _zd,
                     liquid_float_complex * _pd,
                     unsigned int _n,
                     liquid_float_complex _kd,
                     float * _b,
                     float * _a);
# 2416 "/usr/local/include/liquid/liquid.h" 3
void iirdes_dzpk2sosf(liquid_float_complex * _zd,
                      liquid_float_complex * _pd,
                      unsigned int _n,
                      liquid_float_complex _kd,
                      float * _B,
                      float * _A);
# 2435 "/usr/local/include/liquid/liquid.h" 3
void iirdes_pll_active_lag(float _w,
                           float _zeta,
                           float _K,
                           float * _b,
                           float * _a);
# 2451 "/usr/local/include/liquid/liquid.h" 3
void iirdes_pll_active_PI(float _w,
                          float _zeta,
                          float _K,
                          float * _b,
                          float * _a);





int iirdes_isstable(float * _b,
                    float * _a,
                    unsigned int _n);
# 2475 "/usr/local/include/liquid/liquid.h" 3
void liquid_lpc(float * _x,
                unsigned int _n,
                unsigned int _p,
                float * _a,
                float * _g);
# 2490 "/usr/local/include/liquid/liquid.h" 3
void liquid_levinson(float * _r,
                     unsigned int _p,
                     float * _a,
                     float * _e);
# 2562 "/usr/local/include/liquid/liquid.h" 3
typedef struct autocorr_cccf_s * autocorr_cccf; autocorr_cccf autocorr_cccf_create(unsigned int _window_size, unsigned int _delay); void autocorr_cccf_destroy(autocorr_cccf _q); void autocorr_cccf_reset(autocorr_cccf _q); void autocorr_cccf_print(autocorr_cccf _q); void autocorr_cccf_push(autocorr_cccf _q, liquid_float_complex _x); void autocorr_cccf_write(autocorr_cccf _q, liquid_float_complex * _x, unsigned int _n); void autocorr_cccf_execute(autocorr_cccf _q, liquid_float_complex * _rxx); void autocorr_cccf_execute_block(autocorr_cccf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _rxx); float autocorr_cccf_get_energy(autocorr_cccf _q);




typedef struct autocorr_rrrf_s * autocorr_rrrf; autocorr_rrrf autocorr_rrrf_create(unsigned int _window_size, unsigned int _delay); void autocorr_rrrf_destroy(autocorr_rrrf _q); void autocorr_rrrf_reset(autocorr_rrrf _q); void autocorr_rrrf_print(autocorr_rrrf _q); void autocorr_rrrf_push(autocorr_rrrf _q, float _x); void autocorr_rrrf_write(autocorr_rrrf _q, float * _x, unsigned int _n); void autocorr_rrrf_execute(autocorr_rrrf _q, float * _rxx); void autocorr_rrrf_execute_block(autocorr_rrrf _q, float * _x, unsigned int _n, float * _rxx); float autocorr_rrrf_get_energy(autocorr_rrrf _q);
# 2738 "/usr/local/include/liquid/liquid.h" 3
typedef struct firfilt_rrrf_s * firfilt_rrrf; firfilt_rrrf firfilt_rrrf_create(float * _h, unsigned int _n); firfilt_rrrf firfilt_rrrf_create_kaiser(unsigned int _n, float _fc, float _As, float _mu); firfilt_rrrf firfilt_rrrf_create_rnyquist(int _type, unsigned int _k, unsigned int _m, float _beta, float _mu); firfilt_rrrf firfilt_rrrf_create_firdespm(unsigned int _h_len, float _fc, float _As); firfilt_rrrf firfilt_rrrf_create_rect(unsigned int _n); firfilt_rrrf firfilt_rrrf_create_dc_blocker(unsigned int _m, float _As); firfilt_rrrf firfilt_rrrf_create_notch(unsigned int _m, float _As, float _f0); firfilt_rrrf firfilt_rrrf_recreate(firfilt_rrrf _q, float * _h, unsigned int _n); void firfilt_rrrf_destroy(firfilt_rrrf _q); void firfilt_rrrf_reset(firfilt_rrrf _q); void firfilt_rrrf_print(firfilt_rrrf _q); void firfilt_rrrf_set_scale(firfilt_rrrf _q, float _scale); void firfilt_rrrf_get_scale(firfilt_rrrf _q, float * _scale); void firfilt_rrrf_push(firfilt_rrrf _q, float _x); void firfilt_rrrf_write(firfilt_rrrf _q, float * _x, unsigned int _n); void firfilt_rrrf_execute(firfilt_rrrf _q, float * _y); void firfilt_rrrf_execute_block(firfilt_rrrf _q, float * _x, unsigned int _n, float * _y); unsigned int firfilt_rrrf_get_length(firfilt_rrrf _q); const float * firfilt_rrrf_get_coefficients(firfilt_rrrf _q); int firfilt_rrrf_copy_coefficients(firfilt_rrrf _q, float * _h); void firfilt_rrrf_freqresponse(firfilt_rrrf _q, float _fc, liquid_float_complex * _H); float firfilt_rrrf_groupdelay(firfilt_rrrf _q, float _fc);




typedef struct firfilt_crcf_s * firfilt_crcf; firfilt_crcf firfilt_crcf_create(float * _h, unsigned int _n); firfilt_crcf firfilt_crcf_create_kaiser(unsigned int _n, float _fc, float _As, float _mu); firfilt_crcf firfilt_crcf_create_rnyquist(int _type, unsigned int _k, unsigned int _m, float _beta, float _mu); firfilt_crcf firfilt_crcf_create_firdespm(unsigned int _h_len, float _fc, float _As); firfilt_crcf firfilt_crcf_create_rect(unsigned int _n); firfilt_crcf firfilt_crcf_create_dc_blocker(unsigned int _m, float _As); firfilt_crcf firfilt_crcf_create_notch(unsigned int _m, float _As, float _f0); firfilt_crcf firfilt_crcf_recreate(firfilt_crcf _q, float * _h, unsigned int _n); void firfilt_crcf_destroy(firfilt_crcf _q); void firfilt_crcf_reset(firfilt_crcf _q); void firfilt_crcf_print(firfilt_crcf _q); void firfilt_crcf_set_scale(firfilt_crcf _q, float _scale); void firfilt_crcf_get_scale(firfilt_crcf _q, float * _scale); void firfilt_crcf_push(firfilt_crcf _q, liquid_float_complex _x); void firfilt_crcf_write(firfilt_crcf _q, liquid_float_complex * _x, unsigned int _n); void firfilt_crcf_execute(firfilt_crcf _q, liquid_float_complex * _y); void firfilt_crcf_execute_block(firfilt_crcf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); unsigned int firfilt_crcf_get_length(firfilt_crcf _q); const float * firfilt_crcf_get_coefficients(firfilt_crcf _q); int firfilt_crcf_copy_coefficients(firfilt_crcf _q, float * _h); void firfilt_crcf_freqresponse(firfilt_crcf _q, float _fc, liquid_float_complex * _H); float firfilt_crcf_groupdelay(firfilt_crcf _q, float _fc);




typedef struct firfilt_cccf_s * firfilt_cccf; firfilt_cccf firfilt_cccf_create(liquid_float_complex * _h, unsigned int _n); firfilt_cccf firfilt_cccf_create_kaiser(unsigned int _n, float _fc, float _As, float _mu); firfilt_cccf firfilt_cccf_create_rnyquist(int _type, unsigned int _k, unsigned int _m, float _beta, float _mu); firfilt_cccf firfilt_cccf_create_firdespm(unsigned int _h_len, float _fc, float _As); firfilt_cccf firfilt_cccf_create_rect(unsigned int _n); firfilt_cccf firfilt_cccf_create_dc_blocker(unsigned int _m, float _As); firfilt_cccf firfilt_cccf_create_notch(unsigned int _m, float _As, float _f0); firfilt_cccf firfilt_cccf_recreate(firfilt_cccf _q, liquid_float_complex * _h, unsigned int _n); void firfilt_cccf_destroy(firfilt_cccf _q); void firfilt_cccf_reset(firfilt_cccf _q); void firfilt_cccf_print(firfilt_cccf _q); void firfilt_cccf_set_scale(firfilt_cccf _q, liquid_float_complex _scale); void firfilt_cccf_get_scale(firfilt_cccf _q, liquid_float_complex * _scale); void firfilt_cccf_push(firfilt_cccf _q, liquid_float_complex _x); void firfilt_cccf_write(firfilt_cccf _q, liquid_float_complex * _x, unsigned int _n); void firfilt_cccf_execute(firfilt_cccf _q, liquid_float_complex * _y); void firfilt_cccf_execute_block(firfilt_cccf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); unsigned int firfilt_cccf_get_length(firfilt_cccf _q); const liquid_float_complex * firfilt_cccf_get_coefficients(firfilt_cccf _q); int firfilt_cccf_copy_coefficients(firfilt_cccf _q, liquid_float_complex * _h); void firfilt_cccf_freqresponse(firfilt_cccf _q, float _fc, liquid_float_complex * _H); float firfilt_cccf_groupdelay(firfilt_cccf _q, float _fc);
# 2830 "/usr/local/include/liquid/liquid.h" 3
typedef struct fdelay_rrrf_s * fdelay_rrrf; fdelay_rrrf fdelay_rrrf_create(unsigned int _nmax, unsigned int _m, unsigned int _npfb); fdelay_rrrf fdelay_rrrf_create_default(unsigned int _nmax); int fdelay_rrrf_destroy(fdelay_rrrf _q); int fdelay_rrrf_reset(fdelay_rrrf _q); int fdelay_rrrf_print(fdelay_rrrf _q); float fdelay_rrrf_get_delay(fdelay_rrrf _q); int fdelay_rrrf_set_delay(fdelay_rrrf _q, float _delay); int fdelay_rrrf_adjust_delay(fdelay_rrrf _q, float _delta); unsigned int fdelay_rrrf_get_nmax(fdelay_rrrf _q); unsigned int fdelay_rrrf_get_m (fdelay_rrrf _q); unsigned int fdelay_rrrf_get_npfb(fdelay_rrrf _q); int fdelay_rrrf_push(fdelay_rrrf _q, float _x); int fdelay_rrrf_write(fdelay_rrrf _q, float * _x, unsigned int _n); int fdelay_rrrf_execute(fdelay_rrrf _q, float * _y); int fdelay_rrrf_execute_block(fdelay_rrrf _q, float * _x, unsigned int _n, float * _y);




typedef struct fdelay_crcf_s * fdelay_crcf; fdelay_crcf fdelay_crcf_create(unsigned int _nmax, unsigned int _m, unsigned int _npfb); fdelay_crcf fdelay_crcf_create_default(unsigned int _nmax); int fdelay_crcf_destroy(fdelay_crcf _q); int fdelay_crcf_reset(fdelay_crcf _q); int fdelay_crcf_print(fdelay_crcf _q); float fdelay_crcf_get_delay(fdelay_crcf _q); int fdelay_crcf_set_delay(fdelay_crcf _q, float _delay); int fdelay_crcf_adjust_delay(fdelay_crcf _q, float _delta); unsigned int fdelay_crcf_get_nmax(fdelay_crcf _q); unsigned int fdelay_crcf_get_m (fdelay_crcf _q); unsigned int fdelay_crcf_get_npfb(fdelay_crcf _q); int fdelay_crcf_push(fdelay_crcf _q, liquid_float_complex _x); int fdelay_crcf_write(fdelay_crcf _q, liquid_float_complex * _x, unsigned int _n); int fdelay_crcf_execute(fdelay_crcf _q, liquid_float_complex * _y); int fdelay_crcf_execute_block(fdelay_crcf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);
# 2933 "/usr/local/include/liquid/liquid.h" 3
typedef struct firhilbf_s * firhilbf; firhilbf firhilbf_create(unsigned int _m, float _As); void firhilbf_destroy(firhilbf _q); void firhilbf_print(firhilbf _q); void firhilbf_reset(firhilbf _q); void firhilbf_r2c_execute(firhilbf _q, float _x, liquid_float_complex * _y); void firhilbf_c2r_execute(firhilbf _q, liquid_float_complex _x, float * _y0, float * _y1); void firhilbf_decim_execute(firhilbf _q, float * _x, liquid_float_complex * _y); void firhilbf_decim_execute_block(firhilbf _q, float * _x, unsigned int _n, liquid_float_complex * _y); void firhilbf_interp_execute(firhilbf _q, liquid_float_complex _x, float * _y); void firhilbf_interp_execute_block(firhilbf _q, liquid_float_complex * _x, unsigned int _n, float * _y);
# 3033 "/usr/local/include/liquid/liquid.h" 3
typedef struct iirhilbf_s * iirhilbf; iirhilbf iirhilbf_create(liquid_iirdes_filtertype _ftype, unsigned int _n, float _Ap, float _As); iirhilbf iirhilbf_create_default(unsigned int _n); void iirhilbf_destroy(iirhilbf _q); void iirhilbf_print(iirhilbf _q); void iirhilbf_reset(iirhilbf _q); void iirhilbf_r2c_execute(iirhilbf _q, float _x, liquid_float_complex * _y); void iirhilbf_c2r_execute(iirhilbf _q, liquid_float_complex _x, float * _y); void iirhilbf_decim_execute(iirhilbf _q, float * _x, liquid_float_complex * _y); void iirhilbf_decim_execute_block(iirhilbf _q, float * _x, unsigned int _n, liquid_float_complex * _y); void iirhilbf_interp_execute(iirhilbf _q, liquid_float_complex _x, float * _y); void iirhilbf_interp_execute_block(iirhilbf _q, liquid_float_complex * _x, unsigned int _n, float * _y);
# 3093 "/usr/local/include/liquid/liquid.h" 3
typedef struct fftfilt_rrrf_s * fftfilt_rrrf; fftfilt_rrrf fftfilt_rrrf_create(float * _h, unsigned int _h_len, unsigned int _n); void fftfilt_rrrf_destroy(fftfilt_rrrf _q); void fftfilt_rrrf_reset(fftfilt_rrrf _q); void fftfilt_rrrf_print(fftfilt_rrrf _q); void fftfilt_rrrf_set_scale(fftfilt_rrrf _q, float _scale); void fftfilt_rrrf_get_scale(fftfilt_rrrf _q, float * _scale); void fftfilt_rrrf_execute(fftfilt_rrrf _q, float * _x, float * _y); unsigned int fftfilt_rrrf_get_length(fftfilt_rrrf _q);




typedef struct fftfilt_crcf_s * fftfilt_crcf; fftfilt_crcf fftfilt_crcf_create(float * _h, unsigned int _h_len, unsigned int _n); void fftfilt_crcf_destroy(fftfilt_crcf _q); void fftfilt_crcf_reset(fftfilt_crcf _q); void fftfilt_crcf_print(fftfilt_crcf _q); void fftfilt_crcf_set_scale(fftfilt_crcf _q, float _scale); void fftfilt_crcf_get_scale(fftfilt_crcf _q, float * _scale); void fftfilt_crcf_execute(fftfilt_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y); unsigned int fftfilt_crcf_get_length(fftfilt_crcf _q);




typedef struct fftfilt_cccf_s * fftfilt_cccf; fftfilt_cccf fftfilt_cccf_create(liquid_float_complex * _h, unsigned int _h_len, unsigned int _n); void fftfilt_cccf_destroy(fftfilt_cccf _q); void fftfilt_cccf_reset(fftfilt_cccf _q); void fftfilt_cccf_print(fftfilt_cccf _q); void fftfilt_cccf_set_scale(fftfilt_cccf _q, liquid_float_complex _scale); void fftfilt_cccf_get_scale(fftfilt_cccf _q, liquid_float_complex * _scale); void fftfilt_cccf_execute(fftfilt_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y); unsigned int fftfilt_cccf_get_length(fftfilt_cccf _q);
# 3245 "/usr/local/include/liquid/liquid.h" 3
typedef struct iirfilt_rrrf_s * iirfilt_rrrf; iirfilt_rrrf iirfilt_rrrf_create(float * _b, unsigned int _nb, float * _a, unsigned int _na); iirfilt_rrrf iirfilt_rrrf_create_sos(float * _B, float * _A, unsigned int _nsos); iirfilt_rrrf iirfilt_rrrf_create_prototype( liquid_iirdes_filtertype _ftype, liquid_iirdes_bandtype _btype, liquid_iirdes_format _format, unsigned int _order, float _fc, float _f0, float _Ap, float _As); iirfilt_rrrf iirfilt_rrrf_create_lowpass(unsigned int _order, float _fc); iirfilt_rrrf iirfilt_rrrf_create_integrator(void); iirfilt_rrrf iirfilt_rrrf_create_differentiator(void); iirfilt_rrrf iirfilt_rrrf_create_dc_blocker(float _alpha); iirfilt_rrrf iirfilt_rrrf_create_pll(float _w, float _zeta, float _K); void iirfilt_rrrf_destroy(iirfilt_rrrf _q); void iirfilt_rrrf_print(iirfilt_rrrf _q); void iirfilt_rrrf_reset(iirfilt_rrrf _q); void iirfilt_rrrf_execute(iirfilt_rrrf _q, float _x, float * _y); void iirfilt_rrrf_execute_block(iirfilt_rrrf _q, float * _x, unsigned int _n, float * _y); unsigned int iirfilt_rrrf_get_length(iirfilt_rrrf _q); void iirfilt_rrrf_freqresponse(iirfilt_rrrf _q, float _fc, liquid_float_complex * _H); float iirfilt_rrrf_groupdelay(iirfilt_rrrf _q, float _fc);




typedef struct iirfilt_crcf_s * iirfilt_crcf; iirfilt_crcf iirfilt_crcf_create(float * _b, unsigned int _nb, float * _a, unsigned int _na); iirfilt_crcf iirfilt_crcf_create_sos(float * _B, float * _A, unsigned int _nsos); iirfilt_crcf iirfilt_crcf_create_prototype( liquid_iirdes_filtertype _ftype, liquid_iirdes_bandtype _btype, liquid_iirdes_format _format, unsigned int _order, float _fc, float _f0, float _Ap, float _As); iirfilt_crcf iirfilt_crcf_create_lowpass(unsigned int _order, float _fc); iirfilt_crcf iirfilt_crcf_create_integrator(void); iirfilt_crcf iirfilt_crcf_create_differentiator(void); iirfilt_crcf iirfilt_crcf_create_dc_blocker(float _alpha); iirfilt_crcf iirfilt_crcf_create_pll(float _w, float _zeta, float _K); void iirfilt_crcf_destroy(iirfilt_crcf _q); void iirfilt_crcf_print(iirfilt_crcf _q); void iirfilt_crcf_reset(iirfilt_crcf _q); void iirfilt_crcf_execute(iirfilt_crcf _q, liquid_float_complex _x, liquid_float_complex * _y); void iirfilt_crcf_execute_block(iirfilt_crcf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); unsigned int iirfilt_crcf_get_length(iirfilt_crcf _q); void iirfilt_crcf_freqresponse(iirfilt_crcf _q, float _fc, liquid_float_complex * _H); float iirfilt_crcf_groupdelay(iirfilt_crcf _q, float _fc);




typedef struct iirfilt_cccf_s * iirfilt_cccf; iirfilt_cccf iirfilt_cccf_create(liquid_float_complex * _b, unsigned int _nb, liquid_float_complex * _a, unsigned int _na); iirfilt_cccf iirfilt_cccf_create_sos(liquid_float_complex * _B, liquid_float_complex * _A, unsigned int _nsos); iirfilt_cccf iirfilt_cccf_create_prototype( liquid_iirdes_filtertype _ftype, liquid_iirdes_bandtype _btype, liquid_iirdes_format _format, unsigned int _order, float _fc, float _f0, float _Ap, float _As); iirfilt_cccf iirfilt_cccf_create_lowpass(unsigned int _order, float _fc); iirfilt_cccf iirfilt_cccf_create_integrator(void); iirfilt_cccf iirfilt_cccf_create_differentiator(void); iirfilt_cccf iirfilt_cccf_create_dc_blocker(float _alpha); iirfilt_cccf iirfilt_cccf_create_pll(float _w, float _zeta, float _K); void iirfilt_cccf_destroy(iirfilt_cccf _q); void iirfilt_cccf_print(iirfilt_cccf _q); void iirfilt_cccf_reset(iirfilt_cccf _q); void iirfilt_cccf_execute(iirfilt_cccf _q, liquid_float_complex _x, liquid_float_complex * _y); void iirfilt_cccf_execute_block(iirfilt_cccf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); unsigned int iirfilt_cccf_get_length(iirfilt_cccf _q); void iirfilt_cccf_freqresponse(iirfilt_cccf _q, float _fc, liquid_float_complex * _H); float iirfilt_cccf_groupdelay(iirfilt_cccf _q, float _fc);
# 3323 "/usr/local/include/liquid/liquid.h" 3
typedef struct iirfiltsos_rrrf_s * iirfiltsos_rrrf; iirfiltsos_rrrf iirfiltsos_rrrf_create(float * _b, float * _a); void iirfiltsos_rrrf_set_coefficients(iirfiltsos_rrrf _q, float * _b, float * _a); void iirfiltsos_rrrf_destroy(iirfiltsos_rrrf _q); void iirfiltsos_rrrf_print(iirfiltsos_rrrf _q); void iirfiltsos_rrrf_reset(iirfiltsos_rrrf _q); void iirfiltsos_rrrf_execute(iirfiltsos_rrrf _q, float _x, float * _y); void iirfiltsos_rrrf_execute_df1(iirfiltsos_rrrf _q, float _x, float * _y); void iirfiltsos_rrrf_execute_df2(iirfiltsos_rrrf _q, float _x, float * _y); float iirfiltsos_rrrf_groupdelay(iirfiltsos_rrrf _q, float _fc);




typedef struct iirfiltsos_crcf_s * iirfiltsos_crcf; iirfiltsos_crcf iirfiltsos_crcf_create(float * _b, float * _a); void iirfiltsos_crcf_set_coefficients(iirfiltsos_crcf _q, float * _b, float * _a); void iirfiltsos_crcf_destroy(iirfiltsos_crcf _q); void iirfiltsos_crcf_print(iirfiltsos_crcf _q); void iirfiltsos_crcf_reset(iirfiltsos_crcf _q); void iirfiltsos_crcf_execute(iirfiltsos_crcf _q, liquid_float_complex _x, liquid_float_complex * _y); void iirfiltsos_crcf_execute_df1(iirfiltsos_crcf _q, liquid_float_complex _x, liquid_float_complex * _y); void iirfiltsos_crcf_execute_df2(iirfiltsos_crcf _q, liquid_float_complex _x, liquid_float_complex * _y); float iirfiltsos_crcf_groupdelay(iirfiltsos_crcf _q, float _fc);




typedef struct iirfiltsos_cccf_s * iirfiltsos_cccf; iirfiltsos_cccf iirfiltsos_cccf_create(liquid_float_complex * _b, liquid_float_complex * _a); void iirfiltsos_cccf_set_coefficients(iirfiltsos_cccf _q, liquid_float_complex * _b, liquid_float_complex * _a); void iirfiltsos_cccf_destroy(iirfiltsos_cccf _q); void iirfiltsos_cccf_print(iirfiltsos_cccf _q); void iirfiltsos_cccf_reset(iirfiltsos_cccf _q); void iirfiltsos_cccf_execute(iirfiltsos_cccf _q, liquid_float_complex _x, liquid_float_complex * _y); void iirfiltsos_cccf_execute_df1(iirfiltsos_cccf _q, liquid_float_complex _x, liquid_float_complex * _y); void iirfiltsos_cccf_execute_df2(iirfiltsos_cccf _q, liquid_float_complex _x, liquid_float_complex * _y); float iirfiltsos_cccf_groupdelay(iirfiltsos_cccf _q, float _fc);
# 3479 "/usr/local/include/liquid/liquid.h" 3
typedef struct firpfb_rrrf_s * firpfb_rrrf; firpfb_rrrf firpfb_rrrf_create(unsigned int _M, float * _h, unsigned int _h_len); firpfb_rrrf firpfb_rrrf_create_default(unsigned int _M, unsigned int _m); firpfb_rrrf firpfb_rrrf_create_kaiser(unsigned int _M, unsigned int _m, float _fc, float _As); firpfb_rrrf firpfb_rrrf_create_rnyquist(int _type, unsigned int _M, unsigned int _k, unsigned int _m, float _beta); firpfb_rrrf firpfb_rrrf_create_drnyquist(int _type, unsigned int _M, unsigned int _k, unsigned int _m, float _beta); firpfb_rrrf firpfb_rrrf_recreate(firpfb_rrrf _q, unsigned int _M, float * _h, unsigned int _h_len); void firpfb_rrrf_destroy(firpfb_rrrf _q); void firpfb_rrrf_print(firpfb_rrrf _q); void firpfb_rrrf_set_scale(firpfb_rrrf _q, float _scale); void firpfb_rrrf_get_scale(firpfb_rrrf _q, float * _scale); void firpfb_rrrf_reset(firpfb_rrrf _q); void firpfb_rrrf_push(firpfb_rrrf _q, float _x); void firpfb_rrrf_write(firpfb_rrrf _q, float * _x, unsigned int _n); void firpfb_rrrf_execute(firpfb_rrrf _q, unsigned int _i, float * _y); void firpfb_rrrf_execute_block(firpfb_rrrf _q, unsigned int _i, float * _x, unsigned int _n, float * _y);




typedef struct firpfb_crcf_s * firpfb_crcf; firpfb_crcf firpfb_crcf_create(unsigned int _M, float * _h, unsigned int _h_len); firpfb_crcf firpfb_crcf_create_default(unsigned int _M, unsigned int _m); firpfb_crcf firpfb_crcf_create_kaiser(unsigned int _M, unsigned int _m, float _fc, float _As); firpfb_crcf firpfb_crcf_create_rnyquist(int _type, unsigned int _M, unsigned int _k, unsigned int _m, float _beta); firpfb_crcf firpfb_crcf_create_drnyquist(int _type, unsigned int _M, unsigned int _k, unsigned int _m, float _beta); firpfb_crcf firpfb_crcf_recreate(firpfb_crcf _q, unsigned int _M, float * _h, unsigned int _h_len); void firpfb_crcf_destroy(firpfb_crcf _q); void firpfb_crcf_print(firpfb_crcf _q); void firpfb_crcf_set_scale(firpfb_crcf _q, float _scale); void firpfb_crcf_get_scale(firpfb_crcf _q, float * _scale); void firpfb_crcf_reset(firpfb_crcf _q); void firpfb_crcf_push(firpfb_crcf _q, liquid_float_complex _x); void firpfb_crcf_write(firpfb_crcf _q, liquid_float_complex * _x, unsigned int _n); void firpfb_crcf_execute(firpfb_crcf _q, unsigned int _i, liquid_float_complex * _y); void firpfb_crcf_execute_block(firpfb_crcf _q, unsigned int _i, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);




typedef struct firpfb_cccf_s * firpfb_cccf; firpfb_cccf firpfb_cccf_create(unsigned int _M, liquid_float_complex * _h, unsigned int _h_len); firpfb_cccf firpfb_cccf_create_default(unsigned int _M, unsigned int _m); firpfb_cccf firpfb_cccf_create_kaiser(unsigned int _M, unsigned int _m, float _fc, float _As); firpfb_cccf firpfb_cccf_create_rnyquist(int _type, unsigned int _M, unsigned int _k, unsigned int _m, float _beta); firpfb_cccf firpfb_cccf_create_drnyquist(int _type, unsigned int _M, unsigned int _k, unsigned int _m, float _beta); firpfb_cccf firpfb_cccf_recreate(firpfb_cccf _q, unsigned int _M, liquid_float_complex * _h, unsigned int _h_len); void firpfb_cccf_destroy(firpfb_cccf _q); void firpfb_cccf_print(firpfb_cccf _q); void firpfb_cccf_set_scale(firpfb_cccf _q, liquid_float_complex _scale); void firpfb_cccf_get_scale(firpfb_cccf _q, liquid_float_complex * _scale); void firpfb_cccf_reset(firpfb_cccf _q); void firpfb_cccf_push(firpfb_cccf _q, liquid_float_complex _x); void firpfb_cccf_write(firpfb_cccf _q, liquid_float_complex * _x, unsigned int _n); void firpfb_cccf_execute(firpfb_cccf _q, unsigned int _i, liquid_float_complex * _y); void firpfb_cccf_execute_block(firpfb_cccf _q, unsigned int _i, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);
# 3598 "/usr/local/include/liquid/liquid.h" 3
typedef struct firinterp_rrrf_s * firinterp_rrrf; firinterp_rrrf firinterp_rrrf_create(unsigned int _M, float * _h, unsigned int _h_len); firinterp_rrrf firinterp_rrrf_create_kaiser(unsigned int _M, unsigned int _m, float _As); firinterp_rrrf firinterp_rrrf_create_prototype(int _type, unsigned int _M, unsigned int _m, float _beta, float _dt); firinterp_rrrf firinterp_rrrf_create_linear(unsigned int _M); firinterp_rrrf firinterp_rrrf_create_window(unsigned int _M, unsigned int _m); void firinterp_rrrf_destroy(firinterp_rrrf _q); void firinterp_rrrf_print(firinterp_rrrf _q); void firinterp_rrrf_reset(firinterp_rrrf _q); unsigned int firinterp_rrrf_get_interp_rate(firinterp_rrrf _q); unsigned int firinterp_rrrf_get_sub_len(firinterp_rrrf _q); void firinterp_rrrf_set_scale(firinterp_rrrf _q, float _scale); void firinterp_rrrf_get_scale(firinterp_rrrf _q, float * _scale); void firinterp_rrrf_execute(firinterp_rrrf _q, float _x, float * _y); void firinterp_rrrf_execute_block(firinterp_rrrf _q, float * _x, unsigned int _n, float * _y);




typedef struct firinterp_crcf_s * firinterp_crcf; firinterp_crcf firinterp_crcf_create(unsigned int _M, float * _h, unsigned int _h_len); firinterp_crcf firinterp_crcf_create_kaiser(unsigned int _M, unsigned int _m, float _As); firinterp_crcf firinterp_crcf_create_prototype(int _type, unsigned int _M, unsigned int _m, float _beta, float _dt); firinterp_crcf firinterp_crcf_create_linear(unsigned int _M); firinterp_crcf firinterp_crcf_create_window(unsigned int _M, unsigned int _m); void firinterp_crcf_destroy(firinterp_crcf _q); void firinterp_crcf_print(firinterp_crcf _q); void firinterp_crcf_reset(firinterp_crcf _q); unsigned int firinterp_crcf_get_interp_rate(firinterp_crcf _q); unsigned int firinterp_crcf_get_sub_len(firinterp_crcf _q); void firinterp_crcf_set_scale(firinterp_crcf _q, float _scale); void firinterp_crcf_get_scale(firinterp_crcf _q, float * _scale); void firinterp_crcf_execute(firinterp_crcf _q, liquid_float_complex _x, liquid_float_complex * _y); void firinterp_crcf_execute_block(firinterp_crcf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);




typedef struct firinterp_cccf_s * firinterp_cccf; firinterp_cccf firinterp_cccf_create(unsigned int _M, liquid_float_complex * _h, unsigned int _h_len); firinterp_cccf firinterp_cccf_create_kaiser(unsigned int _M, unsigned int _m, float _As); firinterp_cccf firinterp_cccf_create_prototype(int _type, unsigned int _M, unsigned int _m, float _beta, float _dt); firinterp_cccf firinterp_cccf_create_linear(unsigned int _M); firinterp_cccf firinterp_cccf_create_window(unsigned int _M, unsigned int _m); void firinterp_cccf_destroy(firinterp_cccf _q); void firinterp_cccf_print(firinterp_cccf _q); void firinterp_cccf_reset(firinterp_cccf _q); unsigned int firinterp_cccf_get_interp_rate(firinterp_cccf _q); unsigned int firinterp_cccf_get_sub_len(firinterp_cccf _q); void firinterp_cccf_set_scale(firinterp_cccf _q, liquid_float_complex _scale); void firinterp_cccf_get_scale(firinterp_cccf _q, liquid_float_complex * _scale); void firinterp_cccf_execute(firinterp_cccf _q, liquid_float_complex _x, liquid_float_complex * _y); void firinterp_cccf_execute_block(firinterp_cccf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);
# 3704 "/usr/local/include/liquid/liquid.h" 3
typedef struct iirinterp_rrrf_s * iirinterp_rrrf; iirinterp_rrrf iirinterp_rrrf_create(unsigned int _M, float * _b, unsigned int _nb, float * _a, unsigned int _na); iirinterp_rrrf iirinterp_rrrf_create_default(unsigned int _M, unsigned int _order); iirinterp_rrrf iirinterp_rrrf_create_prototype( unsigned int _M, liquid_iirdes_filtertype _ftype, liquid_iirdes_bandtype _btype, liquid_iirdes_format _format, unsigned int _order, float _fc, float _f0, float _Ap, float _As); void iirinterp_rrrf_destroy(iirinterp_rrrf _q); void iirinterp_rrrf_print(iirinterp_rrrf _q); void iirinterp_rrrf_reset(iirinterp_rrrf _q); void iirinterp_rrrf_execute(iirinterp_rrrf _q, float _x, float * _y); void iirinterp_rrrf_execute_block(iirinterp_rrrf _q, float * _x, unsigned int _n, float * _y); float iirinterp_rrrf_groupdelay(iirinterp_rrrf _q, float _fc);




typedef struct iirinterp_crcf_s * iirinterp_crcf; iirinterp_crcf iirinterp_crcf_create(unsigned int _M, float * _b, unsigned int _nb, float * _a, unsigned int _na); iirinterp_crcf iirinterp_crcf_create_default(unsigned int _M, unsigned int _order); iirinterp_crcf iirinterp_crcf_create_prototype( unsigned int _M, liquid_iirdes_filtertype _ftype, liquid_iirdes_bandtype _btype, liquid_iirdes_format _format, unsigned int _order, float _fc, float _f0, float _Ap, float _As); void iirinterp_crcf_destroy(iirinterp_crcf _q); void iirinterp_crcf_print(iirinterp_crcf _q); void iirinterp_crcf_reset(iirinterp_crcf _q); void iirinterp_crcf_execute(iirinterp_crcf _q, liquid_float_complex _x, liquid_float_complex * _y); void iirinterp_crcf_execute_block(iirinterp_crcf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); float iirinterp_crcf_groupdelay(iirinterp_crcf _q, float _fc);




typedef struct iirinterp_cccf_s * iirinterp_cccf; iirinterp_cccf iirinterp_cccf_create(unsigned int _M, liquid_float_complex * _b, unsigned int _nb, liquid_float_complex * _a, unsigned int _na); iirinterp_cccf iirinterp_cccf_create_default(unsigned int _M, unsigned int _order); iirinterp_cccf iirinterp_cccf_create_prototype( unsigned int _M, liquid_iirdes_filtertype _ftype, liquid_iirdes_bandtype _btype, liquid_iirdes_format _format, unsigned int _order, float _fc, float _f0, float _Ap, float _As); void iirinterp_cccf_destroy(iirinterp_cccf _q); void iirinterp_cccf_print(iirinterp_cccf _q); void iirinterp_cccf_reset(iirinterp_cccf _q); void iirinterp_cccf_execute(iirinterp_cccf _q, liquid_float_complex _x, liquid_float_complex * _y); void iirinterp_cccf_execute_block(iirinterp_cccf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); float iirinterp_cccf_groupdelay(iirinterp_cccf _q, float _fc);
# 3804 "/usr/local/include/liquid/liquid.h" 3
typedef struct firdecim_rrrf_s * firdecim_rrrf; firdecim_rrrf firdecim_rrrf_create(unsigned int _M, float * _h, unsigned int _h_len); firdecim_rrrf firdecim_rrrf_create_kaiser(unsigned int _M, unsigned int _m, float _As); firdecim_rrrf firdecim_rrrf_create_prototype(int _type, unsigned int _M, unsigned int _m, float _beta, float _dt); void firdecim_rrrf_destroy(firdecim_rrrf _q); void firdecim_rrrf_print(firdecim_rrrf _q); void firdecim_rrrf_reset(firdecim_rrrf _q); unsigned int firdecim_rrrf_get_decim_rate(firdecim_rrrf _q); void firdecim_rrrf_set_scale(firdecim_rrrf _q, float _scale); void firdecim_rrrf_get_scale(firdecim_rrrf _q, float * _scale); void firdecim_rrrf_execute(firdecim_rrrf _q, float * _x, float * _y); void firdecim_rrrf_execute_block(firdecim_rrrf _q, float * _x, unsigned int _n, float * _y);




typedef struct firdecim_crcf_s * firdecim_crcf; firdecim_crcf firdecim_crcf_create(unsigned int _M, float * _h, unsigned int _h_len); firdecim_crcf firdecim_crcf_create_kaiser(unsigned int _M, unsigned int _m, float _As); firdecim_crcf firdecim_crcf_create_prototype(int _type, unsigned int _M, unsigned int _m, float _beta, float _dt); void firdecim_crcf_destroy(firdecim_crcf _q); void firdecim_crcf_print(firdecim_crcf _q); void firdecim_crcf_reset(firdecim_crcf _q); unsigned int firdecim_crcf_get_decim_rate(firdecim_crcf _q); void firdecim_crcf_set_scale(firdecim_crcf _q, float _scale); void firdecim_crcf_get_scale(firdecim_crcf _q, float * _scale); void firdecim_crcf_execute(firdecim_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y); void firdecim_crcf_execute_block(firdecim_crcf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);




typedef struct firdecim_cccf_s * firdecim_cccf; firdecim_cccf firdecim_cccf_create(unsigned int _M, liquid_float_complex * _h, unsigned int _h_len); firdecim_cccf firdecim_cccf_create_kaiser(unsigned int _M, unsigned int _m, float _As); firdecim_cccf firdecim_cccf_create_prototype(int _type, unsigned int _M, unsigned int _m, float _beta, float _dt); void firdecim_cccf_destroy(firdecim_cccf _q); void firdecim_cccf_print(firdecim_cccf _q); void firdecim_cccf_reset(firdecim_cccf _q); unsigned int firdecim_cccf_get_decim_rate(firdecim_cccf _q); void firdecim_cccf_set_scale(firdecim_cccf _q, liquid_float_complex _scale); void firdecim_cccf_get_scale(firdecim_cccf _q, liquid_float_complex * _scale); void firdecim_cccf_execute(firdecim_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y); void firdecim_cccf_execute_block(firdecim_cccf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);
# 3910 "/usr/local/include/liquid/liquid.h" 3
typedef struct iirdecim_rrrf_s * iirdecim_rrrf; iirdecim_rrrf iirdecim_rrrf_create(unsigned int _M, float * _b, unsigned int _nb, float * _a, unsigned int _na); iirdecim_rrrf iirdecim_rrrf_create_default(unsigned int _M, unsigned int _order); iirdecim_rrrf iirdecim_rrrf_create_prototype( unsigned int _M, liquid_iirdes_filtertype _ftype, liquid_iirdes_bandtype _btype, liquid_iirdes_format _format, unsigned int _order, float _fc, float _f0, float _Ap, float _As); void iirdecim_rrrf_destroy(iirdecim_rrrf _q); void iirdecim_rrrf_print(iirdecim_rrrf _q); void iirdecim_rrrf_reset(iirdecim_rrrf _q); void iirdecim_rrrf_execute(iirdecim_rrrf _q, float * _x, float * _y); void iirdecim_rrrf_execute_block(iirdecim_rrrf _q, float * _x, unsigned int _n, float * _y); float iirdecim_rrrf_groupdelay(iirdecim_rrrf _q, float _fc);




typedef struct iirdecim_crcf_s * iirdecim_crcf; iirdecim_crcf iirdecim_crcf_create(unsigned int _M, float * _b, unsigned int _nb, float * _a, unsigned int _na); iirdecim_crcf iirdecim_crcf_create_default(unsigned int _M, unsigned int _order); iirdecim_crcf iirdecim_crcf_create_prototype( unsigned int _M, liquid_iirdes_filtertype _ftype, liquid_iirdes_bandtype _btype, liquid_iirdes_format _format, unsigned int _order, float _fc, float _f0, float _Ap, float _As); void iirdecim_crcf_destroy(iirdecim_crcf _q); void iirdecim_crcf_print(iirdecim_crcf _q); void iirdecim_crcf_reset(iirdecim_crcf _q); void iirdecim_crcf_execute(iirdecim_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y); void iirdecim_crcf_execute_block(iirdecim_crcf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); float iirdecim_crcf_groupdelay(iirdecim_crcf _q, float _fc);




typedef struct iirdecim_cccf_s * iirdecim_cccf; iirdecim_cccf iirdecim_cccf_create(unsigned int _M, liquid_float_complex * _b, unsigned int _nb, liquid_float_complex * _a, unsigned int _na); iirdecim_cccf iirdecim_cccf_create_default(unsigned int _M, unsigned int _order); iirdecim_cccf iirdecim_cccf_create_prototype( unsigned int _M, liquid_iirdes_filtertype _ftype, liquid_iirdes_bandtype _btype, liquid_iirdes_format _format, unsigned int _order, float _fc, float _f0, float _Ap, float _As); void iirdecim_cccf_destroy(iirdecim_cccf _q); void iirdecim_cccf_print(iirdecim_cccf _q); void iirdecim_cccf_reset(iirdecim_cccf _q); void iirdecim_cccf_execute(iirdecim_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y); void iirdecim_cccf_execute_block(iirdecim_cccf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); float iirdecim_cccf_groupdelay(iirdecim_cccf _q, float _fc);
# 4033 "/usr/local/include/liquid/liquid.h" 3
typedef struct resamp2_rrrf_s * resamp2_rrrf; resamp2_rrrf resamp2_rrrf_create(unsigned int _m, float _f0, float _As); resamp2_rrrf resamp2_rrrf_recreate(resamp2_rrrf _q, unsigned int _m, float _f0, float _As); void resamp2_rrrf_destroy(resamp2_rrrf _q); void resamp2_rrrf_print(resamp2_rrrf _q); void resamp2_rrrf_reset(resamp2_rrrf _q); unsigned int resamp2_rrrf_get_delay(resamp2_rrrf _q); int resamp2_rrrf_set_scale(resamp2_rrrf _q, float _scale); void resamp2_rrrf_get_scale(resamp2_rrrf _q, float * _scale); void resamp2_rrrf_filter_execute(resamp2_rrrf _q, float _x, float * _y0, float * _y1); void resamp2_rrrf_analyzer_execute(resamp2_rrrf _q, float * _x, float * _y); void resamp2_rrrf_synthesizer_execute(resamp2_rrrf _q, float * _x, float * _y); void resamp2_rrrf_decim_execute(resamp2_rrrf _q, float * _x, float * _y); void resamp2_rrrf_interp_execute(resamp2_rrrf _q, float _x, float * _y);




typedef struct resamp2_crcf_s * resamp2_crcf; resamp2_crcf resamp2_crcf_create(unsigned int _m, float _f0, float _As); resamp2_crcf resamp2_crcf_recreate(resamp2_crcf _q, unsigned int _m, float _f0, float _As); void resamp2_crcf_destroy(resamp2_crcf _q); void resamp2_crcf_print(resamp2_crcf _q); void resamp2_crcf_reset(resamp2_crcf _q); unsigned int resamp2_crcf_get_delay(resamp2_crcf _q); int resamp2_crcf_set_scale(resamp2_crcf _q, float _scale); void resamp2_crcf_get_scale(resamp2_crcf _q, float * _scale); void resamp2_crcf_filter_execute(resamp2_crcf _q, liquid_float_complex _x, liquid_float_complex * _y0, liquid_float_complex * _y1); void resamp2_crcf_analyzer_execute(resamp2_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y); void resamp2_crcf_synthesizer_execute(resamp2_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y); void resamp2_crcf_decim_execute(resamp2_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y); void resamp2_crcf_interp_execute(resamp2_crcf _q, liquid_float_complex _x, liquid_float_complex * _y);




typedef struct resamp2_cccf_s * resamp2_cccf; resamp2_cccf resamp2_cccf_create(unsigned int _m, float _f0, float _As); resamp2_cccf resamp2_cccf_recreate(resamp2_cccf _q, unsigned int _m, float _f0, float _As); void resamp2_cccf_destroy(resamp2_cccf _q); void resamp2_cccf_print(resamp2_cccf _q); void resamp2_cccf_reset(resamp2_cccf _q); unsigned int resamp2_cccf_get_delay(resamp2_cccf _q); int resamp2_cccf_set_scale(resamp2_cccf _q, liquid_float_complex _scale); void resamp2_cccf_get_scale(resamp2_cccf _q, liquid_float_complex * _scale); void resamp2_cccf_filter_execute(resamp2_cccf _q, liquid_float_complex _x, liquid_float_complex * _y0, liquid_float_complex * _y1); void resamp2_cccf_analyzer_execute(resamp2_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y); void resamp2_cccf_synthesizer_execute(resamp2_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y); void resamp2_cccf_decim_execute(resamp2_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y); void resamp2_cccf_interp_execute(resamp2_cccf _q, liquid_float_complex _x, liquid_float_complex * _y);
# 4200 "/usr/local/include/liquid/liquid.h" 3
typedef struct rresamp_rrrf_s * rresamp_rrrf; rresamp_rrrf rresamp_rrrf_create(unsigned int _P, unsigned int _Q, unsigned int _m, float * _h); rresamp_rrrf rresamp_rrrf_create_kaiser(unsigned int _P, unsigned int _Q, unsigned int _m, float _bw, float _As); rresamp_rrrf rresamp_rrrf_create_prototype(int _type, unsigned int _P, unsigned int _Q, unsigned int _m, float _beta); rresamp_rrrf rresamp_rrrf_create_default(unsigned int _P, unsigned int _Q); void rresamp_rrrf_destroy(rresamp_rrrf _q); void rresamp_rrrf_print(rresamp_rrrf _q); void rresamp_rrrf_reset(rresamp_rrrf _q); void rresamp_rrrf_set_scale(rresamp_rrrf _q, float _scale); void rresamp_rrrf_get_scale(rresamp_rrrf _q, float * _scale); unsigned int rresamp_rrrf_get_delay(rresamp_rrrf _q); unsigned int rresamp_rrrf_get_P(rresamp_rrrf _q); unsigned int rresamp_rrrf_get_interp(rresamp_rrrf _q); unsigned int rresamp_rrrf_get_Q(rresamp_rrrf _q); unsigned int rresamp_rrrf_get_decim(rresamp_rrrf _q); unsigned int rresamp_rrrf_get_block_len(rresamp_rrrf _q); float rresamp_rrrf_get_rate(rresamp_rrrf _q); void rresamp_rrrf_write(rresamp_rrrf _q, float * _buf); void rresamp_rrrf_execute(rresamp_rrrf _q, float * _x, float * _y); void rresamp_rrrf_execute_block(rresamp_rrrf _q, float * _x, unsigned int _n, float * _y);




typedef struct rresamp_crcf_s * rresamp_crcf; rresamp_crcf rresamp_crcf_create(unsigned int _P, unsigned int _Q, unsigned int _m, float * _h); rresamp_crcf rresamp_crcf_create_kaiser(unsigned int _P, unsigned int _Q, unsigned int _m, float _bw, float _As); rresamp_crcf rresamp_crcf_create_prototype(int _type, unsigned int _P, unsigned int _Q, unsigned int _m, float _beta); rresamp_crcf rresamp_crcf_create_default(unsigned int _P, unsigned int _Q); void rresamp_crcf_destroy(rresamp_crcf _q); void rresamp_crcf_print(rresamp_crcf _q); void rresamp_crcf_reset(rresamp_crcf _q); void rresamp_crcf_set_scale(rresamp_crcf _q, float _scale); void rresamp_crcf_get_scale(rresamp_crcf _q, float * _scale); unsigned int rresamp_crcf_get_delay(rresamp_crcf _q); unsigned int rresamp_crcf_get_P(rresamp_crcf _q); unsigned int rresamp_crcf_get_interp(rresamp_crcf _q); unsigned int rresamp_crcf_get_Q(rresamp_crcf _q); unsigned int rresamp_crcf_get_decim(rresamp_crcf _q); unsigned int rresamp_crcf_get_block_len(rresamp_crcf _q); float rresamp_crcf_get_rate(rresamp_crcf _q); void rresamp_crcf_write(rresamp_crcf _q, liquid_float_complex * _buf); void rresamp_crcf_execute(rresamp_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y); void rresamp_crcf_execute_block(rresamp_crcf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);




typedef struct rresamp_cccf_s * rresamp_cccf; rresamp_cccf rresamp_cccf_create(unsigned int _P, unsigned int _Q, unsigned int _m, liquid_float_complex * _h); rresamp_cccf rresamp_cccf_create_kaiser(unsigned int _P, unsigned int _Q, unsigned int _m, float _bw, float _As); rresamp_cccf rresamp_cccf_create_prototype(int _type, unsigned int _P, unsigned int _Q, unsigned int _m, float _beta); rresamp_cccf rresamp_cccf_create_default(unsigned int _P, unsigned int _Q); void rresamp_cccf_destroy(rresamp_cccf _q); void rresamp_cccf_print(rresamp_cccf _q); void rresamp_cccf_reset(rresamp_cccf _q); void rresamp_cccf_set_scale(rresamp_cccf _q, liquid_float_complex _scale); void rresamp_cccf_get_scale(rresamp_cccf _q, liquid_float_complex * _scale); unsigned int rresamp_cccf_get_delay(rresamp_cccf _q); unsigned int rresamp_cccf_get_P(rresamp_cccf _q); unsigned int rresamp_cccf_get_interp(rresamp_cccf _q); unsigned int rresamp_cccf_get_Q(rresamp_cccf _q); unsigned int rresamp_cccf_get_decim(rresamp_cccf _q); unsigned int rresamp_cccf_get_block_len(rresamp_cccf _q); float rresamp_cccf_get_rate(rresamp_cccf _q); void rresamp_cccf_write(rresamp_cccf _q, liquid_float_complex * _buf); void rresamp_cccf_execute(rresamp_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y); void rresamp_cccf_execute_block(rresamp_cccf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);
# 4319 "/usr/local/include/liquid/liquid.h" 3
typedef struct resamp_rrrf_s * resamp_rrrf; resamp_rrrf resamp_rrrf_create(float _rate, unsigned int _m, float _fc, float _As, unsigned int _npfb); resamp_rrrf resamp_rrrf_create_default(float _rate); void resamp_rrrf_destroy(resamp_rrrf _q); void resamp_rrrf_print(resamp_rrrf _q); void resamp_rrrf_reset(resamp_rrrf _q); unsigned int resamp_rrrf_get_delay(resamp_rrrf _q); void resamp_rrrf_set_rate(resamp_rrrf _q, float _rate); float resamp_rrrf_get_rate(resamp_rrrf _q); void resamp_rrrf_adjust_rate(resamp_rrrf _q, float _gamma); void resamp_rrrf_set_timing_phase(resamp_rrrf _q, float _tau); void resamp_rrrf_adjust_timing_phase(resamp_rrrf _q, float _delta); void resamp_rrrf_execute(resamp_rrrf _q, float _x, float * _y, unsigned int * _num_written); void resamp_rrrf_execute_block(resamp_rrrf _q, float * _x, unsigned int _nx, float * _y, unsigned int * _ny);




typedef struct resamp_crcf_s * resamp_crcf; resamp_crcf resamp_crcf_create(float _rate, unsigned int _m, float _fc, float _As, unsigned int _npfb); resamp_crcf resamp_crcf_create_default(float _rate); void resamp_crcf_destroy(resamp_crcf _q); void resamp_crcf_print(resamp_crcf _q); void resamp_crcf_reset(resamp_crcf _q); unsigned int resamp_crcf_get_delay(resamp_crcf _q); void resamp_crcf_set_rate(resamp_crcf _q, float _rate); float resamp_crcf_get_rate(resamp_crcf _q); void resamp_crcf_adjust_rate(resamp_crcf _q, float _gamma); void resamp_crcf_set_timing_phase(resamp_crcf _q, float _tau); void resamp_crcf_adjust_timing_phase(resamp_crcf _q, float _delta); void resamp_crcf_execute(resamp_crcf _q, liquid_float_complex _x, liquid_float_complex * _y, unsigned int * _num_written); void resamp_crcf_execute_block(resamp_crcf _q, liquid_float_complex * _x, unsigned int _nx, liquid_float_complex * _y, unsigned int * _ny);




typedef struct resamp_cccf_s * resamp_cccf; resamp_cccf resamp_cccf_create(float _rate, unsigned int _m, float _fc, float _As, unsigned int _npfb); resamp_cccf resamp_cccf_create_default(float _rate); void resamp_cccf_destroy(resamp_cccf _q); void resamp_cccf_print(resamp_cccf _q); void resamp_cccf_reset(resamp_cccf _q); unsigned int resamp_cccf_get_delay(resamp_cccf _q); void resamp_cccf_set_rate(resamp_cccf _q, float _rate); float resamp_cccf_get_rate(resamp_cccf _q); void resamp_cccf_adjust_rate(resamp_cccf _q, float _gamma); void resamp_cccf_set_timing_phase(resamp_cccf _q, float _tau); void resamp_cccf_adjust_timing_phase(resamp_cccf _q, float _delta); void resamp_cccf_execute(resamp_cccf _q, liquid_float_complex _x, liquid_float_complex * _y, unsigned int * _num_written); void resamp_cccf_execute_block(resamp_cccf _q, liquid_float_complex * _x, unsigned int _nx, liquid_float_complex * _y, unsigned int * _ny);
# 4340 "/usr/local/include/liquid/liquid.h" 3
typedef enum {
    LIQUID_RESAMP_INTERP=0,
    LIQUID_RESAMP_DECIM,
} liquid_resamp_type;
# 4399 "/usr/local/include/liquid/liquid.h" 3
typedef struct msresamp2_rrrf_s * msresamp2_rrrf; msresamp2_rrrf msresamp2_rrrf_create(int _type, unsigned int _num_stages, float _fc, float _f0, float _As); void msresamp2_rrrf_destroy(msresamp2_rrrf _q); void msresamp2_rrrf_print(msresamp2_rrrf _q); void msresamp2_rrrf_reset(msresamp2_rrrf _q); float msresamp2_rrrf_get_rate(msresamp2_rrrf _q); unsigned int msresamp2_rrrf_get_num_stages(msresamp2_rrrf _q); int msresamp2_rrrf_get_type(msresamp2_rrrf _q); float msresamp2_rrrf_get_delay(msresamp2_rrrf _q); void msresamp2_rrrf_execute(msresamp2_rrrf _q, float * _x, float * _y);




typedef struct msresamp2_crcf_s * msresamp2_crcf; msresamp2_crcf msresamp2_crcf_create(int _type, unsigned int _num_stages, float _fc, float _f0, float _As); void msresamp2_crcf_destroy(msresamp2_crcf _q); void msresamp2_crcf_print(msresamp2_crcf _q); void msresamp2_crcf_reset(msresamp2_crcf _q); float msresamp2_crcf_get_rate(msresamp2_crcf _q); unsigned int msresamp2_crcf_get_num_stages(msresamp2_crcf _q); int msresamp2_crcf_get_type(msresamp2_crcf _q); float msresamp2_crcf_get_delay(msresamp2_crcf _q); void msresamp2_crcf_execute(msresamp2_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y);




typedef struct msresamp2_cccf_s * msresamp2_cccf; msresamp2_cccf msresamp2_cccf_create(int _type, unsigned int _num_stages, float _fc, float _f0, float _As); void msresamp2_cccf_destroy(msresamp2_cccf _q); void msresamp2_cccf_print(msresamp2_cccf _q); void msresamp2_cccf_reset(msresamp2_cccf _q); float msresamp2_cccf_get_rate(msresamp2_cccf _q); unsigned int msresamp2_cccf_get_num_stages(msresamp2_cccf _q); int msresamp2_cccf_get_type(msresamp2_cccf _q); float msresamp2_cccf_get_delay(msresamp2_cccf _q); void msresamp2_cccf_execute(msresamp2_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y);
# 4466 "/usr/local/include/liquid/liquid.h" 3
typedef struct msresamp_rrrf_s * msresamp_rrrf; msresamp_rrrf msresamp_rrrf_create(float _r, float _As); void msresamp_rrrf_destroy(msresamp_rrrf _q); void msresamp_rrrf_print(msresamp_rrrf _q); void msresamp_rrrf_reset(msresamp_rrrf _q); float msresamp_rrrf_get_delay(msresamp_rrrf _q); float msresamp_rrrf_get_rate(msresamp_rrrf _q); void msresamp_rrrf_execute(msresamp_rrrf _q, float * _x, unsigned int _nx, float * _y, unsigned int * _ny);




typedef struct msresamp_crcf_s * msresamp_crcf; msresamp_crcf msresamp_crcf_create(float _r, float _As); void msresamp_crcf_destroy(msresamp_crcf _q); void msresamp_crcf_print(msresamp_crcf _q); void msresamp_crcf_reset(msresamp_crcf _q); float msresamp_crcf_get_delay(msresamp_crcf _q); float msresamp_crcf_get_rate(msresamp_crcf _q); void msresamp_crcf_execute(msresamp_crcf _q, liquid_float_complex * _x, unsigned int _nx, liquid_float_complex * _y, unsigned int * _ny);




typedef struct msresamp_cccf_s * msresamp_cccf; msresamp_cccf msresamp_cccf_create(float _r, float _As); void msresamp_cccf_destroy(msresamp_cccf _q); void msresamp_cccf_print(msresamp_cccf _q); void msresamp_cccf_reset(msresamp_cccf _q); float msresamp_cccf_get_delay(msresamp_cccf _q); float msresamp_cccf_get_rate(msresamp_cccf _q); void msresamp_cccf_execute(msresamp_cccf _q, liquid_float_complex * _x, unsigned int _nx, liquid_float_complex * _y, unsigned int * _ny);
# 4534 "/usr/local/include/liquid/liquid.h" 3
typedef struct dds_cccf_s * dds_cccf; dds_cccf dds_cccf_create(unsigned int _num_stages, float _fc, float _bw, float _As); int dds_cccf_destroy(dds_cccf _q); int dds_cccf_print(dds_cccf _q); int dds_cccf_reset(dds_cccf _q); unsigned int dds_cccf_get_num_stages(dds_cccf _q); unsigned int dds_cccf_get_delay_interp(dds_cccf _q); float dds_cccf_get_delay_decim(dds_cccf _q); int dds_cccf_decim_execute(dds_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y); int dds_cccf_interp_execute(dds_cccf _q, liquid_float_complex _x, liquid_float_complex * _y);
# 4626 "/usr/local/include/liquid/liquid.h" 3
typedef struct symsync_rrrf_s * symsync_rrrf; symsync_rrrf symsync_rrrf_create(unsigned int _k, unsigned int _M, float * _h, unsigned int _h_len); symsync_rrrf symsync_rrrf_create_rnyquist(int _type, unsigned int _k, unsigned int _m, float _beta, unsigned int _M); symsync_rrrf symsync_rrrf_create_kaiser(unsigned int _k, unsigned int _m, float _beta, unsigned int _M); void symsync_rrrf_destroy(symsync_rrrf _q); void symsync_rrrf_print(symsync_rrrf _q); void symsync_rrrf_reset(symsync_rrrf _q); void symsync_rrrf_lock(symsync_rrrf _q); void symsync_rrrf_unlock(symsync_rrrf _q); void symsync_rrrf_set_output_rate(symsync_rrrf _q, unsigned int _k_out); void symsync_rrrf_set_lf_bw(symsync_rrrf _q, float _bt); float symsync_rrrf_get_tau(symsync_rrrf _q); void symsync_rrrf_execute(symsync_rrrf _q, float * _x, unsigned int _nx, float * _y, unsigned int * _ny);




typedef struct symsync_crcf_s * symsync_crcf; symsync_crcf symsync_crcf_create(unsigned int _k, unsigned int _M, float * _h, unsigned int _h_len); symsync_crcf symsync_crcf_create_rnyquist(int _type, unsigned int _k, unsigned int _m, float _beta, unsigned int _M); symsync_crcf symsync_crcf_create_kaiser(unsigned int _k, unsigned int _m, float _beta, unsigned int _M); void symsync_crcf_destroy(symsync_crcf _q); void symsync_crcf_print(symsync_crcf _q); void symsync_crcf_reset(symsync_crcf _q); void symsync_crcf_lock(symsync_crcf _q); void symsync_crcf_unlock(symsync_crcf _q); void symsync_crcf_set_output_rate(symsync_crcf _q, unsigned int _k_out); void symsync_crcf_set_lf_bw(symsync_crcf _q, float _bt); float symsync_crcf_get_tau(symsync_crcf _q); void symsync_crcf_execute(symsync_crcf _q, liquid_float_complex * _x, unsigned int _nx, liquid_float_complex * _y, unsigned int * _ny);
# 4727 "/usr/local/include/liquid/liquid.h" 3
typedef struct firfarrow_rrrf_s * firfarrow_rrrf; firfarrow_rrrf firfarrow_rrrf_create(unsigned int _h_len, unsigned int _p, float _fc, float _As); int firfarrow_rrrf_destroy(firfarrow_rrrf _q); int firfarrow_rrrf_print(firfarrow_rrrf _q); int firfarrow_rrrf_reset(firfarrow_rrrf _q); int firfarrow_rrrf_push(firfarrow_rrrf _q, float _x); int firfarrow_rrrf_set_delay(firfarrow_rrrf _q, float _mu); int firfarrow_rrrf_execute(firfarrow_rrrf _q, float * _y); int firfarrow_rrrf_execute_block(firfarrow_rrrf _q, float * _x, unsigned int _n, float * _y); unsigned int firfarrow_rrrf_get_length(firfarrow_rrrf _q); int firfarrow_rrrf_get_coefficients(firfarrow_rrrf _q, float * _h); int firfarrow_rrrf_freqresponse(firfarrow_rrrf _q, float _fc, liquid_float_complex * _H); float firfarrow_rrrf_groupdelay(firfarrow_rrrf _q, float _fc);




typedef struct firfarrow_crcf_s * firfarrow_crcf; firfarrow_crcf firfarrow_crcf_create(unsigned int _h_len, unsigned int _p, float _fc, float _As); int firfarrow_crcf_destroy(firfarrow_crcf _q); int firfarrow_crcf_print(firfarrow_crcf _q); int firfarrow_crcf_reset(firfarrow_crcf _q); int firfarrow_crcf_push(firfarrow_crcf _q, liquid_float_complex _x); int firfarrow_crcf_set_delay(firfarrow_crcf _q, float _mu); int firfarrow_crcf_execute(firfarrow_crcf _q, liquid_float_complex * _y); int firfarrow_crcf_execute_block(firfarrow_crcf _q, liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y); unsigned int firfarrow_crcf_get_length(firfarrow_crcf _q); int firfarrow_crcf_get_coefficients(firfarrow_crcf _q, float * _h); int firfarrow_crcf_freqresponse(firfarrow_crcf _q, float _fc, liquid_float_complex * _H); float firfarrow_crcf_groupdelay(firfarrow_crcf _q, float _fc);
# 4806 "/usr/local/include/liquid/liquid.h" 3
typedef struct ordfilt_rrrf_s * ordfilt_rrrf; ordfilt_rrrf ordfilt_rrrf_create(unsigned int _n, unsigned int _k); ordfilt_rrrf ordfilt_rrrf_create_medfilt(unsigned int _m); void ordfilt_rrrf_destroy(ordfilt_rrrf _q); void ordfilt_rrrf_reset(ordfilt_rrrf _q); void ordfilt_rrrf_print(ordfilt_rrrf _q); void ordfilt_rrrf_push(ordfilt_rrrf _q, float _x); void ordfilt_rrrf_write(ordfilt_rrrf _q, float * _x, unsigned int _n); void ordfilt_rrrf_execute(ordfilt_rrrf _q, float * _y); void ordfilt_rrrf_execute_block(ordfilt_rrrf _q, float * _x, unsigned int _n, float * _y);
# 4818 "/usr/local/include/liquid/liquid.h" 3
typedef struct {

    float evm;
    float rssi;
    float cfo;


    liquid_float_complex * framesyms;
    unsigned int num_framesyms;


    unsigned int mod_scheme;
    unsigned int mod_bps;
    unsigned int check;
    unsigned int fec0;
    unsigned int fec1;
} framesyncstats_s;


extern framesyncstats_s framesyncstats_default;


int framesyncstats_init_default(framesyncstats_s * _stats);


int framesyncstats_print(framesyncstats_s * _stats);



typedef struct {
    unsigned int num_frames_detected;
    unsigned int num_headers_valid;
    unsigned int num_payloads_valid;
    unsigned long int num_bytes_received;
} framedatastats_s;


int framedatastats_reset(framedatastats_s * _stats);


int framedatastats_print(framedatastats_s * _stats);
# 4869 "/usr/local/include/liquid/liquid.h" 3
typedef int (*framesync_callback)(unsigned char * _header,
                                  int _header_valid,
                                  unsigned char * _payload,
                                  unsigned int _payload_len,
                                  int _payload_valid,
                                  framesyncstats_s _stats,
                                  void * _userdata);



typedef void (*framesync_csma_callback)(void * _userdata);





typedef struct qpacketmodem_s * qpacketmodem;


qpacketmodem qpacketmodem_create ();
int qpacketmodem_destroy(qpacketmodem _q);
int qpacketmodem_reset (qpacketmodem _q);
int qpacketmodem_print (qpacketmodem _q);

int qpacketmodem_configure(qpacketmodem _q,
                           unsigned int _payload_len,
                           crc_scheme _check,
                           fec_scheme _fec0,
                           fec_scheme _fec1,
                           int _ms);


unsigned int qpacketmodem_get_frame_len(qpacketmodem _q);


unsigned int qpacketmodem_get_payload_len(qpacketmodem _q);


unsigned int qpacketmodem_get_crc (qpacketmodem _q);
unsigned int qpacketmodem_get_fec0 (qpacketmodem _q);
unsigned int qpacketmodem_get_fec1 (qpacketmodem _q);
unsigned int qpacketmodem_get_modscheme(qpacketmodem _q);

float qpacketmodem_get_demodulator_phase_error(qpacketmodem _q);
float qpacketmodem_get_demodulator_evm(qpacketmodem _q);





int qpacketmodem_encode_syms(qpacketmodem _q,
                             const unsigned char * _payload,
                             unsigned char * _syms);





int qpacketmodem_decode_syms(qpacketmodem _q,
                             unsigned char * _syms,
                             unsigned char * _payload);





int qpacketmodem_decode_bits(qpacketmodem _q,
                             unsigned char * _bits,
                             unsigned char * _payload);





int qpacketmodem_encode(qpacketmodem _q,
                        const unsigned char * _payload,
                        liquid_float_complex * _frame);






int qpacketmodem_decode(qpacketmodem _q,
                        liquid_float_complex * _frame,
                        unsigned char * _payload);






int qpacketmodem_decode_soft(qpacketmodem _q,
                             liquid_float_complex * _frame,
                             unsigned char * _payload);

int qpacketmodem_decode_soft_sym(qpacketmodem _q,
                                 liquid_float_complex _symbol);

int qpacketmodem_decode_soft_payload(qpacketmodem _q,
                                     unsigned char * _payload);






unsigned int qpilot_num_pilots(unsigned int _payload_len,
                               unsigned int _pilot_spacing);


unsigned int qpilot_frame_len(unsigned int _payload_len,
                              unsigned int _pilot_spacing);





typedef struct qpilotgen_s * qpilotgen;


qpilotgen qpilotgen_create(unsigned int _payload_len,
                           unsigned int _pilot_spacing);

qpilotgen qpilotgen_recreate(qpilotgen _q,
                             unsigned int _payload_len,
                             unsigned int _pilot_spacing);

int qpilotgen_destroy(qpilotgen _q);
int qpilotgen_reset( qpilotgen _q);
int qpilotgen_print( qpilotgen _q);

unsigned int qpilotgen_get_frame_len(qpilotgen _q);


int qpilotgen_execute(qpilotgen _q,
                      liquid_float_complex * _payload,
                      liquid_float_complex * _frame);




typedef struct qpilotsync_s * qpilotsync;


qpilotsync qpilotsync_create(unsigned int _payload_len,
                             unsigned int _pilot_spacing);

qpilotsync qpilotsync_recreate(qpilotsync _q,
                               unsigned int _payload_len,
                               unsigned int _pilot_spacing);

int qpilotsync_destroy(qpilotsync _q);
int qpilotsync_reset( qpilotsync _q);
int qpilotsync_print( qpilotsync _q);

unsigned int qpilotsync_get_frame_len(qpilotsync _q);


int qpilotsync_execute(qpilotsync _q,
                       liquid_float_complex * _frame,
                       liquid_float_complex * _payload);


float qpilotsync_get_dphi(qpilotsync _q);
float qpilotsync_get_phi (qpilotsync _q);
float qpilotsync_get_gain(qpilotsync _q);
float qpilotsync_get_evm (qpilotsync _q);
# 5046 "/usr/local/include/liquid/liquid.h" 3
typedef struct framegen64_s * framegen64;


framegen64 framegen64_create();


int framegen64_destroy(framegen64 _q);


int framegen64_print(framegen64 _q);






int framegen64_execute(framegen64 _q,
                       unsigned char * _header,
                       unsigned char * _payload,
                       liquid_float_complex * _frame);

typedef struct framesync64_s * framesync64;




framesync64 framesync64_create(framesync_callback _callback,
                               void * _userdata);


int framesync64_destroy(framesync64 _q);


int framesync64_print(framesync64 _q);


int framesync64_reset(framesync64 _q);





int framesync64_execute(framesync64 _q,
                        liquid_float_complex * _x,
                        unsigned int _n);


int framesync64_debug_enable(framesync64 _q);
int framesync64_debug_disable(framesync64 _q);
int framesync64_debug_print(framesync64 _q, const char * _filename);


float framesync64_get_threshold(framesync64 _q);
int framesync64_set_threshold(framesync64 _q, float _threshold);


int framesync64_reset_framedatastats(framesync64 _q);
framedatastats_s framesync64_get_framedatastats (framesync64 _q);
# 5119 "/usr/local/include/liquid/liquid.h" 3
typedef struct {
    unsigned int check;
    unsigned int fec0;
    unsigned int fec1;
    unsigned int mod_scheme;
} flexframegenprops_s;

int flexframegenprops_init_default(flexframegenprops_s * _fgprops);

typedef struct flexframegen_s * flexframegen;



flexframegen flexframegen_create(flexframegenprops_s * _props);


int flexframegen_destroy(flexframegen _q);


int flexframegen_print(flexframegen _q);


int flexframegen_reset(flexframegen _q);


int flexframegen_is_assembled(flexframegen _q);


int flexframegen_getprops(flexframegen _q, flexframegenprops_s * _props);


int flexframegen_setprops(flexframegen _q, flexframegenprops_s * _props);


int flexframegen_set_header_len(flexframegen _q, unsigned int _len);


int flexframegen_set_header_props(flexframegen _q,
                                  flexframegenprops_s * _props);


unsigned int flexframegen_getframelen(flexframegen _q);






int flexframegen_assemble(flexframegen _q,
                          const unsigned char * _header,
                          const unsigned char * _payload,
                          unsigned int _payload_len);







int flexframegen_write_samples(flexframegen _q,
                               liquid_float_complex * _buffer,
                               unsigned int _buffer_len);



typedef struct flexframesync_s * flexframesync;




flexframesync flexframesync_create(framesync_callback _callback,
                                   void * _userdata);


int flexframesync_destroy(flexframesync _q);


int flexframesync_print(flexframesync _q);


int flexframesync_reset(flexframesync _q);


int flexframesync_is_frame_open(flexframesync _q);


int flexframesync_set_header_len(flexframesync _q,
                                 unsigned int _len);


int flexframesync_decode_header_soft(flexframesync _q,
                                     int _soft);


int flexframesync_decode_payload_soft(flexframesync _q,
                                      int _soft);


int flexframesync_set_header_props(flexframesync _q,
                                   flexframegenprops_s * _props);





int flexframesync_execute(flexframesync _q,
                          liquid_float_complex * _x,
                          unsigned int _n);


int flexframesync_reset_framedatastats(flexframesync _q);
framedatastats_s flexframesync_get_framedatastats (flexframesync _q);


int flexframesync_debug_enable(flexframesync _q);
int flexframesync_debug_disable(flexframesync _q);
int flexframesync_debug_print(flexframesync _q,
                               const char * _filename);
# 5245 "/usr/local/include/liquid/liquid.h" 3
typedef struct bpacketgen_s * bpacketgen;







bpacketgen bpacketgen_create(unsigned int _m,
                             unsigned int _dec_msg_len,
                             int _crc,
                             int _fec0,
                             int _fec1);
# 5266 "/usr/local/include/liquid/liquid.h" 3
bpacketgen bpacketgen_recreate(bpacketgen _q,
                               unsigned int _m,
                               unsigned int _dec_msg_len,
                               int _crc,
                               int _fec0,
                               int _fec1);


void bpacketgen_destroy(bpacketgen _q);


void bpacketgen_print(bpacketgen _q);


unsigned int bpacketgen_get_packet_len(bpacketgen _q);


void bpacketgen_encode(bpacketgen _q,
                       unsigned char * _msg_dec,
                       unsigned char * _packet);




typedef struct bpacketsync_s * bpacketsync;
typedef int (*bpacketsync_callback)(unsigned char * _payload,
                                    int _payload_valid,
                                    unsigned int _payload_len,
                                    framesyncstats_s _stats,
                                    void * _userdata);
bpacketsync bpacketsync_create(unsigned int _m,
                               bpacketsync_callback _callback,
                               void * _userdata);
int bpacketsync_destroy(bpacketsync _q);
int bpacketsync_print(bpacketsync _q);
int bpacketsync_reset(bpacketsync _q);





int bpacketsync_execute(bpacketsync _q,
                        unsigned char * _bytes,
                        unsigned int _n);




int bpacketsync_execute_byte(bpacketsync _q,
                             unsigned char _byte);





int bpacketsync_execute_sym(bpacketsync _q,
                            unsigned char _sym,
                            unsigned int _bps);


int bpacketsync_execute_bit(bpacketsync _q,
                            unsigned char _bit);





typedef struct fskframegen_s * fskframegen;


fskframegen fskframegen_create();
int fskframegen_destroy (fskframegen _fg);
int fskframegen_print (fskframegen _fg);
int fskframegen_reset (fskframegen _fg);
int fskframegen_assemble(fskframegen _fg,
                         unsigned char * _header,
                         unsigned char * _payload,
                         unsigned int _payload_len,
                         crc_scheme _check,
                         fec_scheme _fec0,
                         fec_scheme _fec1);
unsigned int fskframegen_getframelen(fskframegen _q);
int fskframegen_write_samples(fskframegen _fg,
                              liquid_float_complex * _buf,
                              unsigned int _buf_len);






typedef struct fskframesync_s * fskframesync;




fskframesync fskframesync_create(framesync_callback _callback,
                                 void * _userdata);
int fskframesync_destroy(fskframesync _q);
int fskframesync_print (fskframesync _q);
int fskframesync_reset (fskframesync _q);
int fskframesync_execute(fskframesync _q,
                         liquid_float_complex _x);
int fskframesync_execute_block(fskframesync _q,
                               liquid_float_complex * _x,
                               unsigned int _n);


int fskframesync_debug_enable (fskframesync _q);
int fskframesync_debug_disable(fskframesync _q);
int fskframesync_debug_export (fskframesync _q, const char * _filename);






typedef struct gmskframegen_s * gmskframegen;





gmskframegen gmskframegen_create(unsigned int _k,
                                 unsigned int _m,
                                 float _BT);
int gmskframegen_destroy (gmskframegen _q);
int gmskframegen_is_assembled (gmskframegen _q);
int gmskframegen_print (gmskframegen _q);
int gmskframegen_set_header_len(gmskframegen _q, unsigned int _len);
int gmskframegen_reset (gmskframegen _q);
int gmskframegen_assemble (gmskframegen _q,
                                const unsigned char * _header,
                                const unsigned char * _payload,
                                unsigned int _payload_len,
                                crc_scheme _check,
                                fec_scheme _fec0,
                                fec_scheme _fec1);

int gmskframegen_assemble_default(gmskframegen _q,
                                  unsigned int _payload_len);
unsigned int gmskframegen_getframelen(gmskframegen _q);





int gmskframegen_write(gmskframegen _q,
                      liquid_float_complex * _buf,
                      unsigned int _buf_len);






typedef struct gmskframesync_s * gmskframesync;







gmskframesync gmskframesync_create(unsigned int _k,
                                   unsigned int _m,
                                   float _BT,
                                   framesync_callback _callback,
                                   void * _userdata);
int gmskframesync_destroy(gmskframesync _q);
int gmskframesync_print(gmskframesync _q);
int gmskframesync_set_header_len(gmskframesync _q, unsigned int _len);
int gmskframesync_reset(gmskframesync _q);
int gmskframesync_is_frame_open(gmskframesync _q);
int gmskframesync_execute(gmskframesync _q,
                          liquid_float_complex * _x,
                          unsigned int _n);

int gmskframesync_reset_framedatastats(gmskframesync _q);
framedatastats_s gmskframesync_get_framedatastats (gmskframesync _q);






typedef struct {
    unsigned int check;
    unsigned int fec0;
    unsigned int fec1;
} dsssframegenprops_s;

typedef struct dsssframegen_s * dsssframegen;

dsssframegen dsssframegen_create(dsssframegenprops_s * _props);
int dsssframegen_destroy(dsssframegen _q);
int dsssframegen_reset(dsssframegen _q);
int dsssframegen_is_assembled(dsssframegen _q);
int dsssframegen_getprops(dsssframegen _q, dsssframegenprops_s * _props);
int dsssframegen_setprops(dsssframegen _q, dsssframegenprops_s * _props);
int dsssframegen_set_header_len(dsssframegen _q, unsigned int _len);
int dsssframegen_set_header_props(dsssframegen _q,
                                  dsssframegenprops_s * _props);
unsigned int dsssframegen_getframelen(dsssframegen _q);






int dsssframegen_assemble(dsssframegen _q,
                          const unsigned char * _header,
                          const unsigned char * _payload,
                          unsigned int _payload_len);

int dsssframegen_write_samples(dsssframegen _q,
                               liquid_float_complex * _buffer,
                               unsigned int _buffer_len);






typedef struct dsssframesync_s * dsssframesync;

dsssframesync dsssframesync_create(framesync_callback _callback, void * _userdata);
int dsssframesync_destroy (dsssframesync _q);
int dsssframesync_print (dsssframesync _q);
int dsssframesync_reset (dsssframesync _q);
int dsssframesync_is_frame_open (dsssframesync _q);
int dsssframesync_set_header_len (dsssframesync _q, unsigned int _len);
int dsssframesync_decode_header_soft (dsssframesync _q, int _soft);
int dsssframesync_decode_payload_soft (dsssframesync _q, int _soft);
int dsssframesync_set_header_props (dsssframesync _q, dsssframegenprops_s * _props);
int dsssframesync_execute (dsssframesync _q, liquid_float_complex * _x, unsigned int _n);
int dsssframesync_reset_framedatastats(dsssframesync _q);
int dsssframesync_debug_enable (dsssframesync _q);
int dsssframesync_debug_disable (dsssframesync _q);
int dsssframesync_debug_print (dsssframesync _q, const char * _filename);
framedatastats_s dsssframesync_get_framedatastats (dsssframesync _q);






typedef struct {
    unsigned int check;
    unsigned int fec0;
    unsigned int fec1;
    unsigned int mod_scheme;

} ofdmflexframegenprops_s;
int ofdmflexframegenprops_init_default(ofdmflexframegenprops_s * _props);

typedef struct ofdmflexframegen_s * ofdmflexframegen;







ofdmflexframegen ofdmflexframegen_create(unsigned int _M,
                                         unsigned int _cp_len,
                                         unsigned int _taper_len,
                                         unsigned char * _p,
                                         ofdmflexframegenprops_s * _fgprops);


int ofdmflexframegen_destroy(ofdmflexframegen _q);


int ofdmflexframegen_print(ofdmflexframegen _q);


int ofdmflexframegen_reset(ofdmflexframegen _q);


int ofdmflexframegen_is_assembled(ofdmflexframegen _q);


int ofdmflexframegen_getprops(ofdmflexframegen _q,
                              ofdmflexframegenprops_s * _props);


int ofdmflexframegen_setprops(ofdmflexframegen _q,
                              ofdmflexframegenprops_s * _props);


int ofdmflexframegen_set_header_len(ofdmflexframegen _q,
                                    unsigned int _len);

int ofdmflexframegen_set_header_props(ofdmflexframegen _q,
                                      ofdmflexframegenprops_s * _props);



unsigned int ofdmflexframegen_getframelen(ofdmflexframegen _q);






int ofdmflexframegen_assemble(ofdmflexframegen _q,
                              const unsigned char * _header,
                              const unsigned char * _payload,
                              unsigned int _payload_len);





int ofdmflexframegen_write(ofdmflexframegen _q,
                           liquid_float_complex * _buf,
                           unsigned int _buf_len);





typedef struct ofdmflexframesync_s * ofdmflexframesync;
# 5598 "/usr/local/include/liquid/liquid.h" 3
ofdmflexframesync ofdmflexframesync_create(unsigned int _M,
                                           unsigned int _cp_len,
                                           unsigned int _taper_len,
                                           unsigned char * _p,
                                           framesync_callback _callback,
                                           void * _userdata);

int ofdmflexframesync_destroy(ofdmflexframesync _q);
int ofdmflexframesync_print(ofdmflexframesync _q);

int ofdmflexframesync_set_header_len(ofdmflexframesync _q,
                                     unsigned int _len);

int ofdmflexframesync_decode_header_soft(ofdmflexframesync _q,
                                         int _soft);

int ofdmflexframesync_decode_payload_soft(ofdmflexframesync _q,
                                          int _soft);

int ofdmflexframesync_set_header_props(ofdmflexframesync _q,
                                       ofdmflexframegenprops_s * _props);

int ofdmflexframesync_reset(ofdmflexframesync _q);
int ofdmflexframesync_is_frame_open(ofdmflexframesync _q);
int ofdmflexframesync_execute(ofdmflexframesync _q,
                              liquid_float_complex * _x,
                              unsigned int _n);


float ofdmflexframesync_get_rssi(ofdmflexframesync _q);


float ofdmflexframesync_get_cfo(ofdmflexframesync _q);


int ofdmflexframesync_reset_framedatastats(ofdmflexframesync _q);
framedatastats_s ofdmflexframesync_get_framedatastats (ofdmflexframesync _q);


int ofdmflexframesync_set_cfo(ofdmflexframesync _q, float _cfo);


int ofdmflexframesync_debug_enable(ofdmflexframesync _q);
int ofdmflexframesync_debug_disable(ofdmflexframesync _q);
int ofdmflexframesync_debug_print(ofdmflexframesync _q,
                                  const char * _filename);
# 5692 "/usr/local/include/liquid/liquid.h" 3
typedef struct bsync_rrrf_s * bsync_rrrf; bsync_rrrf bsync_rrrf_create(unsigned int _n, float * _v); bsync_rrrf bsync_rrrf_create_msequence(unsigned int _g, unsigned int _k); void bsync_rrrf_destroy(bsync_rrrf _q); void bsync_rrrf_print(bsync_rrrf _q); void bsync_rrrf_correlate(bsync_rrrf _q, float _x, float * _y);




typedef struct bsync_crcf_s * bsync_crcf; bsync_crcf bsync_crcf_create(unsigned int _n, float * _v); bsync_crcf bsync_crcf_create_msequence(unsigned int _g, unsigned int _k); void bsync_crcf_destroy(bsync_crcf _q); void bsync_crcf_print(bsync_crcf _q); void bsync_crcf_correlate(bsync_crcf _q, liquid_float_complex _x, liquid_float_complex * _y);




typedef struct bsync_cccf_s * bsync_cccf; bsync_cccf bsync_cccf_create(unsigned int _n, liquid_float_complex * _v); bsync_cccf bsync_cccf_create_msequence(unsigned int _g, unsigned int _k); void bsync_cccf_destroy(bsync_cccf _q); void bsync_cccf_print(bsync_cccf _q); void bsync_cccf_correlate(bsync_cccf _q, liquid_float_complex _x, liquid_float_complex * _y);
# 5758 "/usr/local/include/liquid/liquid.h" 3
typedef struct presync_cccf_s * presync_cccf; presync_cccf presync_cccf_create(liquid_float_complex * _v, unsigned int _n, float _dphi_max, unsigned int _m); int presync_cccf_destroy(presync_cccf _q); int presync_cccf_print(presync_cccf _q); int presync_cccf_reset(presync_cccf _q); int presync_cccf_push(presync_cccf _q, liquid_float_complex _x); int presync_cccf_execute(presync_cccf _q, liquid_float_complex * _rxy, float * _dphi_hat);





typedef struct bpresync_cccf_s * bpresync_cccf; bpresync_cccf bpresync_cccf_create(liquid_float_complex * _v, unsigned int _n, float _dphi_max, unsigned int _m); int bpresync_cccf_destroy(bpresync_cccf _q); int bpresync_cccf_print(bpresync_cccf _q); int bpresync_cccf_reset(bpresync_cccf _q); int bpresync_cccf_push(bpresync_cccf _q, liquid_float_complex _x); int bpresync_cccf_execute(bpresync_cccf _q, liquid_float_complex * _rxy, float * _dphi_hat);
# 5773 "/usr/local/include/liquid/liquid.h" 3
typedef struct qdetector_cccf_s * qdetector_cccf;




qdetector_cccf qdetector_cccf_create(liquid_float_complex * _s,
                                     unsigned int _s_len);
# 5788 "/usr/local/include/liquid/liquid.h" 3
qdetector_cccf qdetector_cccf_create_linear(liquid_float_complex * _sequence,
                                            unsigned int _sequence_len,
                                            int _ftype,
                                            unsigned int _k,
                                            unsigned int _m,
                                            float _beta);







qdetector_cccf qdetector_cccf_create_gmsk(unsigned char * _sequence,
                                          unsigned int _sequence_len,
                                          unsigned int _k,
                                          unsigned int _m,
                                          float _beta);
# 5816 "/usr/local/include/liquid/liquid.h" 3
qdetector_cccf qdetector_cccf_create_cpfsk(unsigned char * _sequence,
                                           unsigned int _sequence_len,
                                           unsigned int _bps,
                                           float _h,
                                           unsigned int _k,
                                           unsigned int _m,
                                           float _beta,
                                           int _type);

int qdetector_cccf_destroy(qdetector_cccf _q);
int qdetector_cccf_print (qdetector_cccf _q);
int qdetector_cccf_reset (qdetector_cccf _q);


void * qdetector_cccf_execute(qdetector_cccf _q,
                              liquid_float_complex _x);


float qdetector_cccf_get_threshold(qdetector_cccf _q);


int qdetector_cccf_set_threshold(qdetector_cccf _q,
                                 float _threshold);


int qdetector_cccf_set_range(qdetector_cccf _q,
                             float _dphi_max);


unsigned int qdetector_cccf_get_seq_len (qdetector_cccf _q);
const void * qdetector_cccf_get_sequence(qdetector_cccf _q);
unsigned int qdetector_cccf_get_buf_len (qdetector_cccf _q);
float qdetector_cccf_get_rxy (qdetector_cccf _q);
float qdetector_cccf_get_tau (qdetector_cccf _q);
float qdetector_cccf_get_gamma (qdetector_cccf _q);
float qdetector_cccf_get_dphi (qdetector_cccf _q);
float qdetector_cccf_get_phi (qdetector_cccf _q);





typedef struct detector_cccf_s * detector_cccf;






detector_cccf detector_cccf_create(liquid_float_complex * _s,
                                   unsigned int _n,
                                   float _threshold,
                                   float _dphi_max);


void detector_cccf_destroy(detector_cccf _q);


void detector_cccf_print(detector_cccf _q);


void detector_cccf_reset(detector_cccf _q);
# 5886 "/usr/local/include/liquid/liquid.h" 3
int detector_cccf_correlate(detector_cccf _q,
                            liquid_float_complex _x,
                            float * _tau_hat,
                            float * _dphi_hat,
                            float * _gamma_hat);
# 5968 "/usr/local/include/liquid/liquid.h" 3
typedef struct symstreamcf_s * symstreamcf; symstreamcf symstreamcf_create(void); symstreamcf symstreamcf_create_linear(int _ftype, unsigned int _k, unsigned int _m, float _beta, int _ms); int symstreamcf_destroy(symstreamcf _q); int symstreamcf_print(symstreamcf _q); int symstreamcf_reset(symstreamcf _q); int symstreamcf_set_scheme(symstreamcf _q, int _ms); int symstreamcf_get_ftype(symstreamcf _q); float symstreamcf_get_k(symstreamcf _q); unsigned int symstreamcf_get_m(symstreamcf _q); float symstreamcf_get_beta(symstreamcf _q); int symstreamcf_get_scheme(symstreamcf _q); int symstreamcf_set_gain(symstreamcf _q, float _gain); float symstreamcf_get_gain(symstreamcf _q); unsigned int symstreamcf_get_delay(symstreamcf _q); int symstreamcf_write_samples(symstreamcf _q, liquid_float_complex * _buf, unsigned int _buf_len);
# 6045 "/usr/local/include/liquid/liquid.h" 3
typedef struct symstreamrcf_s * symstreamrcf; symstreamrcf symstreamrcf_create(void); symstreamrcf symstreamrcf_create_linear(int _ftype, float _bw, unsigned int _m, float _beta, int _ms); int symstreamrcf_destroy(symstreamrcf _q); int symstreamrcf_print(symstreamrcf _q); int symstreamrcf_reset(symstreamrcf _q); int symstreamrcf_get_ftype(symstreamrcf _q); float symstreamrcf_get_bw(symstreamrcf _q); unsigned int symstreamrcf_get_m(symstreamrcf _q); float symstreamrcf_get_beta(symstreamrcf _q); int symstreamrcf_set_scheme(symstreamrcf _q, int _ms); int symstreamrcf_get_scheme(symstreamrcf _q); int symstreamrcf_set_gain(symstreamrcf _q, float _gain); float symstreamrcf_get_gain(symstreamrcf _q); float symstreamrcf_get_delay(symstreamrcf _q); int symstreamrcf_write_samples(symstreamrcf _q, liquid_float_complex * _buf, unsigned int _buf_len);
# 6218 "/usr/local/include/liquid/liquid.h" 3
typedef struct msourcecf_s * msourcecf; msourcecf msourcecf_create(unsigned int _M, unsigned int _m, float _As); msourcecf msourcecf_create_default(void); int msourcecf_destroy(msourcecf _q); int msourcecf_print(msourcecf _q); int msourcecf_reset(msourcecf _q); typedef int (*msourcecf_callback)(void * _userdata, liquid_float_complex * _v, unsigned int _n); int msourcecf_add_user(msourcecf _q, float _fc, float _bw, float _gain, void * _userdata, msourcecf_callback _callback); int msourcecf_add_tone(msourcecf _q, float _fc, float _bw, float _gain); int msourcecf_add_chirp(msourcecf _q, float _fc, float _bw, float _gain, float _duration, int _negate, int _repeat); int msourcecf_add_noise(msourcecf _q, float _fc, float _bw, float _gain); int msourcecf_add_modem(msourcecf _q, float _fc, float _bw, float _gain, int _ms, unsigned int _m, float _beta); int msourcecf_add_fsk(msourcecf _q, float _fc, float _bw, float _gain, unsigned int _m, unsigned int _k); int msourcecf_add_gmsk(msourcecf _q, float _fc, float _bw, float _gain, unsigned int _m, float _bt); int msourcecf_remove(msourcecf _q, int _id); int msourcecf_enable(msourcecf _q, int _id); int msourcecf_disable(msourcecf _q, int _id); int msourcecf_set_gain(msourcecf _q, int _id, float _gain); int msourcecf_get_gain(msourcecf _q, int _id, float * _gain); unsigned long long int msourcecf_get_num_samples(msourcecf _q); int msourcecf_set_frequency(msourcecf _q, int _id, float _dphi); int msourcecf_get_frequency(msourcecf _q, int _id, float * _dphi); int msourcecf_write_samples(msourcecf _q, liquid_float_complex * _buf, unsigned int _buf_len);
# 6343 "/usr/local/include/liquid/liquid.h" 3
typedef struct symtrack_rrrf_s * symtrack_rrrf; symtrack_rrrf symtrack_rrrf_create(int _ftype, unsigned int _k, unsigned int _m, float _beta, int _ms); symtrack_rrrf symtrack_rrrf_create_default(); int symtrack_rrrf_destroy(symtrack_rrrf _q); int symtrack_rrrf_print(symtrack_rrrf _q); int symtrack_rrrf_reset(symtrack_rrrf _q); int symtrack_rrrf_get_ftype(symtrack_rrrf _q); unsigned int symtrack_rrrf_get_k(symtrack_rrrf _q); unsigned int symtrack_rrrf_get_m(symtrack_rrrf _q); float symtrack_rrrf_get_beta(symtrack_rrrf _q); int symtrack_rrrf_get_modscheme(symtrack_rrrf _q); int symtrack_rrrf_set_modscheme(symtrack_rrrf _q, int _ms); float symtrack_rrrf_get_bandwidth(symtrack_rrrf _q); int symtrack_rrrf_set_bandwidth(symtrack_rrrf _q, float _bw); int symtrack_rrrf_adjust_frequency(symtrack_rrrf _q, float _dphi); int symtrack_rrrf_adjust_phase(symtrack_rrrf _q, float _phi); int symtrack_rrrf_set_eq_cm(symtrack_rrrf _q); int symtrack_rrrf_set_eq_dd(symtrack_rrrf _q); int symtrack_rrrf_set_eq_off(symtrack_rrrf _q); int symtrack_rrrf_execute(symtrack_rrrf _q, float _x, float * _y, unsigned int * _ny); int symtrack_rrrf_execute_block(symtrack_rrrf _q, float * _x, unsigned int _nx, float * _y, unsigned int * _ny);





typedef struct symtrack_cccf_s * symtrack_cccf; symtrack_cccf symtrack_cccf_create(int _ftype, unsigned int _k, unsigned int _m, float _beta, int _ms); symtrack_cccf symtrack_cccf_create_default(); int symtrack_cccf_destroy(symtrack_cccf _q); int symtrack_cccf_print(symtrack_cccf _q); int symtrack_cccf_reset(symtrack_cccf _q); int symtrack_cccf_get_ftype(symtrack_cccf _q); unsigned int symtrack_cccf_get_k(symtrack_cccf _q); unsigned int symtrack_cccf_get_m(symtrack_cccf _q); float symtrack_cccf_get_beta(symtrack_cccf _q); int symtrack_cccf_get_modscheme(symtrack_cccf _q); int symtrack_cccf_set_modscheme(symtrack_cccf _q, int _ms); float symtrack_cccf_get_bandwidth(symtrack_cccf _q); int symtrack_cccf_set_bandwidth(symtrack_cccf _q, float _bw); int symtrack_cccf_adjust_frequency(symtrack_cccf _q, float _dphi); int symtrack_cccf_adjust_phase(symtrack_cccf _q, float _phi); int symtrack_cccf_set_eq_cm(symtrack_cccf _q); int symtrack_cccf_set_eq_dd(symtrack_cccf _q); int symtrack_cccf_set_eq_off(symtrack_cccf _q); int symtrack_cccf_execute(symtrack_cccf _q, liquid_float_complex _x, liquid_float_complex * _y, unsigned int * _ny); int symtrack_cccf_execute_block(symtrack_cccf _q, liquid_float_complex * _x, unsigned int _nx, liquid_float_complex * _y, unsigned int * _ny);
# 6362 "/usr/local/include/liquid/liquid.h" 3
float liquid_lngammaf(float _z);


float liquid_gammaf(float _z);


float liquid_lnlowergammaf(float _z, float _alpha);


float liquid_lnuppergammaf(float _z, float _alpha);


float liquid_lowergammaf(float _z, float _alpha);


float liquid_uppergammaf(float _z, float _alpha);


float liquid_factorialf(unsigned int _n);




float liquid_lnbesselif(float _nu, float _z);


float liquid_besselif(float _nu, float _z);


float liquid_besseli0f(float _z);


float liquid_besseljf(float _nu, float _z);


float liquid_besselj0f(float _z);



float liquid_Qf(float _z);


float liquid_MarcumQf(int _M,
                      float _alpha,
                      float _beta);


float liquid_MarcumQ1f(float _alpha,
                       float _beta);


float sincf(float _x);


unsigned int liquid_nextpow2(unsigned int _x);


float liquid_nchoosek(unsigned int _n, unsigned int _k);
# 6429 "/usr/local/include/liquid/liquid.h" 3
typedef enum {
    LIQUID_WINDOW_UNKNOWN=0,

    LIQUID_WINDOW_HAMMING,
    LIQUID_WINDOW_HANN,
    LIQUID_WINDOW_BLACKMANHARRIS,
    LIQUID_WINDOW_BLACKMANHARRIS7,
    LIQUID_WINDOW_KAISER,
    LIQUID_WINDOW_FLATTOP,
    LIQUID_WINDOW_TRIANGULAR,
    LIQUID_WINDOW_RCOSTAPER,
    LIQUID_WINDOW_KBD,
} liquid_window_type;


extern const char * liquid_window_str[(10)][2];


void liquid_print_windows();


liquid_window_type liquid_getopt_str2window(const char * _str);






float liquid_windowf(liquid_window_type _type,
                     unsigned int _i,
                     unsigned int _wlen,
                     float _arg);





float liquid_kaiser(unsigned int _i,
                    unsigned int _wlen,
                    float _beta);




float liquid_hamming(unsigned int _i,
                     unsigned int _wlen);




float liquid_hann(unsigned int _i,
                  unsigned int _wlen);




float liquid_blackmanharris(unsigned int _i,
                            unsigned int _wlen);




float liquid_blackmanharris7(unsigned int _i,
                             unsigned int _wlen);




float liquid_flattop(unsigned int _i,
                     unsigned int _wlen);





float liquid_triangular(unsigned int _i,
                        unsigned int _wlen,
                        unsigned int _L);





float liquid_rcostaper_window(unsigned int _i,
                              unsigned int _wlen,
                              unsigned int _t);





float liquid_kbd(unsigned int _i,
                 unsigned int _wlen,
                 float _beta);





int liquid_kbd_window(unsigned int _wlen,
                      float _beta,
                      float * _w);
# 6701 "/usr/local/include/liquid/liquid.h" 3
double poly_val(double * _p, unsigned int _k, double _x); int poly_fit(double * _x, double * _y, unsigned int _n, double * _p, unsigned int _k); int poly_fit_lagrange(double * _x, double * _y, unsigned int _n, double * _p); double poly_interp_lagrange(double * _x, double * _y, unsigned int _n, double _x0); int poly_fit_lagrange_barycentric(double * _x, unsigned int _n, double * _w); double poly_val_lagrange_barycentric(double * _x, double * _y, double * _w, double _x0, unsigned int _n); int poly_expandbinomial(unsigned int _n, double * _p); int poly_expandbinomial_pm(unsigned int _m, unsigned int _k, double * _p); int poly_expandroots(double * _r, unsigned int _n, double * _p); int poly_expandroots2(double * _a, double * _b, unsigned int _n, double * _p); int poly_findroots(double * _poly, unsigned int _n, liquid_double_complex * _roots); int poly_findroots_durandkerner(double * _p, unsigned int _k, liquid_double_complex * _roots); int poly_findroots_bairstow(double * _p, unsigned int _k, liquid_double_complex * _roots); int poly_mul(double * _a, unsigned int _order_a, double * _b, unsigned int _order_b, double * _c);



float polyf_val(float * _p, unsigned int _k, float _x); int polyf_fit(float * _x, float * _y, unsigned int _n, float * _p, unsigned int _k); int polyf_fit_lagrange(float * _x, float * _y, unsigned int _n, float * _p); float polyf_interp_lagrange(float * _x, float * _y, unsigned int _n, float _x0); int polyf_fit_lagrange_barycentric(float * _x, unsigned int _n, float * _w); float polyf_val_lagrange_barycentric(float * _x, float * _y, float * _w, float _x0, unsigned int _n); int polyf_expandbinomial(unsigned int _n, float * _p); int polyf_expandbinomial_pm(unsigned int _m, unsigned int _k, float * _p); int polyf_expandroots(float * _r, unsigned int _n, float * _p); int polyf_expandroots2(float * _a, float * _b, unsigned int _n, float * _p); int polyf_findroots(float * _poly, unsigned int _n, liquid_float_complex * _roots); int polyf_findroots_durandkerner(float * _p, unsigned int _k, liquid_float_complex * _roots); int polyf_findroots_bairstow(float * _p, unsigned int _k, liquid_float_complex * _roots); int polyf_mul(float * _a, unsigned int _order_a, float * _b, unsigned int _order_b, float * _c);



liquid_double_complex polyc_val(liquid_double_complex * _p, unsigned int _k, liquid_double_complex _x); int polyc_fit(liquid_double_complex * _x, liquid_double_complex * _y, unsigned int _n, liquid_double_complex * _p, unsigned int _k); int polyc_fit_lagrange(liquid_double_complex * _x, liquid_double_complex * _y, unsigned int _n, liquid_double_complex * _p); liquid_double_complex polyc_interp_lagrange(liquid_double_complex * _x, liquid_double_complex * _y, unsigned int _n, liquid_double_complex _x0); int polyc_fit_lagrange_barycentric(liquid_double_complex * _x, unsigned int _n, liquid_double_complex * _w); liquid_double_complex polyc_val_lagrange_barycentric(liquid_double_complex * _x, liquid_double_complex * _y, liquid_double_complex * _w, liquid_double_complex _x0, unsigned int _n); int polyc_expandbinomial(unsigned int _n, liquid_double_complex * _p); int polyc_expandbinomial_pm(unsigned int _m, unsigned int _k, liquid_double_complex * _p); int polyc_expandroots(liquid_double_complex * _r, unsigned int _n, liquid_double_complex * _p); int polyc_expandroots2(liquid_double_complex * _a, liquid_double_complex * _b, unsigned int _n, liquid_double_complex * _p); int polyc_findroots(liquid_double_complex * _poly, unsigned int _n, liquid_double_complex * _roots); int polyc_findroots_durandkerner(liquid_double_complex * _p, unsigned int _k, liquid_double_complex * _roots); int polyc_findroots_bairstow(liquid_double_complex * _p, unsigned int _k, liquid_double_complex * _roots); int polyc_mul(liquid_double_complex * _a, unsigned int _order_a, liquid_double_complex * _b, unsigned int _order_b, liquid_double_complex * _c);



liquid_float_complex polycf_val(liquid_float_complex * _p, unsigned int _k, liquid_float_complex _x); int polycf_fit(liquid_float_complex * _x, liquid_float_complex * _y, unsigned int _n, liquid_float_complex * _p, unsigned int _k); int polycf_fit_lagrange(liquid_float_complex * _x, liquid_float_complex * _y, unsigned int _n, liquid_float_complex * _p); liquid_float_complex polycf_interp_lagrange(liquid_float_complex * _x, liquid_float_complex * _y, unsigned int _n, liquid_float_complex _x0); int polycf_fit_lagrange_barycentric(liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _w); liquid_float_complex polycf_val_lagrange_barycentric(liquid_float_complex * _x, liquid_float_complex * _y, liquid_float_complex * _w, liquid_float_complex _x0, unsigned int _n); int polycf_expandbinomial(unsigned int _n, liquid_float_complex * _p); int polycf_expandbinomial_pm(unsigned int _m, unsigned int _k, liquid_float_complex * _p); int polycf_expandroots(liquid_float_complex * _r, unsigned int _n, liquid_float_complex * _p); int polycf_expandroots2(liquid_float_complex * _a, liquid_float_complex * _b, unsigned int _n, liquid_float_complex * _p); int polycf_findroots(liquid_float_complex * _poly, unsigned int _n, liquid_float_complex * _roots); int polycf_findroots_durandkerner(liquid_float_complex * _p, unsigned int _k, liquid_float_complex * _roots); int polycf_findroots_bairstow(liquid_float_complex * _p, unsigned int _k, liquid_float_complex * _roots); int polycf_mul(liquid_float_complex * _a, unsigned int _order_a, liquid_float_complex * _b, unsigned int _order_b, liquid_float_complex * _c);
# 6735 "/usr/local/include/liquid/liquid.h" 3
int liquid_is_prime(unsigned int _n);





int liquid_factor(unsigned int _n,
                  unsigned int * _factors,
                  unsigned int * _num_factors);





int liquid_unique_factor(unsigned int _n,
                         unsigned int * _factors,
                         unsigned int * _num_factors);


unsigned int liquid_gcd(unsigned int _P,
                        unsigned int _Q);


unsigned int liquid_modpow(unsigned int _base,
                           unsigned int _exp,
                           unsigned int _n);


unsigned int liquid_primitive_root(unsigned int _n);


unsigned int liquid_primitive_root_prime(unsigned int _n);


unsigned int liquid_totient(unsigned int _n);
# 7122 "/usr/local/include/liquid/liquid.h" 3
int matrixf_print(float * _x, unsigned int _r, unsigned int _c); int matrixf_add(float * _x, float * _y, float * _z, unsigned int _r, unsigned int _c); int matrixf_sub(float * _x, float * _y, float * _z, unsigned int _r, unsigned int _c); int matrixf_pmul(float * _x, float * _y, float * _z, unsigned int _r, unsigned int _c); int matrixf_pdiv(float * _x, float * _y, float * _z, unsigned int _r, unsigned int _c); int matrixf_mul(float * _x, unsigned int _rx, unsigned int _cx, float * _y, unsigned int _ry, unsigned int _cy, float * _z, unsigned int _rz, unsigned int _cz); int matrixf_div(float * _x, float * _y, float * _z, unsigned int _n); float matrixf_det(float * _x, unsigned int _r, unsigned int _c); int matrixf_trans(float * _x, unsigned int _r, unsigned int _c); int matrixf_hermitian(float * _x, unsigned int _r, unsigned int _c); int matrixf_mul_transpose(float * _x, unsigned int _m, unsigned int _n, float * _xxT); int matrixf_transpose_mul(float * _x, unsigned int _m, unsigned int _n, float * _xTx); int matrixf_mul_hermitian(float * _x, unsigned int _m, unsigned int _n, float * _xxH); int matrixf_hermitian_mul(float * _x, unsigned int _m, unsigned int _n, float * _xHx); int matrixf_aug(float * _x, unsigned int _rx, unsigned int _cx, float * _y, unsigned int _ry, unsigned int _cy, float * _z, unsigned int _rz, unsigned int _cz); int matrixf_inv(float * _x, unsigned int _r, unsigned int _c); int matrixf_eye(float * _x, unsigned int _n); int matrixf_ones(float * _x, unsigned int _r, unsigned int _c); int matrixf_zeros(float * _x, unsigned int _r, unsigned int _c); int matrixf_gjelim(float * _x, unsigned int _r, unsigned int _c); int matrixf_pivot(float * _x, unsigned int _r, unsigned int _c, unsigned int _i, unsigned int _j); int matrixf_swaprows(float * _x, unsigned int _r, unsigned int _c, unsigned int _r1, unsigned int _r2); int matrixf_linsolve(float * _A, unsigned int _n, float * _b, float * _x, void * _opts); int matrixf_cgsolve(float * _A, unsigned int _n, float * _b, float * _x, void * _opts); int matrixf_ludecomp_crout(float * _x, unsigned int _rx, unsigned int _cx, float * _L, float * _U, float * _P); int matrixf_ludecomp_doolittle(float * _x, unsigned int _rx, unsigned int _cx, float * _L, float * _U, float * _P); int matrixf_gramschmidt(float * _A, unsigned int _r, unsigned int _c, float * _v); int matrixf_qrdecomp_gramschmidt(float * _A, unsigned int _m, unsigned int _n, float * _Q, float * _R); int matrixf_chol(float * _A, unsigned int _n, float * _L);
int matrix_print(double * _x, unsigned int _r, unsigned int _c); int matrix_add(double * _x, double * _y, double * _z, unsigned int _r, unsigned int _c); int matrix_sub(double * _x, double * _y, double * _z, unsigned int _r, unsigned int _c); int matrix_pmul(double * _x, double * _y, double * _z, unsigned int _r, unsigned int _c); int matrix_pdiv(double * _x, double * _y, double * _z, unsigned int _r, unsigned int _c); int matrix_mul(double * _x, unsigned int _rx, unsigned int _cx, double * _y, unsigned int _ry, unsigned int _cy, double * _z, unsigned int _rz, unsigned int _cz); int matrix_div(double * _x, double * _y, double * _z, unsigned int _n); double matrix_det(double * _x, unsigned int _r, unsigned int _c); int matrix_trans(double * _x, unsigned int _r, unsigned int _c); int matrix_hermitian(double * _x, unsigned int _r, unsigned int _c); int matrix_mul_transpose(double * _x, unsigned int _m, unsigned int _n, double * _xxT); int matrix_transpose_mul(double * _x, unsigned int _m, unsigned int _n, double * _xTx); int matrix_mul_hermitian(double * _x, unsigned int _m, unsigned int _n, double * _xxH); int matrix_hermitian_mul(double * _x, unsigned int _m, unsigned int _n, double * _xHx); int matrix_aug(double * _x, unsigned int _rx, unsigned int _cx, double * _y, unsigned int _ry, unsigned int _cy, double * _z, unsigned int _rz, unsigned int _cz); int matrix_inv(double * _x, unsigned int _r, unsigned int _c); int matrix_eye(double * _x, unsigned int _n); int matrix_ones(double * _x, unsigned int _r, unsigned int _c); int matrix_zeros(double * _x, unsigned int _r, unsigned int _c); int matrix_gjelim(double * _x, unsigned int _r, unsigned int _c); int matrix_pivot(double * _x, unsigned int _r, unsigned int _c, unsigned int _i, unsigned int _j); int matrix_swaprows(double * _x, unsigned int _r, unsigned int _c, unsigned int _r1, unsigned int _r2); int matrix_linsolve(double * _A, unsigned int _n, double * _b, double * _x, void * _opts); int matrix_cgsolve(double * _A, unsigned int _n, double * _b, double * _x, void * _opts); int matrix_ludecomp_crout(double * _x, unsigned int _rx, unsigned int _cx, double * _L, double * _U, double * _P); int matrix_ludecomp_doolittle(double * _x, unsigned int _rx, unsigned int _cx, double * _L, double * _U, double * _P); int matrix_gramschmidt(double * _A, unsigned int _r, unsigned int _c, double * _v); int matrix_qrdecomp_gramschmidt(double * _A, unsigned int _m, unsigned int _n, double * _Q, double * _R); int matrix_chol(double * _A, unsigned int _n, double * _L);

int matrixcf_print(liquid_float_complex * _x, unsigned int _r, unsigned int _c); int matrixcf_add(liquid_float_complex * _x, liquid_float_complex * _y, liquid_float_complex * _z, unsigned int _r, unsigned int _c); int matrixcf_sub(liquid_float_complex * _x, liquid_float_complex * _y, liquid_float_complex * _z, unsigned int _r, unsigned int _c); int matrixcf_pmul(liquid_float_complex * _x, liquid_float_complex * _y, liquid_float_complex * _z, unsigned int _r, unsigned int _c); int matrixcf_pdiv(liquid_float_complex * _x, liquid_float_complex * _y, liquid_float_complex * _z, unsigned int _r, unsigned int _c); int matrixcf_mul(liquid_float_complex * _x, unsigned int _rx, unsigned int _cx, liquid_float_complex * _y, unsigned int _ry, unsigned int _cy, liquid_float_complex * _z, unsigned int _rz, unsigned int _cz); int matrixcf_div(liquid_float_complex * _x, liquid_float_complex * _y, liquid_float_complex * _z, unsigned int _n); liquid_float_complex matrixcf_det(liquid_float_complex * _x, unsigned int _r, unsigned int _c); int matrixcf_trans(liquid_float_complex * _x, unsigned int _r, unsigned int _c); int matrixcf_hermitian(liquid_float_complex * _x, unsigned int _r, unsigned int _c); int matrixcf_mul_transpose(liquid_float_complex * _x, unsigned int _m, unsigned int _n, liquid_float_complex * _xxT); int matrixcf_transpose_mul(liquid_float_complex * _x, unsigned int _m, unsigned int _n, liquid_float_complex * _xTx); int matrixcf_mul_hermitian(liquid_float_complex * _x, unsigned int _m, unsigned int _n, liquid_float_complex * _xxH); int matrixcf_hermitian_mul(liquid_float_complex * _x, unsigned int _m, unsigned int _n, liquid_float_complex * _xHx); int matrixcf_aug(liquid_float_complex * _x, unsigned int _rx, unsigned int _cx, liquid_float_complex * _y, unsigned int _ry, unsigned int _cy, liquid_float_complex * _z, unsigned int _rz, unsigned int _cz); int matrixcf_inv(liquid_float_complex * _x, unsigned int _r, unsigned int _c); int matrixcf_eye(liquid_float_complex * _x, unsigned int _n); int matrixcf_ones(liquid_float_complex * _x, unsigned int _r, unsigned int _c); int matrixcf_zeros(liquid_float_complex * _x, unsigned int _r, unsigned int _c); int matrixcf_gjelim(liquid_float_complex * _x, unsigned int _r, unsigned int _c); int matrixcf_pivot(liquid_float_complex * _x, unsigned int _r, unsigned int _c, unsigned int _i, unsigned int _j); int matrixcf_swaprows(liquid_float_complex * _x, unsigned int _r, unsigned int _c, unsigned int _r1, unsigned int _r2); int matrixcf_linsolve(liquid_float_complex * _A, unsigned int _n, liquid_float_complex * _b, liquid_float_complex * _x, void * _opts); int matrixcf_cgsolve(liquid_float_complex * _A, unsigned int _n, liquid_float_complex * _b, liquid_float_complex * _x, void * _opts); int matrixcf_ludecomp_crout(liquid_float_complex * _x, unsigned int _rx, unsigned int _cx, liquid_float_complex * _L, liquid_float_complex * _U, liquid_float_complex * _P); int matrixcf_ludecomp_doolittle(liquid_float_complex * _x, unsigned int _rx, unsigned int _cx, liquid_float_complex * _L, liquid_float_complex * _U, liquid_float_complex * _P); int matrixcf_gramschmidt(liquid_float_complex * _A, unsigned int _r, unsigned int _c, liquid_float_complex * _v); int matrixcf_qrdecomp_gramschmidt(liquid_float_complex * _A, unsigned int _m, unsigned int _n, liquid_float_complex * _Q, liquid_float_complex * _R); int matrixcf_chol(liquid_float_complex * _A, unsigned int _n, liquid_float_complex * _L);
int matrixc_print(liquid_double_complex * _x, unsigned int _r, unsigned int _c); int matrixc_add(liquid_double_complex * _x, liquid_double_complex * _y, liquid_double_complex * _z, unsigned int _r, unsigned int _c); int matrixc_sub(liquid_double_complex * _x, liquid_double_complex * _y, liquid_double_complex * _z, unsigned int _r, unsigned int _c); int matrixc_pmul(liquid_double_complex * _x, liquid_double_complex * _y, liquid_double_complex * _z, unsigned int _r, unsigned int _c); int matrixc_pdiv(liquid_double_complex * _x, liquid_double_complex * _y, liquid_double_complex * _z, unsigned int _r, unsigned int _c); int matrixc_mul(liquid_double_complex * _x, unsigned int _rx, unsigned int _cx, liquid_double_complex * _y, unsigned int _ry, unsigned int _cy, liquid_double_complex * _z, unsigned int _rz, unsigned int _cz); int matrixc_div(liquid_double_complex * _x, liquid_double_complex * _y, liquid_double_complex * _z, unsigned int _n); liquid_double_complex matrixc_det(liquid_double_complex * _x, unsigned int _r, unsigned int _c); int matrixc_trans(liquid_double_complex * _x, unsigned int _r, unsigned int _c); int matrixc_hermitian(liquid_double_complex * _x, unsigned int _r, unsigned int _c); int matrixc_mul_transpose(liquid_double_complex * _x, unsigned int _m, unsigned int _n, liquid_double_complex * _xxT); int matrixc_transpose_mul(liquid_double_complex * _x, unsigned int _m, unsigned int _n, liquid_double_complex * _xTx); int matrixc_mul_hermitian(liquid_double_complex * _x, unsigned int _m, unsigned int _n, liquid_double_complex * _xxH); int matrixc_hermitian_mul(liquid_double_complex * _x, unsigned int _m, unsigned int _n, liquid_double_complex * _xHx); int matrixc_aug(liquid_double_complex * _x, unsigned int _rx, unsigned int _cx, liquid_double_complex * _y, unsigned int _ry, unsigned int _cy, liquid_double_complex * _z, unsigned int _rz, unsigned int _cz); int matrixc_inv(liquid_double_complex * _x, unsigned int _r, unsigned int _c); int matrixc_eye(liquid_double_complex * _x, unsigned int _n); int matrixc_ones(liquid_double_complex * _x, unsigned int _r, unsigned int _c); int matrixc_zeros(liquid_double_complex * _x, unsigned int _r, unsigned int _c); int matrixc_gjelim(liquid_double_complex * _x, unsigned int _r, unsigned int _c); int matrixc_pivot(liquid_double_complex * _x, unsigned int _r, unsigned int _c, unsigned int _i, unsigned int _j); int matrixc_swaprows(liquid_double_complex * _x, unsigned int _r, unsigned int _c, unsigned int _r1, unsigned int _r2); int matrixc_linsolve(liquid_double_complex * _A, unsigned int _n, liquid_double_complex * _b, liquid_double_complex * _x, void * _opts); int matrixc_cgsolve(liquid_double_complex * _A, unsigned int _n, liquid_double_complex * _b, liquid_double_complex * _x, void * _opts); int matrixc_ludecomp_crout(liquid_double_complex * _x, unsigned int _rx, unsigned int _cx, liquid_double_complex * _L, liquid_double_complex * _U, liquid_double_complex * _P); int matrixc_ludecomp_doolittle(liquid_double_complex * _x, unsigned int _rx, unsigned int _cx, liquid_double_complex * _L, liquid_double_complex * _U, liquid_double_complex * _P); int matrixc_gramschmidt(liquid_double_complex * _A, unsigned int _r, unsigned int _c, liquid_double_complex * _v); int matrixc_qrdecomp_gramschmidt(liquid_double_complex * _A, unsigned int _m, unsigned int _n, liquid_double_complex * _Q, liquid_double_complex * _R); int matrixc_chol(liquid_double_complex * _A, unsigned int _n, liquid_double_complex * _L);
# 7242 "/usr/local/include/liquid/liquid.h" 3
typedef struct smatrixb_s * smatrixb; smatrixb smatrixb_create(unsigned int _M, unsigned int _N); smatrixb smatrixb_create_array(unsigned char * _x, unsigned int _m, unsigned int _n); int smatrixb_destroy(smatrixb _q); int smatrixb_print(smatrixb _q); int smatrixb_print_expanded(smatrixb _q); int smatrixb_size(smatrixb _q, unsigned int * _m, unsigned int * _n); int smatrixb_clear(smatrixb _q); int smatrixb_reset(smatrixb _q); int smatrixb_isset(smatrixb _q, unsigned int _m, unsigned int _n); int smatrixb_insert(smatrixb _q, unsigned int _m, unsigned int _n, unsigned char _v); int smatrixb_delete(smatrixb _q, unsigned int _m, unsigned int _n); int smatrixb_set(smatrixb _q, unsigned int _m, unsigned int _n, unsigned char _v); unsigned char smatrixb_get(smatrixb _q, unsigned int _m, unsigned int _n); int smatrixb_eye(smatrixb _q); int smatrixb_mul(smatrixb _x, smatrixb _y, smatrixb _z); int smatrixb_vmul(smatrixb _q, unsigned char * _x, unsigned char * _y);
typedef struct smatrixf_s * smatrixf; smatrixf smatrixf_create(unsigned int _M, unsigned int _N); smatrixf smatrixf_create_array(float * _x, unsigned int _m, unsigned int _n); int smatrixf_destroy(smatrixf _q); int smatrixf_print(smatrixf _q); int smatrixf_print_expanded(smatrixf _q); int smatrixf_size(smatrixf _q, unsigned int * _m, unsigned int * _n); int smatrixf_clear(smatrixf _q); int smatrixf_reset(smatrixf _q); int smatrixf_isset(smatrixf _q, unsigned int _m, unsigned int _n); int smatrixf_insert(smatrixf _q, unsigned int _m, unsigned int _n, float _v); int smatrixf_delete(smatrixf _q, unsigned int _m, unsigned int _n); int smatrixf_set(smatrixf _q, unsigned int _m, unsigned int _n, float _v); float smatrixf_get(smatrixf _q, unsigned int _m, unsigned int _n); int smatrixf_eye(smatrixf _q); int smatrixf_mul(smatrixf _x, smatrixf _y, smatrixf _z); int smatrixf_vmul(smatrixf _q, float * _x, float * _y);
typedef struct smatrixi_s * smatrixi; smatrixi smatrixi_create(unsigned int _M, unsigned int _N); smatrixi smatrixi_create_array(short int * _x, unsigned int _m, unsigned int _n); int smatrixi_destroy(smatrixi _q); int smatrixi_print(smatrixi _q); int smatrixi_print_expanded(smatrixi _q); int smatrixi_size(smatrixi _q, unsigned int * _m, unsigned int * _n); int smatrixi_clear(smatrixi _q); int smatrixi_reset(smatrixi _q); int smatrixi_isset(smatrixi _q, unsigned int _m, unsigned int _n); int smatrixi_insert(smatrixi _q, unsigned int _m, unsigned int _n, short int _v); int smatrixi_delete(smatrixi _q, unsigned int _m, unsigned int _n); int smatrixi_set(smatrixi _q, unsigned int _m, unsigned int _n, short int _v); short int smatrixi_get(smatrixi _q, unsigned int _m, unsigned int _n); int smatrixi_eye(smatrixi _q); int smatrixi_mul(smatrixi _x, smatrixi _y, smatrixi _z); int smatrixi_vmul(smatrixi _q, short int * _x, short int * _y);
# 7254 "/usr/local/include/liquid/liquid.h" 3
int smatrixb_mulf(smatrixb _A,
                  float * _x,
                  unsigned int _mx,
                  unsigned int _nx,
                  float * _y,
                  unsigned int _my,
                  unsigned int _ny);





int smatrixb_vmulf(smatrixb _q,
                   float * _x,
                   float * _y);
# 7281 "/usr/local/include/liquid/liquid.h" 3
typedef enum {
    LIQUID_MODEM_UNKNOWN=0,


    LIQUID_MODEM_PSK2, LIQUID_MODEM_PSK4,
    LIQUID_MODEM_PSK8, LIQUID_MODEM_PSK16,
    LIQUID_MODEM_PSK32, LIQUID_MODEM_PSK64,
    LIQUID_MODEM_PSK128, LIQUID_MODEM_PSK256,


    LIQUID_MODEM_DPSK2, LIQUID_MODEM_DPSK4,
    LIQUID_MODEM_DPSK8, LIQUID_MODEM_DPSK16,
    LIQUID_MODEM_DPSK32, LIQUID_MODEM_DPSK64,
    LIQUID_MODEM_DPSK128, LIQUID_MODEM_DPSK256,


    LIQUID_MODEM_ASK2, LIQUID_MODEM_ASK4,
    LIQUID_MODEM_ASK8, LIQUID_MODEM_ASK16,
    LIQUID_MODEM_ASK32, LIQUID_MODEM_ASK64,
    LIQUID_MODEM_ASK128, LIQUID_MODEM_ASK256,


    LIQUID_MODEM_QAM4,
    LIQUID_MODEM_QAM8, LIQUID_MODEM_QAM16,
    LIQUID_MODEM_QAM32, LIQUID_MODEM_QAM64,
    LIQUID_MODEM_QAM128, LIQUID_MODEM_QAM256,


    LIQUID_MODEM_APSK4,
    LIQUID_MODEM_APSK8, LIQUID_MODEM_APSK16,
    LIQUID_MODEM_APSK32, LIQUID_MODEM_APSK64,
    LIQUID_MODEM_APSK128, LIQUID_MODEM_APSK256,


    LIQUID_MODEM_BPSK,
    LIQUID_MODEM_QPSK,
    LIQUID_MODEM_OOK,
    LIQUID_MODEM_SQAM32,
    LIQUID_MODEM_SQAM128,
    LIQUID_MODEM_V29,
    LIQUID_MODEM_ARB16OPT,
    LIQUID_MODEM_ARB32OPT,
    LIQUID_MODEM_ARB64OPT,
    LIQUID_MODEM_ARB128OPT,
    LIQUID_MODEM_ARB256OPT,
    LIQUID_MODEM_ARB64VT,
    LIQUID_MODEM_PI4DQPSK,


    LIQUID_MODEM_ARB
} modulation_scheme;


struct modulation_type_s {
    const char * name;
    const char * fullname;
    modulation_scheme scheme;
    unsigned int bps;
};


extern const struct modulation_type_s modulation_types[(53)];


int liquid_print_modulation_schemes();


modulation_scheme liquid_getopt_str2mod(const char * _str);


int liquid_modem_is_psk(modulation_scheme _ms);
int liquid_modem_is_dpsk(modulation_scheme _ms);
int liquid_modem_is_ask(modulation_scheme _ms);
int liquid_modem_is_qam(modulation_scheme _ms);
int liquid_modem_is_apsk(modulation_scheme _ms);




unsigned int count_bit_errors(unsigned int _s1, unsigned int _s2);





unsigned int count_bit_errors_array(unsigned char * _msg0,
                                    unsigned char * _msg1,
                                    unsigned int _n);



unsigned int gray_encode(unsigned int symbol_in);


unsigned int gray_decode(unsigned int symbol_in);





int liquid_pack_soft_bits(unsigned char * _soft_bits,
                          unsigned int _bps,
                          unsigned int * _sym_out);





int liquid_unpack_soft_bits(unsigned int _sym_in,
                            unsigned int _bps,
                            unsigned char * _soft_bits);
# 7403 "/usr/local/include/liquid/liquid.h" 3
typedef struct modemcf_s * modemcf;
typedef struct modemcf_s * modem;
# 7505 "/usr/local/include/liquid/liquid.h" 3
modemcf modemcf_create(modulation_scheme _scheme); modemcf modemcf_create_arbitrary(liquid_float_complex * _table, unsigned int _M); modemcf modemcf_recreate(modemcf _q, modulation_scheme _scheme); int modemcf_destroy(modemcf _q); int modemcf_print(modemcf _q); int modemcf_reset(modemcf _q); unsigned int modemcf_gen_rand_sym(modemcf _q); unsigned int modemcf_get_bps(modemcf _q); modulation_scheme modemcf_get_scheme(modemcf _q); int modemcf_modulate(modemcf _q, unsigned int _s, liquid_float_complex * _y); int modemcf_demodulate(modemcf _q, liquid_float_complex _x, unsigned int * _s); int modemcf_demodulate_soft(modemcf _q, liquid_float_complex _x, unsigned int * _s, unsigned char * _soft_bits); int modemcf_get_demodulator_sample(modemcf _q, liquid_float_complex * _x_hat); float modemcf_get_demodulator_phase_error(modemcf _q); float modemcf_get_demodulator_evm(modemcf _q);
modem modem_create(modulation_scheme _scheme); modem modem_create_arbitrary(liquid_float_complex * _table, unsigned int _M); modem modem_recreate(modem _q, modulation_scheme _scheme); int modem_destroy(modem _q); int modem_print(modem _q); int modem_reset(modem _q); unsigned int modem_gen_rand_sym(modem _q); unsigned int modem_get_bps(modem _q); modulation_scheme modem_get_scheme(modem _q); int modem_modulate(modem _q, unsigned int _s, liquid_float_complex * _y); int modem_demodulate(modem _q, liquid_float_complex _x, unsigned int * _s); int modem_demodulate_soft(modem _q, liquid_float_complex _x, unsigned int * _s, unsigned char * _soft_bits); int modem_get_demodulator_sample(modem _q, liquid_float_complex * _x_hat); float modem_get_demodulator_phase_error(modem _q); float modem_get_demodulator_evm(modem _q);






typedef struct gmskmod_s * gmskmod;





gmskmod gmskmod_create(unsigned int _k,
                       unsigned int _m,
                       float _BT);
int gmskmod_destroy(gmskmod _q);
int gmskmod_print(gmskmod _q);
int gmskmod_reset(gmskmod _q);
int gmskmod_modulate(gmskmod _q,
                     unsigned int _sym,
                     liquid_float_complex * _y);



typedef struct gmskdem_s * gmskdem;





gmskdem gmskdem_create(unsigned int _k,
                       unsigned int _m,
                       float _BT);
int gmskdem_destroy(gmskdem _q);
int gmskdem_print(gmskdem _q);
int gmskdem_reset(gmskdem _q);
int gmskdem_set_eq_bw(gmskdem _q, float _bw);
int gmskdem_demodulate(gmskdem _q,
                       liquid_float_complex * _y,
                       unsigned int * _sym);






typedef enum {
    LIQUID_CPFSK_SQUARE=0,
    LIQUID_CPFSK_RCOS_FULL,
    LIQUID_CPFSK_RCOS_PARTIAL,
    LIQUID_CPFSK_GMSK,
} liquid_cpfsk_filter;


typedef struct cpfskmod_s * cpfskmod;
# 7570 "/usr/local/include/liquid/liquid.h" 3
cpfskmod cpfskmod_create(unsigned int _bps,
                         float _h,
                         unsigned int _k,
                         unsigned int _m,
                         float _beta,
                         int _type);




int cpfskmod_destroy(cpfskmod _q);


int cpfskmod_print(cpfskmod _q);


int cpfskmod_reset(cpfskmod _q);


unsigned int cpfskmod_get_delay(cpfskmod _q);





int cpfskmod_modulate(cpfskmod _q,
                      unsigned int _s,
                      liquid_float_complex * _y);




typedef struct cpfskdem_s * cpfskdem;
# 7611 "/usr/local/include/liquid/liquid.h" 3
cpfskdem cpfskdem_create(unsigned int _bps,
                         float _h,
                         unsigned int _k,
                         unsigned int _m,
                         float _beta,
                         int _type);




int cpfskdem_destroy(cpfskdem _q);


int cpfskdem_print(cpfskdem _q);


int cpfskdem_reset(cpfskdem _q);


unsigned int cpfskdem_get_delay(cpfskdem _q);
# 7648 "/usr/local/include/liquid/liquid.h" 3
unsigned int cpfskdem_demodulate(cpfskdem _q,
                                 liquid_float_complex * _y);
# 7659 "/usr/local/include/liquid/liquid.h" 3
typedef struct fskmod_s * fskmod;





fskmod fskmod_create(unsigned int _m,
                     unsigned int _k,
                     float _bandwidth);


int fskmod_destroy(fskmod _q);


int fskmod_print(fskmod _q);


int fskmod_reset(fskmod _q);





int fskmod_modulate(fskmod _q,
                    unsigned int _s,
                    liquid_float_complex * _y);




typedef struct fskdem_s * fskdem;





fskdem fskdem_create(unsigned int _m,
                     unsigned int _k,
                     float _bandwidth);


int fskdem_destroy(fskdem _q);


int fskdem_print(fskdem _q);


int fskdem_reset(fskdem _q);




unsigned int fskdem_demodulate(fskdem _q,
                               liquid_float_complex * _y);


float fskdem_get_frequency_error(fskdem _q);


float fskdem_get_symbol_energy(fskdem _q,
                               unsigned int _s,
                               unsigned int _range);
# 7770 "/usr/local/include/liquid/liquid.h" 3
typedef struct freqmod_s * freqmod; freqmod freqmod_create(float _kf); int freqmod_destroy(freqmod _q); int freqmod_print(freqmod _q); int freqmod_reset(freqmod _q); int freqmod_modulate(freqmod _q, float _m, liquid_float_complex * _s); int freqmod_modulate_block(freqmod _q, float * _m, unsigned int _n, liquid_float_complex * _s);
# 7817 "/usr/local/include/liquid/liquid.h" 3
typedef struct freqdem_s * freqdem; freqdem freqdem_create(float _kf); int freqdem_destroy(freqdem _q); int freqdem_print(freqdem _q); int freqdem_reset(freqdem _q); int freqdem_demodulate(freqdem _q, liquid_float_complex _r, float * _m); int freqdem_demodulate_block(freqdem _q, liquid_float_complex * _r, unsigned int _n, float * _m);




typedef enum {
    LIQUID_AMPMODEM_DSB=0,
    LIQUID_AMPMODEM_USB,
    LIQUID_AMPMODEM_LSB
} liquid_ampmodem_type;

typedef struct ampmodem_s * ampmodem;





ampmodem ampmodem_create(float _mod_index,
                         liquid_ampmodem_type _type,
                         int _suppressed_carrier);


int ampmodem_destroy(ampmodem _q);


int ampmodem_print(ampmodem _q);


int ampmodem_reset(ampmodem _q);


unsigned int ampmodem_get_delay_mod (ampmodem _q);
unsigned int ampmodem_get_delay_demod(ampmodem _q);


int ampmodem_modulate(ampmodem _q,
                      float _x,
                      liquid_float_complex * _y);

int ampmodem_modulate_block(ampmodem _q,
                            float * _m,
                            unsigned int _n,
                            liquid_float_complex * _s);


int ampmodem_demodulate(ampmodem _q,
                        liquid_float_complex _y,
                        float * _x);

int ampmodem_demodulate_block(ampmodem _q,
                              liquid_float_complex * _r,
                              unsigned int _n,
                              float * _m);
# 7959 "/usr/local/include/liquid/liquid.h" 3
typedef struct firpfbch_crcf_s * firpfbch_crcf; firpfbch_crcf firpfbch_crcf_create(int _type, unsigned int _M, unsigned int _p, float * _h); firpfbch_crcf firpfbch_crcf_create_kaiser(int _type, unsigned int _M, unsigned int _m, float _As); firpfbch_crcf firpfbch_crcf_create_rnyquist(int _type, unsigned int _M, unsigned int _m, float _beta, int _ftype); int firpfbch_crcf_destroy(firpfbch_crcf _q); int firpfbch_crcf_reset(firpfbch_crcf _q); int firpfbch_crcf_print(firpfbch_crcf _q); int firpfbch_crcf_synthesizer_execute(firpfbch_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y); int firpfbch_crcf_analyzer_execute(firpfbch_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y);




typedef struct firpfbch_cccf_s * firpfbch_cccf; firpfbch_cccf firpfbch_cccf_create(int _type, unsigned int _M, unsigned int _p, liquid_float_complex * _h); firpfbch_cccf firpfbch_cccf_create_kaiser(int _type, unsigned int _M, unsigned int _m, float _As); firpfbch_cccf firpfbch_cccf_create_rnyquist(int _type, unsigned int _M, unsigned int _m, float _beta, int _ftype); int firpfbch_cccf_destroy(firpfbch_cccf _q); int firpfbch_cccf_reset(firpfbch_cccf _q); int firpfbch_cccf_print(firpfbch_cccf _q); int firpfbch_cccf_synthesizer_execute(firpfbch_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y); int firpfbch_cccf_analyzer_execute(firpfbch_cccf _q, liquid_float_complex * _x, liquid_float_complex * _y);
# 8033 "/usr/local/include/liquid/liquid.h" 3
typedef struct firpfbch2_crcf_s * firpfbch2_crcf; firpfbch2_crcf firpfbch2_crcf_create(int _type, unsigned int _M, unsigned int _m, float * _h); firpfbch2_crcf firpfbch2_crcf_create_kaiser(int _type, unsigned int _M, unsigned int _m, float _As); int firpfbch2_crcf_destroy(firpfbch2_crcf _q); int firpfbch2_crcf_reset(firpfbch2_crcf _q); int firpfbch2_crcf_print(firpfbch2_crcf _q); int firpfbch2_crcf_get_type(firpfbch2_crcf _q); unsigned int firpfbch2_crcf_get_M(firpfbch2_crcf _q); unsigned int firpfbch2_crcf_get_m(firpfbch2_crcf _q); int firpfbch2_crcf_execute(firpfbch2_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y);
# 8102 "/usr/local/include/liquid/liquid.h" 3
typedef struct firpfbchr_crcf_s * firpfbchr_crcf; firpfbchr_crcf firpfbchr_crcf_create(unsigned int _M, unsigned int _P, unsigned int _m, float * _h); firpfbchr_crcf firpfbchr_crcf_create_kaiser(unsigned int _M, unsigned int _P, unsigned int _m, float _As); int firpfbchr_crcf_destroy(firpfbchr_crcf _q); int firpfbchr_crcf_reset(firpfbchr_crcf _q); int firpfbchr_crcf_print(firpfbchr_crcf _q); unsigned int firpfbchr_crcf_get_M(firpfbchr_crcf _q); unsigned int firpfbchr_crcf_get_P(firpfbchr_crcf _q); unsigned int firpfbchr_crcf_get_m(firpfbchr_crcf _q); int firpfbchr_crcf_push(firpfbchr_crcf _q, liquid_float_complex * _x); int firpfbchr_crcf_execute(firpfbchr_crcf _q, liquid_float_complex * _y);
# 8116 "/usr/local/include/liquid/liquid.h" 3
int ofdmframe_init_default_sctype(unsigned int _M,
                                  unsigned char * _p);






int ofdmframe_init_sctype_range(unsigned int _M,
                                float _f0,
                                float _f1,
                                unsigned char * _p);
# 8136 "/usr/local/include/liquid/liquid.h" 3
int ofdmframe_validate_sctype(unsigned char * _p,
                              unsigned int _M,
                              unsigned int * _M_null,
                              unsigned int * _M_pilot,
                              unsigned int * _M_data);




int ofdmframe_print_sctype(unsigned char * _p,
                           unsigned int _M);





typedef struct ofdmframegen_s * ofdmframegen;






ofdmframegen ofdmframegen_create(unsigned int _M,
                                 unsigned int _cp_len,
                                 unsigned int _taper_len,
                                 unsigned char * _p);

int ofdmframegen_destroy(ofdmframegen _q);

int ofdmframegen_print(ofdmframegen _q);

int ofdmframegen_reset(ofdmframegen _q);


int ofdmframegen_write_S0a(ofdmframegen _q,
                           liquid_float_complex *_y);


int ofdmframegen_write_S0b(ofdmframegen _q,
                           liquid_float_complex *_y);


int ofdmframegen_write_S1(ofdmframegen _q,
                          liquid_float_complex *_y);


int ofdmframegen_writesymbol(ofdmframegen _q,
                             liquid_float_complex * _x,
                             liquid_float_complex *_y);


int ofdmframegen_writetail(ofdmframegen _q,
                           liquid_float_complex * _x);




typedef int (*ofdmframesync_callback)(liquid_float_complex * _y,
                                      unsigned char * _p,
                                      unsigned int _M,
                                      void * _userdata);
typedef struct ofdmframesync_s * ofdmframesync;
# 8207 "/usr/local/include/liquid/liquid.h" 3
ofdmframesync ofdmframesync_create(unsigned int _M,
                                   unsigned int _cp_len,
                                   unsigned int _taper_len,
                                   unsigned char * _p,
                                   ofdmframesync_callback _callback,
                                   void * _userdata);
int ofdmframesync_destroy(ofdmframesync _q);
int ofdmframesync_print(ofdmframesync _q);
int ofdmframesync_reset(ofdmframesync _q);
int ofdmframesync_is_frame_open(ofdmframesync _q);
int ofdmframesync_execute(ofdmframesync _q,
                          liquid_float_complex * _x,
                          unsigned int _n);


float ofdmframesync_get_rssi(ofdmframesync _q);
float ofdmframesync_get_cfo(ofdmframesync _q);


int ofdmframesync_set_cfo(ofdmframesync _q, float _cfo);


int ofdmframesync_debug_enable(ofdmframesync _q);
int ofdmframesync_debug_disable(ofdmframesync _q);
int ofdmframesync_debug_print(ofdmframesync _q, const char * _filename);
# 8241 "/usr/local/include/liquid/liquid.h" 3
typedef enum {
    LIQUID_NCO=0,
    LIQUID_VCO
} liquid_ncotype;
# 8381 "/usr/local/include/liquid/liquid.h" 3
typedef struct nco_crcf_s * nco_crcf; nco_crcf nco_crcf_create(liquid_ncotype _type); int nco_crcf_destroy(nco_crcf _q); int nco_crcf_print(nco_crcf _q); int nco_crcf_reset(nco_crcf _q); float nco_crcf_get_frequency(nco_crcf _q); int nco_crcf_set_frequency(nco_crcf _q, float _dtheta); int nco_crcf_adjust_frequency(nco_crcf _q, float _step); float nco_crcf_get_phase(nco_crcf _q); int nco_crcf_set_phase(nco_crcf _q, float _phi); int nco_crcf_adjust_phase(nco_crcf _q, float _dphi); int nco_crcf_step(nco_crcf _q); float nco_crcf_sin(nco_crcf _q); float nco_crcf_cos(nco_crcf _q); int nco_crcf_sincos(nco_crcf _q, float * _s, float * _c); int nco_crcf_cexpf(nco_crcf _q, liquid_float_complex * _y); int nco_crcf_pll_set_bandwidth(nco_crcf _q, float _bw); int nco_crcf_pll_step(nco_crcf _q, float _dphi); int nco_crcf_mix_up(nco_crcf _q, liquid_float_complex _x, liquid_float_complex * _y); int nco_crcf_mix_down(nco_crcf _q, liquid_float_complex _x, liquid_float_complex * _y); int nco_crcf_mix_block_up(nco_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y, unsigned int _n); int nco_crcf_mix_block_down(nco_crcf _q, liquid_float_complex * _x, liquid_float_complex * _y, unsigned int _n);





void liquid_unwrap_phase(float * _theta, unsigned int _n);


void liquid_unwrap_phase2(float * _theta, unsigned int _n);
# 8458 "/usr/local/include/liquid/liquid.h" 3
typedef struct synth_crcf_s * synth_crcf; synth_crcf synth_crcf_create(const liquid_float_complex *_table, unsigned int _length); void synth_crcf_destroy(synth_crcf _q); void synth_crcf_reset(synth_crcf _q); float synth_crcf_get_frequency( synth_crcf _q); void synth_crcf_set_frequency( synth_crcf _q, float _f); void synth_crcf_adjust_frequency(synth_crcf _q, float _df); float synth_crcf_get_phase( synth_crcf _q); void synth_crcf_set_phase( synth_crcf _q, float _phi); void synth_crcf_adjust_phase( synth_crcf _q, float _dphi); unsigned int synth_crcf_get_length(synth_crcf _q); liquid_float_complex synth_crcf_get_current(synth_crcf _q); liquid_float_complex synth_crcf_get_half_previous(synth_crcf _q); liquid_float_complex synth_crcf_get_half_next(synth_crcf _q); void synth_crcf_step(synth_crcf _q); void synth_crcf_pll_set_bandwidth(synth_crcf _q, float _bandwidth); void synth_crcf_pll_step(synth_crcf _q, float _dphi); void synth_crcf_mix_up(synth_crcf _q, liquid_float_complex _x, liquid_float_complex *_y); void synth_crcf_mix_down(synth_crcf _q, liquid_float_complex _x, liquid_float_complex *_y); void synth_crcf_mix_block_up(synth_crcf _q, liquid_float_complex *_x, liquid_float_complex *_y, unsigned int _N); void synth_crcf_mix_block_down(synth_crcf _q, liquid_float_complex *_x, liquid_float_complex *_y, unsigned int _N); void synth_crcf_spread(synth_crcf _q, liquid_float_complex _x, liquid_float_complex *_y); void synth_crcf_despread(synth_crcf _q, liquid_float_complex *_x, liquid_float_complex *_y); void synth_crcf_despread_triple(synth_crcf _q, liquid_float_complex *_x, liquid_float_complex *_early, liquid_float_complex *_punctual, liquid_float_complex *_late);
# 8467 "/usr/local/include/liquid/liquid.h" 3
typedef float (*utility_function)(void * _userdata,
                                  float * _v,
                                  unsigned int _n);





float liquid_rosenbrock(void * _userdata,
                        float * _v,
                        unsigned int _n);





float liquid_invgauss(void * _userdata,
                      float * _v,
                      unsigned int _n);





float liquid_multimodal(void * _userdata,
                        float * _v,
                        unsigned int _n);





float liquid_spiral(void * _userdata,
                    float * _v,
                    unsigned int _n);
# 8511 "/usr/local/include/liquid/liquid.h" 3
typedef struct gradsearch_s * gradsearch;







gradsearch gradsearch_create(void * _userdata,
                             float * _v,
                             unsigned int _num_parameters,
                             utility_function _utility,
                             int _direction);


void gradsearch_destroy(gradsearch _q);


void gradsearch_print(gradsearch _q);


float gradsearch_step(gradsearch _q);


float gradsearch_execute(gradsearch _q,
                         unsigned int _max_iterations,
                         float _target_utility);



typedef struct qnsearch_s * qnsearch;







qnsearch qnsearch_create(void * _userdata,
                         float * _v,
                         unsigned int _num_parameters,
                         utility_function _u,
                         int _direction);


int qnsearch_destroy(qnsearch _g);


int qnsearch_print(qnsearch _g);


int qnsearch_reset(qnsearch _g);


int qnsearch_step(qnsearch _g);


float qnsearch_execute(qnsearch _g,
                       unsigned int _max_iterations,
                       float _target_utility);




typedef struct chromosome_s * chromosome;


chromosome chromosome_create(unsigned int * _bits_per_trait,
                             unsigned int _num_traits);


chromosome chromosome_create_basic(unsigned int _num_traits,
                                   unsigned int _bits_per_trait);


chromosome chromosome_create_clone(chromosome _parent);



int chromosome_copy(chromosome _parent, chromosome _child);


int chromosome_destroy(chromosome _c);


unsigned int chromosome_get_num_traits(chromosome _c);


int chromosome_print(chromosome _c);


int chromosome_printf(chromosome _c);


int chromosome_reset(chromosome _c);


int chromosome_init(chromosome _c,
                     unsigned int * _v);


int chromosome_initf(chromosome _c, float * _v);


int chromosome_mutate(chromosome _c, unsigned int _index);


int chromosome_crossover(chromosome _p1,
                         chromosome _p2,
                         chromosome _c,
                         unsigned int _threshold);


int chromosome_init_random(chromosome _c);


unsigned int chromosome_value(chromosome _c,
                               unsigned int _index);


float chromosome_valuef(chromosome _c,
                        unsigned int _index);




typedef struct gasearch_s * gasearch;

typedef float (*gasearch_utility)(void * _userdata, chromosome _c);






gasearch gasearch_create(gasearch_utility _u,
                         void * _userdata,
                         chromosome _parent,
                         int _minmax);
# 8658 "/usr/local/include/liquid/liquid.h" 3
gasearch gasearch_create_advanced(gasearch_utility _utility,
                                  void * _userdata,
                                  chromosome _parent,
                                  int _minmax,
                                  unsigned int _population_size,
                                  float _mutation_rate);



int gasearch_destroy(gasearch _q);


int gasearch_print(gasearch _q);


int gasearch_set_mutation_rate(gasearch _q,
                               float _mutation_rate);





int gasearch_set_population_size(gasearch _q,
                                 unsigned int _population_size,
                                 unsigned int _selection_size);





float gasearch_run(gasearch _q,
                   unsigned int _max_iterations,
                   float _target_utility);


int gasearch_evolve(gasearch _q);





int gasearch_getopt(gasearch _q,
                    chromosome _c,
                    float * _utility_opt);





float compress_mulaw(float _x, float _mu);
float expand_mulaw(float _x, float _mu);

int compress_cf_mulaw(liquid_float_complex _x, float _mu, liquid_float_complex * _y);
int expand_cf_mulaw(liquid_float_complex _y, float _mu, liquid_float_complex * _x);





unsigned int quantize_adc(float _x, unsigned int _num_bits);
float quantize_dac(unsigned int _s, unsigned int _num_bits);



typedef enum {
    LIQUID_COMPANDER_NONE=0,
    LIQUID_COMPANDER_LINEAR,
    LIQUID_COMPANDER_MULAW,
    LIQUID_COMPANDER_ALAW
} liquid_compander_type;
# 8774 "/usr/local/include/liquid/liquid.h" 3
typedef struct quantizerf_s * quantizerf; quantizerf quantizerf_create(liquid_compander_type _ctype, float _range, unsigned int _num_bits); int quantizerf_destroy(quantizerf _q); int quantizerf_print(quantizerf _q); int quantizerf_execute_adc(quantizerf _q, float _x, unsigned int * _s); int quantizerf_execute_dac(quantizerf _q, unsigned int _s, float * _x);
typedef struct quantizercf_s * quantizercf; quantizercf quantizercf_create(liquid_compander_type _ctype, float _range, unsigned int _num_bits); int quantizercf_destroy(quantizercf _q); int quantizercf_print(quantizercf _q); int quantizercf_execute_adc(quantizercf _q, liquid_float_complex _x, unsigned int * _s); int quantizercf_execute_dac(quantizercf _q, unsigned int _s, liquid_float_complex * _x);
# 8784 "/usr/local/include/liquid/liquid.h" 3
float randf();
float randf_pdf(float _x);
float randf_cdf(float _x);


float randuf(float _a, float _b);
float randuf_pdf(float _x, float _a, float _b);
float randuf_cdf(float _x, float _a, float _b);
# 8800 "/usr/local/include/liquid/liquid.h" 3
float randnf();
void awgn(float *_x, float _nstd);
void crandnf(liquid_float_complex *_y);
void cawgn(liquid_float_complex *_x, float _nstd);
float randnf_pdf(float _x, float _eta, float _sig);
float randnf_cdf(float _x, float _eta, float _sig);






float randexpf(float _lambda);
float randexpf_pdf(float _x, float _lambda);
float randexpf_cdf(float _x, float _lambda);
# 8823 "/usr/local/include/liquid/liquid.h" 3
float randweibf(float _alpha, float _beta, float _gamma);
float randweibf_pdf(float _x, float _a, float _b, float _g);
float randweibf_cdf(float _x, float _a, float _b, float _g);
# 8836 "/usr/local/include/liquid/liquid.h" 3
float randgammaf(float _alpha, float _beta);
float randgammaf_pdf(float _x, float _alpha, float _beta);
float randgammaf_cdf(float _x, float _alpha, float _beta);
# 8847 "/usr/local/include/liquid/liquid.h" 3
float randnakmf(float _m, float _omega);
float randnakmf_pdf(float _x, float _m, float _omega);
float randnakmf_cdf(float _x, float _m, float _omega);
# 8861 "/usr/local/include/liquid/liquid.h" 3
float randricekf(float _K, float _omega);
float randricekf_cdf(float _x, float _K, float _omega);
float randricekf_pdf(float _x, float _K, float _omega);



void scramble_data(unsigned char * _x, unsigned int _len);
void unscramble_data(unsigned char * _x, unsigned int _len);
void unscramble_data_soft(unsigned char * _x, unsigned int _len);







typedef struct bsequence_s * bsequence;


bsequence bsequence_create(unsigned int num_bits);


int bsequence_destroy(bsequence _bs);


int bsequence_reset(bsequence _bs);


int bsequence_init(bsequence _bs,
                   unsigned char * _v);


int bsequence_print(bsequence _bs);


int bsequence_push(bsequence _bs,
                   unsigned int _bit);


int bsequence_circshift(bsequence _bs);


int bsequence_correlate(bsequence _bs1, bsequence _bs2);


int bsequence_add(bsequence _bs1, bsequence _bs2, bsequence _bs3);


int bsequence_mul(bsequence _bs1, bsequence _bs2, bsequence _bs3);


unsigned int bsequence_accumulate(bsequence _bs);


unsigned int bsequence_get_length(bsequence _bs);
unsigned int bsequence_index(bsequence _bs, unsigned int _i);







int bsequence_create_ccodes(bsequence _a, bsequence _b);
# 8947 "/usr/local/include/liquid/liquid.h" 3
typedef struct msequence_s * msequence;






msequence msequence_create(unsigned int _m,
                           unsigned int _g,
                           unsigned int _a);


msequence msequence_create_genpoly(unsigned int _g);


msequence msequence_create_default(unsigned int _m);


int msequence_destroy(msequence _m);


int msequence_print(msequence _m);


unsigned int msequence_advance(msequence _ms);





unsigned int msequence_generate_symbol(msequence _ms,
                                       unsigned int _bps);


int msequence_reset(msequence _ms);




int bsequence_init_msequence(bsequence _bs,
                             msequence _ms);


unsigned int msequence_get_length(msequence _ms);


unsigned int msequence_get_state(msequence _ms);


int msequence_set_state(msequence _ms,
                        unsigned int _a);
# 9010 "/usr/local/include/liquid/liquid.h" 3
int liquid_pack_array(unsigned char * _src,
                      unsigned int _n,
                      unsigned int _k,
                      unsigned int _b,
                      unsigned char _sym_in);







int liquid_unpack_array(unsigned char * _src,
                        unsigned int _n,
                        unsigned int _k,
                        unsigned int _b,
                        unsigned char * _sym_out);







int liquid_pack_bytes(unsigned char * _sym_in,
                      unsigned int _sym_in_len,
                      unsigned char * _sym_out,
                      unsigned int _sym_out_len,
                      unsigned int * _num_written);







int liquid_unpack_bytes(unsigned char * _sym_in,
                        unsigned int _sym_in_len,
                        unsigned char * _sym_out,
                        unsigned int _sym_out_len,
                        unsigned int * _num_written);
# 9060 "/usr/local/include/liquid/liquid.h" 3
int liquid_repack_bytes(unsigned char * _sym_in,
                        unsigned int _sym_in_bps,
                        unsigned int _sym_in_len,
                        unsigned char * _sym_out,
                        unsigned int _sym_out_bps,
                        unsigned int _sym_out_len,
                        unsigned int * _num_written);





int liquid_lbshift(unsigned char * _src,
                   unsigned int _n,
                   unsigned int _b);





int liquid_rbshift(unsigned char * _src,
                   unsigned int _n,
                   unsigned int _b);





int liquid_lbcircshift(unsigned char * _src,
                       unsigned int _n,
                       unsigned int _b);





int liquid_rbcircshift(unsigned char * _src,
                       unsigned int _n,
                       unsigned int _b);





int liquid_lshift(unsigned char * _src,
                  unsigned int _n,
                  unsigned int _b);





int liquid_rshift(unsigned char * _src,
                  unsigned int _n,
                  unsigned int _b);





int liquid_lcircshift(unsigned char * _src,
                      unsigned int _n,
                      unsigned int _b);





int liquid_rcircshift(unsigned char * _src,
                      unsigned int _n,
                      unsigned int _b);


unsigned int liquid_count_ones(unsigned int _x);


unsigned int liquid_count_ones_mod2(unsigned int _x);


unsigned int liquid_bdotprod(unsigned int _x,
                             unsigned int _y);


unsigned int liquid_count_leading_zeros(unsigned int _x);


unsigned int liquid_msb_index(unsigned int _x);


int liquid_print_bitstring(unsigned int _x, unsigned int _n);


unsigned char liquid_reverse_byte( unsigned char _x);
unsigned int liquid_reverse_uint16(unsigned int _x);
unsigned int liquid_reverse_uint24(unsigned int _x);
unsigned int liquid_reverse_uint32(unsigned int _x);





int liquid_get_scale(float _val,
                     char * _unit,
                     float * _scale);
# 9240 "/usr/local/include/liquid/liquid.h" 3
void liquid_vectorf_init(float _c, float * _x, unsigned int _n); void liquid_vectorf_add(float * _x, float * _y, unsigned int _n, float * _z); void liquid_vectorf_addscalar(float * _x, unsigned int _n, float _c, float * _y); void liquid_vectorf_mul(float * _x, float * _y, unsigned int _n, float * _z); void liquid_vectorf_mulscalar(float * _x, unsigned int _n, float _c, float * _y); void liquid_vectorf_cexpj(float * _theta, unsigned int _n, float * _x); void liquid_vectorf_carg(float * _x, unsigned int _n, float * _theta); void liquid_vectorf_abs(float * _x, unsigned int _n, float * _y); float liquid_vectorf_sumsq(float * _x, unsigned int _n); float liquid_vectorf_norm(float * _x, unsigned int _n); float liquid_vectorf_pnorm(float * _x, unsigned int _n, float _p); void liquid_vectorf_normalize(float * _x, unsigned int _n, float * _y);
void liquid_vectorcf_init(liquid_float_complex _c, liquid_float_complex * _x, unsigned int _n); void liquid_vectorcf_add(liquid_float_complex * _x, liquid_float_complex * _y, unsigned int _n, liquid_float_complex * _z); void liquid_vectorcf_addscalar(liquid_float_complex * _x, unsigned int _n, liquid_float_complex _c, liquid_float_complex * _y); void liquid_vectorcf_mul(liquid_float_complex * _x, liquid_float_complex * _y, unsigned int _n, liquid_float_complex * _z); void liquid_vectorcf_mulscalar(liquid_float_complex * _x, unsigned int _n, liquid_float_complex _c, liquid_float_complex * _y); void liquid_vectorcf_cexpj(float * _theta, unsigned int _n, liquid_float_complex * _x); void liquid_vectorcf_carg(liquid_float_complex * _x, unsigned int _n, float * _theta); void liquid_vectorcf_abs(liquid_float_complex * _x, unsigned int _n, float * _y); float liquid_vectorcf_sumsq(liquid_float_complex * _x, unsigned int _n); float liquid_vectorcf_norm(liquid_float_complex * _x, unsigned int _n); float liquid_vectorcf_pnorm(liquid_float_complex * _x, unsigned int _n, float _p); void liquid_vectorcf_normalize(liquid_float_complex * _x, unsigned int _n, liquid_float_complex * _y);
# 4 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 2
# 15 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"

# 15 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
extern int packet_data_length_with_fec;



typedef enum fec_scheme_type {

 LDPC = 1,
 R_S = 2

}fec_scheme_type;





typedef struct packet_t {

 fec_scheme_type selected_fec_scheme;
 uint16_t total_num_packets;
 uint16_t current_packet_num;
 uint8_t *data;
 uint32_t crc;

} packet_t;


# 40 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 40 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    applyFEC(uint8_t* input);

# 41 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 41 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    removeFEC(uint8_t* input);

# 42 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 42 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    checkCRC(packet_t* received_packet);

# 43 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 43 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    getCRC(packet_t* packet);

# 44 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 44 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    applyScrambling(uint8_t* input, unsigned int input_length);

# 45 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 45 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    removeScrambling(uint8_t* input, unsigned int input_length);

# 46 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 46 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    applyInterleaving(uint8_t* input, unsigned int input_length);

# 47 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 47 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    removeInterleaving(uint8_t* input, unsigned int input_length);

# 48 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 48 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    getMaximumLengthSequencePreamble(uint8_t** mls_preamble, unsigned int* mls_preamble_length);

# 49 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 49 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    syncFrameUsingMLSPreamble(uint8_t* input, unsigned int* byte_index, unsigned int* bit_index);

# 50 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 50 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    assembleFrame(uint8_t** frame, unsigned int* frame_length, uint8_t* packet, unsigned int packet_length);

# 51 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 51 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    disassembleFrame(uint8_t* frame, uint8_t** packet, unsigned int frame_length);

# 52 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 52 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    assemblePacket(packet_t* packet_data, uint8_t** packet, unsigned int* packet_length);

# 53 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 53 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    disassemblePacket(packet_t* packet_data, uint8_t* packet, unsigned int packet_length);

# 54 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 54 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    fragmentDataBufferIntoFrames(uint8_t* input, unsigned int input_length, uint8_t* output, unsigned int output_length);

# 55 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h" 3 4
_Bool 
# 55 "/home/josh/laser_satellite_receiver/c_project/packet_frame.h"
    assembleFramesIntoDataBuffer(uint8_t* input, unsigned int input_length, uint8_t* output, unsigned int output_length);
# 2 "/home/josh/laser_satellite_receiver/c_project/test.c" 2
# 1 "/home/josh/laser_satellite_receiver/c_project/channel.h" 1
# 17 "/home/josh/laser_satellite_receiver/c_project/channel.h"
typedef enum chnl_state {
 GOOD_UNS,
 BAD_UNS,
 BAD_S,
 GOOD_S
} chnl_state;


# 24 "/home/josh/laser_satellite_receiver/c_project/channel.h" 3 4
_Bool 
# 24 "/home/josh/laser_satellite_receiver/c_project/channel.h"
    applyChannel(uint8_t* input, unsigned int input_length);
# 3 "/home/josh/laser_satellite_receiver/c_project/test.c" 2
# 1 "/home/josh/laser_satellite_receiver/c_project/laser_comms.h" 1



void say_hello();
# 4 "/home/josh/laser_satellite_receiver/c_project/test.c" 2



# 1 "/usr/include/stdlib.h" 1 3 4
# 25 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 26 "/usr/include/stdlib.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 209 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4

# 209 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 321 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4
typedef int wchar_t;
# 32 "/usr/include/stdlib.h" 2 3 4







# 1 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 1 3 4
# 52 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3 4
typedef enum
{
  P_ALL,
  P_PID,
  P_PGID
} idtype_t;
# 40 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 1 3 4
# 41 "/usr/include/stdlib.h" 2 3 4
# 58 "/usr/include/stdlib.h" 3 4
typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;





__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 97 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;



extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 176 "/usr/include/stdlib.h" 3 4
extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 385 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern long int a64l (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;




# 1 "/usr/include/x86_64-linux-gnu/sys/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4






typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;


typedef __loff_t loff_t;




typedef __ino_t ino_t;
# 59 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;
# 97 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;




# 1 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 1 3 4






typedef __clock_t clock_t;
# 127 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 1 3 4






typedef __clockid_t clockid_t;
# 129 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 1 3 4






typedef __time_t time_t;
# 130 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 1 3 4






typedef __timer_t timer_t;
# 131 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 144 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 145 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;







typedef __uint8_t u_int8_t;
typedef __uint16_t u_int16_t;
typedef __uint32_t u_int32_t;
typedef __uint64_t u_int64_t;


typedef int register_t __attribute__ ((__mode__ (__word__)));
# 176 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 24 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endian.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endianness.h" 1 3 4
# 36 "/usr/include/x86_64-linux-gnu/bits/endian.h" 2 3 4
# 25 "/usr/include/endian.h" 2 3 4
# 35 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline __uint16_t
__bswap_16 (__uint16_t __bsx)
{

  return __builtin_bswap16 (__bsx);



}






static __inline __uint32_t
__bswap_32 (__uint32_t __bsx)
{

  return __builtin_bswap32 (__bsx);



}
# 69 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
__extension__ static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{

  return __builtin_bswap64 (__bsx);



}
# 36 "/usr/include/endian.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 1 3 4
# 32 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3 4
static __inline __uint16_t
__uint16_identity (__uint16_t __x)
{
  return __x;
}

static __inline __uint32_t
__uint32_identity (__uint32_t __x)
{
  return __x;
}

static __inline __uint64_t
__uint64_identity (__uint64_t __x)
{
  return __x;
}
# 37 "/usr/include/endian.h" 2 3 4
# 177 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/sys/select.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/select.h" 2 3 4
# 31 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 1 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 1 3 4




typedef struct
{
  unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
} __sigset_t;
# 5 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 2 3 4


typedef __sigset_t sigset_t;
# 34 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 1 3 4







struct timeval
{
  __time_t tv_sec;
  __suseconds_t tv_usec;
};
# 38 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
struct timespec
{
  __time_t tv_sec;



  __syscall_slong_t tv_nsec;
# 26 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
};
# 40 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



typedef __suseconds_t suseconds_t;





typedef long int __fd_mask;
# 59 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 91 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4

# 101 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 113 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 126 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4

# 180 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 227 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 1 3 4
# 44 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 1 3 4
# 21 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 2 3 4
# 45 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;

typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;
# 74 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
struct __pthread_mutex_s
{
  int __lock;
  unsigned int __count;
  int __owner;

  unsigned int __nusers;



  int __kind;

  short __spins;
  short __elision;
  __pthread_list_t __list;
# 53 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
};
# 75 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4
# 87 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
struct __pthread_rwlock_arch_t
{
  unsigned int __readers;
  unsigned int __writers;
  unsigned int __wrphase_futex;
  unsigned int __writers_futex;
  unsigned int __pad3;
  unsigned int __pad4;

  int __cur_writer;
  int __shared;
  signed char __rwelision;




  unsigned char __pad1[7];


  unsigned long int __pad2;


  unsigned int __flags;
# 55 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
};
# 88 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




struct __pthread_cond_s
{
  __extension__ union
  {
    __extension__ unsigned long long int __wseq;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __wseq32;
  };
  __extension__ union
  {
    __extension__ unsigned long long int __g1_start;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __g1_start32;
  };
  unsigned int __g_refs[2] ;
  unsigned int __g_size[2];
  unsigned int __g1_orig_size;
  unsigned int __wrefs;
  unsigned int __g_signals[2];
};
# 24 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 2 3 4



typedef unsigned long int pthread_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;




typedef union
{
  struct __pthread_mutex_s __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;


typedef union
{
  struct __pthread_cond_s __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;





typedef union
{
  struct __pthread_rwlock_arch_t __data;
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 228 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



# 395 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));



extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));







extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (1, 2))) ;






extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__)) __attribute__ ((__alloc_size__ (2)));







extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__))
     __attribute__ ((__alloc_size__ (2, 3)));



extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));


# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));






# 569 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;




extern void *aligned_alloc (size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (2))) ;



extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int at_quick_exit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));





extern void quick_exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));





extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 647 "/usr/include/stdlib.h" 3 4
extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
# 675 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 688 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 710 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 731 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 784 "/usr/include/stdlib.h" 3 4
extern int system (const char *__command) ;
# 800 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) ;






typedef int (*__compar_fn_t) (const void *, const void *);
# 820 "/usr/include/stdlib.h" 3 4
extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;







extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 840 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;


__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;






extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;


__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
# 872 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));





extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__));



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));







extern int rpmatch (const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 957 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;
# 1003 "/usr/include/stdlib.h" 3 4
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1013 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 1 3 4
# 1014 "/usr/include/stdlib.h" 2 3 4
# 1023 "/usr/include/stdlib.h" 3 4

# 8 "/home/josh/laser_satellite_receiver/c_project/test.c" 2
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 34 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 37 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 1 3 4




# 1 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 1 3 4
# 13 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3 4
typedef struct
{
  int __count;
  union
  {
    unsigned int __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;
# 6 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 2 3 4




typedef struct _G_fpos_t
{
  __off_t __pos;
  __mbstate_t __state;
} __fpos_t;
# 40 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3 4
typedef struct _G_fpos64_t
{
  __off64_t __pos;
  __mbstate_t __state;
} __fpos64_t;
# 41 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h" 1 3 4



struct _IO_FILE;
typedef struct _IO_FILE __FILE;
# 42 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h" 1 3 4



struct _IO_FILE;


typedef struct _IO_FILE FILE;
# 43 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3 4
struct _IO_FILE;
struct _IO_marker;
struct _IO_codecvt;
struct _IO_wide_data;




typedef void _IO_lock_t;





struct _IO_FILE
{
  int _flags;


  char *_IO_read_ptr;
  char *_IO_read_end;
  char *_IO_read_base;
  char *_IO_write_base;
  char *_IO_write_ptr;
  char *_IO_write_end;
  char *_IO_buf_base;
  char *_IO_buf_end;


  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;
  int _flags2;
  __off_t _old_offset;


  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];

  _IO_lock_t *_lock;







  __off64_t _offset;

  struct _IO_codecvt *_codecvt;
  struct _IO_wide_data *_wide_data;
  struct _IO_FILE *_freeres_list;
  void *_freeres_buf;
  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];
};
# 44 "/usr/include/stdio.h" 2 3 4
# 52 "/usr/include/stdio.h" 3 4
typedef __gnuc_va_list va_list;
# 84 "/usr/include/stdio.h" 3 4
typedef __fpos_t fpos_t;
# 133 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdio_lim.h" 1 3 4
# 134 "/usr/include/stdio.h" 2 3 4



extern FILE *stdin;
extern FILE *stdout;
extern FILE *stderr;






extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));



extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) __attribute__ ((__nothrow__ , __leaf__));
# 173 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile (void) ;
# 187 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;




extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;
# 204 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;







extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);
# 227 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 246 "/usr/include/stdio.h" 3 4
extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 279 "/usr/include/stdio.h" 3 4
extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) ;
# 292 "/usr/include/stdio.h" 3 4
extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) ;





extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));




extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));







extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));



extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));
# 379 "/usr/include/stdio.h" 3 4
extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));







extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));






extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 432 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));




extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 485 "/usr/include/stdio.h" 3 4
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);






extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 510 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);
# 521 "/usr/include/stdio.h" 3 4
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);
# 537 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);







extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 603 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
                             size_t *__restrict __n, int __delimiter,
                             FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
                           size_t *__restrict __n, int __delimiter,
                           FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
                          size_t *__restrict __n,
                          FILE *__restrict __stream) ;







extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);
# 673 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);







extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);
# 707 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 731 "/usr/include/stdio.h" 3 4
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 757 "/usr/include/stdio.h" 3 4
extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;



extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;







extern void perror (const char *__s);





# 1 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];
# 782 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
# 800 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));
# 840 "/usr/include/stdio.h" 3 4
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 858 "/usr/include/stdio.h" 3 4
extern int __uflow (FILE *);
extern int __overflow (FILE *, int);
# 873 "/usr/include/stdio.h" 3 4

# 9 "/home/josh/laser_satellite_receiver/c_project/test.c" 2




# 12 "/home/josh/laser_satellite_receiver/c_project/test.c"
uint8_t * generateRandPacket(void) {
 uint8_t* data = (uint8_t*)malloc(packet_data_length_with_fec);
 for (int i = 0; i < 1000; i++) {
  data[i] = rand() & 0xff;
 }
 return data;
}
# 31 "/home/josh/laser_satellite_receiver/c_project/test.c"
void getFECDataLengths(void) {


 packet_data_length_with_fec = fec_get_enc_msg_length(LIQUID_FEC_HAMMING74, 1000);
}



# 38 "/home/josh/laser_satellite_receiver/c_project/test.c" 3 4
_Bool 
# 38 "/home/josh/laser_satellite_receiver/c_project/test.c"
    fullSendTest(void) {

 printf("test");
 say_hello();


 packet_t packet_data;
 packet_data.selected_fec_scheme = LDPC;
 uint8_t* packet_vector = 
# 46 "/home/josh/laser_satellite_receiver/c_project/test.c" 3 4
                         ((void *)0)
# 46 "/home/josh/laser_satellite_receiver/c_project/test.c"
                             ;
 unsigned int packet_length;
 unsigned int frame_length;
 uint8_t* frame_vector = 
# 49 "/home/josh/laser_satellite_receiver/c_project/test.c" 3 4
                        ((void *)0)
# 49 "/home/josh/laser_satellite_receiver/c_project/test.c"
                            ;

 packet_data.data = generateRandPacket();

 printf("Original Data:\n");
 for (unsigned int i = 0; i < 1000; i++) {
  printf("%d", packet_data.data[i]);
 }
 printf("\n\n");

 getCRC(&packet_data);


 applyFEC(packet_data.data);

 assemblePacket(&packet_data, &packet_vector, &packet_length);
 applyInterleaving(packet_vector, packet_length);


 assembleFrame(&frame_vector, &frame_length, packet_vector, packet_length);

 printf("Orignal frame:\n");
 for (unsigned int i = 0; i < frame_length; i++) {
  printf("%d", frame_vector[i]);
 }
 printf("\n\n");




 applyChannel(frame_vector, frame_length);
# 88 "/home/josh/laser_satellite_receiver/c_project/test.c"
 packet_t rxpacket_data;
 rxpacket_data.data = (uint8_t*)malloc(packet_data_length_with_fec);
 uint8_t* rxpacket_vector = 
# 90 "/home/josh/laser_satellite_receiver/c_project/test.c" 3 4
                           ((void *)0)
# 90 "/home/josh/laser_satellite_receiver/c_project/test.c"
                               ;
 unsigned int rxpacket_length = 0;

 disassembleFrame(frame_vector, &rxpacket_vector, frame_length);
 removeInterleaving(rxpacket_vector, packet_length);

 disassemblePacket(&rxpacket_data, rxpacket_vector, packet_length);
 removeFEC(rxpacket_data.data);

 printf("Received Data:\n");
 for (unsigned int i = 0; i < 1000; i++) {
  printf("%d", rxpacket_data.data[i]);
 }
 printf("\n\n");

 if (checkCRC(&rxpacket_data)) {
  printf("CRC Doesn't Match!\n\n");
 }
 else {
  printf("CRC Matches!\n\n");
 }



 free(packet_data.data);
 free(rxpacket_data.data);
 free(rxpacket_vector);
 free(packet_vector);
 free(frame_vector);
 return 0;
}
